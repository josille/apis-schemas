{
    "info": {
     "_postman_id": "",
     "name": "Contentful Content Delivery API",
     "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
     {
      "name": "CDA",
      "item": [
       {
        "name": "Space",
        "item": [
         {
          "name": "Get a space",
          "request": {
           "auth": {
            "type": "bearer",
            "bearer": [
             {
              "key": "token",
              "value": "{{cda_access_token}}",
              "type": "string"
             }
            ]
           },
           "method": "GET",
           "header": [],
           "url": {
            "raw": "https://{{cda_url}}/spaces/:space_id",
            "protocol": "https",
            "host": [
             "{{cda_url}}"
            ],
            "path": [
             "spaces",
             ":space_id"
            ],
            "variable": [
             {
              "key": "space_id",
              "value": "yadj1kx9rmg0",
              "type": "string",
              "description": "Alphanumeric id of the space to retrieve."
             },
             {
              "key": "access_token",
              "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
              "type": "string",
              "description": "A *production* Content Delivery API key."
             }
            ]
           },
           "description": "",
           "body": {
            "mode": "",
            "raw": "",
            "options": {
             "raw": {
              "language": ""
             }
            }
           }
          },
          "response": [
           {
            "name": "Get a space",
            "originalRequest": {
             "auth": {
              "type": "bearer",
              "bearer": [
               {
                "key": "token",
                "value": "{{cda_access_token}}",
                "type": "string"
               }
              ]
             },
             "method": "GET",
             "header": [],
             "url": {
              "raw": "https://{{cda_url}}/spaces/:space_id",
              "protocol": "https",
              "host": [
               "{{cda_url}}"
              ],
              "path": [
               "spaces",
               ":space_id"
              ],
              "variable": [
               {
                "key": "space_id",
                "value": "yadj1kx9rmg0",
                "type": "string",
                "description": "Alphanumeric id of the space to retrieve."
               },
               {
                "key": "access_token",
                "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
                "type": "string",
                "description": "A *production* Content Delivery API key."
               }
              ]
             },
             "description": "",
             "body": {
              "mode": "",
              "raw": "",
              "options": {
               "raw": {
                "language": ""
               }
              }
             }
            },
            "status": "",
            "code": 200,
            "header": [
             {
              "key": "Content-Type",
              "value": "application/vnd.contentful.delivery.v1+json",
              "description": ""
             }
            ],
            "cookie": null,
            "body": "{\n  \"sys\": {\n    \"type\": \"Space\",\n    \"id\": \"71rop70dkqaj\"\n  },\n  \"name\": \"Documentation examples\",\n  \"locales\": [\n    {\n      \"code\": \"en-US\",\n      \"default\": true,\n      \"name\": \"U.S. English\",\n      \"fallbackCode\": null\n    }\n  ]\n}\n"
           }
          ]
         }
        ],
        "description": "Each space has a name, a set of locales, and metadata about the space."
       },
       {
        "name": "Content model",
        "item": [
         {
          "name": "Get the content model of a space",
          "request": {
           "auth": {
            "type": "bearer",
            "bearer": [
             {
              "key": "token",
              "value": "{{cda_access_token}}",
              "type": "string"
             }
            ]
           },
           "method": "GET",
           "header": [],
           "url": {
            "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/content_types",
            "protocol": "https",
            "host": [
             "{{cda_url}}"
            ],
            "path": [
             "spaces",
             ":space_id",
             "environments",
             ":environment_id",
             "content_types"
            ],
            "variable": [
             {
              "key": "space_id",
              "value": "yadj1kx9rmg0",
              "type": "string",
              "description": "ID of the space in form of a string"
             },
             {
              "key": "environment_id",
              "value": "staging",
              "type": "string",
              "description": "ID of the environment in form of a string"
             },
             {
              "key": "access_token",
              "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
              "type": "string",
              "description": "A *production* Content Delivery API key."
             }
            ]
           },
           "description": "",
           "body": {
            "mode": "",
            "raw": "",
            "options": {
             "raw": {
              "language": ""
             }
            }
           }
          },
          "response": [
           {
            "name": "Get the content model of a space",
            "originalRequest": {
             "auth": {
              "type": "bearer",
              "bearer": [
               {
                "key": "token",
                "value": "{{cda_access_token}}",
                "type": "string"
               }
              ]
             },
             "method": "GET",
             "header": [],
             "url": {
              "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/content_types",
              "protocol": "https",
              "host": [
               "{{cda_url}}"
              ],
              "path": [
               "spaces",
               ":space_id",
               "environments",
               ":environment_id",
               "content_types"
              ],
              "variable": [
               {
                "key": "space_id",
                "value": "yadj1kx9rmg0",
                "type": "string",
                "description": "ID of the space in form of a string"
               },
               {
                "key": "environment_id",
                "value": "staging",
                "type": "string",
                "description": "ID of the environment in form of a string"
               },
               {
                "key": "access_token",
                "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
                "type": "string",
                "description": "A *production* Content Delivery API key."
               }
              ]
             },
             "description": "",
             "body": {
              "mode": "",
              "raw": "",
              "options": {
               "raw": {
                "language": ""
               }
              }
             }
            },
            "status": "",
            "code": 200,
            "header": [
             {
              "key": "Content-Type",
              "value": "application/vnd.contentful.delivery.v1+json",
              "description": ""
             }
            ],
            "cookie": null,
            "body": "{\n  \"sys\": {\n    \"type\": \"Array\"\n  },\n  \"total\": 0,\n  \"skip\": 0,\n  \"limit\": 100,\n  \"items\": []\n}"
           }
          ]
         }
        ]
       },
       {
        "name": "Content type",
        "item": [
         {
          "name": "Get a single content type",
          "request": {
           "auth": {
            "type": "bearer",
            "bearer": [
             {
              "key": "token",
              "value": "{{cda_access_token}}",
              "type": "string"
             }
            ]
           },
           "method": "GET",
           "header": [],
           "url": {
            "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/content_types/:content_type_id",
            "protocol": "https",
            "host": [
             "{{cda_url}}"
            ],
            "path": [
             "spaces",
             ":space_id",
             "environments",
             ":environment_id",
             "content_types",
             ":content_type_id"
            ],
            "variable": [
             {
              "key": "space_id",
              "value": "yadj1kx9rmg0",
              "type": "string",
              "description": "ID of the space in form of a string"
             },
             {
              "key": "environment_id",
              "value": "staging",
              "type": "string",
              "description": "ID of the environment in form of a string"
             },
             {
              "key": "content_type_id",
              "value": "2PqfXUJwE8qSYKuM0U6w8M",
              "type": "string",
              "description": "ID of the content type in form of a string"
             },
             {
              "key": "access_token",
              "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
              "type": "string",
              "description": "A *production* Content Delivery API key."
             }
            ]
           },
           "description": "",
           "body": {
            "mode": "",
            "raw": "",
            "options": {
             "raw": {
              "language": ""
             }
            }
           }
          },
          "response": [
           {
            "name": "Get a single content type",
            "originalRequest": {
             "auth": {
              "type": "bearer",
              "bearer": [
               {
                "key": "token",
                "value": "{{cda_access_token}}",
                "type": "string"
               }
              ]
             },
             "method": "GET",
             "header": [],
             "url": {
              "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/content_types/:content_type_id",
              "protocol": "https",
              "host": [
               "{{cda_url}}"
              ],
              "path": [
               "spaces",
               ":space_id",
               "environments",
               ":environment_id",
               "content_types",
               ":content_type_id"
              ],
              "variable": [
               {
                "key": "space_id",
                "value": "yadj1kx9rmg0",
                "type": "string",
                "description": "ID of the space in form of a string"
               },
               {
                "key": "environment_id",
                "value": "staging",
                "type": "string",
                "description": "ID of the environment in form of a string"
               },
               {
                "key": "content_type_id",
                "value": "2PqfXUJwE8qSYKuM0U6w8M",
                "type": "string",
                "description": "ID of the content type in form of a string"
               },
               {
                "key": "access_token",
                "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
                "type": "string",
                "description": "A *production* Content Delivery API key."
               }
              ]
             },
             "description": "",
             "body": {
              "mode": "",
              "raw": "",
              "options": {
               "raw": {
                "language": ""
               }
              }
             }
            },
            "status": "",
            "code": 200,
            "header": [
             {
              "key": "Content-Type",
              "value": "application/vnd.contentful.delivery.v1+json",
              "description": ""
             }
            ],
            "cookie": null,
            "body": "{\n  \"fields\": [\n    {\n      \"id\": \"productName\",\n      \"name\": \"Product name\",\n      \"type\": \"Text\",\n      \"required\": true,\n      \"localized\": false\n    },\n    {\n      \"id\": \"slug\",\n      \"name\": \"Slug\",\n      \"type\": \"Symbol\",\n      \"required\": false,\n      \"localized\": false\n    },\n    {\n      \"id\": \"productDescription\",\n      \"name\": \"Description\",\n      \"type\": \"Text\",\n      \"required\": false,\n      \"localized\": false\n    },\n    {\n      \"id\": \"sizetypecolor\",\n      \"name\": \"Size/Type/Color\",\n      \"type\": \"Symbol\",\n      \"required\": false,\n      \"localized\": false\n    },\n    {\n      \"id\": \"image\",\n      \"name\": \"Image\",\n      \"type\": \"Array\",\n      \"required\": false,\n      \"localized\": false,\n      \"items\": {\n        \"type\": \"Link\",\n        \"linkType\": \"Asset\"\n      }\n    },\n    {\n      \"id\": \"tags\",\n      \"name\": \"Tags\",\n      \"type\": \"Array\",\n      \"required\": false,\n      \"localized\": false,\n      \"items\": {\n        \"type\": \"Symbol\"\n      }\n    },\n    {\n      \"id\": \"categories\",\n      \"name\": \"Categories\",\n      \"type\": \"Array\",\n      \"required\": false,\n      \"localized\": false,\n      \"items\": {\n        \"type\": \"Link\",\n        \"validations\": \"\",\n        \"linkContentType\": \"6XwpTaSiiI2Ak2Ww0oi6qa\",\n        \"linkType\": \"Entry\"\n      }\n    },\n    {\n      \"id\": \"price\",\n      \"name\": \"Price\",\n      \"type\": \"Number\",\n      \"required\": false,\n      \"localized\": false,\n      \"disabled\": true\n    },\n    {\n      \"id\": \"brand\",\n      \"name\": \"Brand\",\n      \"type\": \"Link\",\n      \"required\": false,\n      \"localized\": false,\n      \"linkType\": \"Entry\"\n    },\n    {\n      \"id\": \"quantity\",\n      \"name\": \"Quantity\",\n      \"type\": \"Integer\",\n      \"required\": false,\n      \"localized\": false\n    },\n    {\n      \"id\": \"sku\",\n      \"name\": \"SKU\",\n      \"type\": \"Symbol\",\n      \"required\": false,\n      \"localized\": false\n    },\n    {\n      \"id\": \"website\",\n      \"name\": \"Available at\",\n      \"type\": \"Symbol\",\n      \"required\": false,\n      \"localized\": false\n    }\n  ],\n  \"sys\": {\n    \"space\": {\n      \"sys\": {\n        \"type\": \"Link\",\n        \"linkType\": \"Space\",\n        \"id\": \"yadj1kx9rmg0\"\n      }\n    },\n    \"type\": \"ContentType\",\n    \"id\": \"2PqfXUJwE8qSYKuM0U6w8M\",\n    \"createdAt\": \"2016-12-20T10:43:35.772Z\",\n    \"updatedAt\": \"2016-12-20T10:43:35.772Z\",\n    \"revision\": 1\n  },\n  \"name\": \"Product\",\n  \"displayField\": \"productName\"\n}"
           }
          ]
         }
        ]
       },
       {
        "name": "Entries collection",
        "item": [
         {
          "name": "Get all entries of a Space",
          "request": {
           "auth": {
            "type": "bearer",
            "bearer": [
             {
              "key": "token",
              "value": "{{cda_access_token}}",
              "type": "string"
             }
            ]
           },
           "method": "GET",
           "header": [],
           "url": {
            "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/entries",
            "protocol": "https",
            "host": [
             "{{cda_url}}"
            ],
            "path": [
             "spaces",
             ":space_id",
             "environments",
             ":environment_id",
             "entries"
            ],
            "variable": [
             {
              "key": "space_id",
              "value": "yadj1kx9rmg0",
              "type": "string",
              "description": "Alphanumeric id of the space to retrieve."
             },
             {
              "key": "environment_id",
              "value": "staging",
              "type": "string",
              "description": "ID of the environment in form of a string"
             },
             {
              "key": "access_token",
              "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
              "type": "string",
              "description": "A *production* Content Delivery API key."
             }
            ]
           },
           "description": "",
           "body": {
            "mode": "",
            "raw": "",
            "options": {
             "raw": {
              "language": ""
             }
            }
           }
          },
          "response": [
           {
            "name": "Get all entries of a Space",
            "originalRequest": {
             "auth": {
              "type": "bearer",
              "bearer": [
               {
                "key": "token",
                "value": "{{cda_access_token}}",
                "type": "string"
               }
              ]
             },
             "method": "GET",
             "header": [],
             "url": {
              "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/entries",
              "protocol": "https",
              "host": [
               "{{cda_url}}"
              ],
              "path": [
               "spaces",
               ":space_id",
               "environments",
               ":environment_id",
               "entries"
              ],
              "variable": [
               {
                "key": "space_id",
                "value": "yadj1kx9rmg0",
                "type": "string",
                "description": "Alphanumeric id of the space to retrieve."
               },
               {
                "key": "environment_id",
                "value": "staging",
                "type": "string",
                "description": "ID of the environment in form of a string"
               },
               {
                "key": "access_token",
                "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
                "type": "string",
                "description": "A *production* Content Delivery API key."
               }
              ]
             },
             "description": "",
             "body": {
              "mode": "",
              "raw": "",
              "options": {
               "raw": {
                "language": ""
               }
              }
             }
            },
            "status": "",
            "code": 200,
            "header": [
             {
              "key": "Content-Type",
              "value": "application/vnd.contentful.delivery.v1+json",
              "description": ""
             }
            ],
            "cookie": null,
            "body": "{\n  \"sys\": {\n    \"type\": \"Array\"\n  },\n  \"total\": 0,\n  \"skip\": 0,\n  \"limit\": 100,\n  \"items\": []\n}"
           }
          ]
         }
        ],
        "description": "In the JSON response of a successful query, linked items are placed in the `includes` array, when\nnot already fetched in the `items` array.\n\n**Note**: Links in the Delivery API will always only resolve to published entries. Unresolved items\nwill not be present in the `includes` array. The Preview API will include draft entries with the\nsame caveat that unresolved links will not appear in the `includes` array."
       },
       {
        "name": "Entry",
        "item": [
         {
          "name": "Get a single entry",
          "request": {
           "auth": {
            "type": "bearer",
            "bearer": [
             {
              "key": "token",
              "value": "{{cda_access_token}}",
              "type": "string"
             }
            ]
           },
           "method": "GET",
           "header": [],
           "url": {
            "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/entries/:entry_id",
            "protocol": "https",
            "host": [
             "{{cda_url}}"
            ],
            "path": [
             "spaces",
             ":space_id",
             "environments",
             ":environment_id",
             "entries",
             ":entry_id"
            ],
            "variable": [
             {
              "key": "space_id",
              "value": "yadj1kx9rmg0",
              "type": "string",
              "description": "Alphanumeric id of the space to retrieve."
             },
             {
              "key": "environment_id",
              "value": "staging",
              "type": "string",
              "description": "ID of the environment in form of a string"
             },
             {
              "key": "entry_id",
              "value": "5KsDBWseXY6QegucYAoacS",
              "type": "string",
              "description": "Alphanumeric id of the entry to retrieve"
             },
             {
              "key": "access_token",
              "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
              "type": "string",
              "description": "A *production* Content Delivery API key."
             }
            ]
           },
           "description": "",
           "body": {
            "mode": "",
            "raw": "",
            "options": {
             "raw": {
              "language": ""
             }
            }
           }
          },
          "response": [
           {
            "name": "Get a single entry",
            "originalRequest": {
             "auth": {
              "type": "bearer",
              "bearer": [
               {
                "key": "token",
                "value": "{{cda_access_token}}",
                "type": "string"
               }
              ]
             },
             "method": "GET",
             "header": [],
             "url": {
              "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/entries/:entry_id",
              "protocol": "https",
              "host": [
               "{{cda_url}}"
              ],
              "path": [
               "spaces",
               ":space_id",
               "environments",
               ":environment_id",
               "entries",
               ":entry_id"
              ],
              "variable": [
               {
                "key": "space_id",
                "value": "yadj1kx9rmg0",
                "type": "string",
                "description": "Alphanumeric id of the space to retrieve."
               },
               {
                "key": "environment_id",
                "value": "staging",
                "type": "string",
                "description": "ID of the environment in form of a string"
               },
               {
                "key": "entry_id",
                "value": "5KsDBWseXY6QegucYAoacS",
                "type": "string",
                "description": "Alphanumeric id of the entry to retrieve"
               },
               {
                "key": "access_token",
                "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
                "type": "string",
                "description": "A *production* Content Delivery API key."
               }
              ]
             },
             "description": "",
             "body": {
              "mode": "",
              "raw": "",
              "options": {
               "raw": {
                "language": ""
               }
              }
             }
            },
            "status": "",
            "code": 200,
            "header": [
             {
              "key": "Content-Type",
              "value": "application/vnd.contentful.delivery.v1+json",
              "description": ""
             }
            ],
            "cookie": null,
            "body": "{\n  \"fields\": {\n    \"title\": {\n      \"en-US\": \"Hello, World!\"\n    },\n    \"body\": {\n      \"en-US\": \"Bacon is healthy!\"\n    }\n  },\n  \"metadata\": {\n    \"tags\": [\n      {\n        \"sys\": {\n          \"type\": \"Link\",\n          \"linkType\": \"Tag\",\n          \"id\": \"nyCampaign\"\n        }\n      }\n    ]\n  },\n  \"sys\": {\n    \"id\": \"5KsDBWseXY6QegucYAoacS\",\n    \"type\": \"Entry\",\n    \"version\": 1,\n    \"space\": {\n      \"sys\": {\n        \"type\": \"Link\",\n        \"linkType\": \"Space\",\n        \"id\": \"yadj1kx9rmg0\"\n      }\n    },\n    \"contentType\": {\n      \"sys\": {\n        \"type\": \"Link\",\n        \"linkType\": \"ContentType\",\n        \"id\": \"hfM9RCJIk0wIm06WkEOQY\"\n      }\n    },\n    \"createdAt\": \"2016-12-20T10:43:35.772Z\",\n    \"updatedAt\": \"2016-12-20T10:43:35.772Z\",\n    \"revision\": 1\n  }\n}"
           }
          ]
         }
        ],
        "description": "The `include` array is not applicable while retrieving a single entry."
       },
       {
        "name": "Unresolved entries",
        "item": [
         {
          "name": "Unresolved entries",
          "request": {
           "auth": {
            "type": "bearer",
            "bearer": [
             {
              "key": "token",
              "value": "{{cda_access_token}}",
              "type": "string"
             }
            ]
           },
           "method": "",
           "header": null,
           "url": {
            "raw": "https://{{cda_url}}/spaces/{space_id}/environments/{environment_id}/entries",
            "protocol": "https",
            "host": [
             "{{cda_url}}"
            ],
            "path": [
             "spaces",
             ":space_id",
             "environments",
             ":environment_id",
             "entries"
            ],
            "variable": null
           },
           "description": "When querying an entry collection that contains at least one unresolvable reference (for example, an entry that was referenced by another entry has been deleted, or the referenced entry is **Archived** or in **Draft**), an `errors` array is returned in the response. This also occurs when there are permission issues.\n\nAn example of the errors array in the response:\n\n```json\n{\n  \"errors\": [\n    {\n      \"sys\": {\n        \"id\": \"notResolvable\",\n        \"type\": \"error\"\n      },\n      \"details\": {\n        \"type\": \"Link\",\n        \"linkType\": \"Entry\",\n        \"id\": \"2bhYOW3HpzPgLPCDdwRrUB\"\n      }\n    },\n    {\n      \"sys\": {\n        \"id\": \"notResolvable\",\n        \"type\": \"error\"\n      },\n      \"details\": {\n        \"type\": \"Link\",\n        \"linkType\": \"Entry\",\n        \"id\": \"Q1GLCTVUJgxsz9gYXFnl4\"\n      }\n    }\n  ]\n}\n```",
           "body": {
            "mode": "",
            "raw": "",
            "options": {
             "raw": {
              "language": ""
             }
            }
           }
          },
          "response": [
           {
            "name": "Unresolved entries",
            "originalRequest": {
             "auth": {
              "type": "bearer",
              "bearer": [
               {
                "key": "token",
                "value": "{{cda_access_token}}",
                "type": "string"
               }
              ]
             },
             "method": "",
             "header": null,
             "url": {
              "raw": "https://{{cda_url}}/spaces/{space_id}/environments/{environment_id}/entries",
              "protocol": "https",
              "host": [
               "{{cda_url}}"
              ],
              "path": [
               "spaces",
               ":space_id",
               "environments",
               ":environment_id",
               "entries"
              ],
              "variable": null
             },
             "description": "When querying an entry collection that contains at least one unresolvable reference (for example, an entry that was referenced by another entry has been deleted, or the referenced entry is **Archived** or in **Draft**), an `errors` array is returned in the response. This also occurs when there are permission issues.\n\nAn example of the errors array in the response:\n\n```json\n{\n  \"errors\": [\n    {\n      \"sys\": {\n        \"id\": \"notResolvable\",\n        \"type\": \"error\"\n      },\n      \"details\": {\n        \"type\": \"Link\",\n        \"linkType\": \"Entry\",\n        \"id\": \"2bhYOW3HpzPgLPCDdwRrUB\"\n      }\n    },\n    {\n      \"sys\": {\n        \"id\": \"notResolvable\",\n        \"type\": \"error\"\n      },\n      \"details\": {\n        \"type\": \"Link\",\n        \"linkType\": \"Entry\",\n        \"id\": \"Q1GLCTVUJgxsz9gYXFnl4\"\n      }\n    }\n  ]\n}\n```",
             "body": {
              "mode": "",
              "raw": "",
              "options": {
               "raw": {
                "language": ""
               }
              }
             }
            },
            "status": "",
            "code": 0,
            "header": null,
            "cookie": null,
            "body": ""
           }
          ]
         }
        ],
        "description": "When querying an entry collection that contains at least one unresolvable reference (for example, an entry that was referenced by another entry has been deleted, or the referenced entry is **Archived** or in **Draft**), an `errors` array is returned in the response. This also occurs when there are permission issues.\n\nAn example of the errors array in the response:\n\n```json\n{\n  \"errors\": [\n    {\n      \"sys\": {\n        \"id\": \"notResolvable\",\n        \"type\": \"error\"\n      },\n      \"details\": {\n        \"type\": \"Link\",\n        \"linkType\": \"Entry\",\n        \"id\": \"2bhYOW3HpzPgLPCDdwRrUB\"\n      }\n    },\n    {\n      \"sys\": {\n        \"id\": \"notResolvable\",\n        \"type\": \"error\"\n      },\n      \"details\": {\n        \"type\": \"Link\",\n        \"linkType\": \"Entry\",\n        \"id\": \"Q1GLCTVUJgxsz9gYXFnl4\"\n      }\n    }\n  ]\n}\n```"
       },
       {
        "name": "Assets collection",
        "item": [
         {
          "name": "Get all assets of a space",
          "request": {
           "auth": {
            "type": "bearer",
            "bearer": [
             {
              "key": "token",
              "value": "{{cda_access_token}}",
              "type": "string"
             }
            ]
           },
           "method": "GET",
           "header": [],
           "url": {
            "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/assets",
            "protocol": "https",
            "host": [
             "{{cda_url}}"
            ],
            "path": [
             "spaces",
             ":space_id",
             "environments",
             ":environment_id",
             "assets"
            ],
            "variable": [
             {
              "key": "space_id",
              "value": "yadj1kx9rmg0",
              "type": "string",
              "description": "Alphanumeric id of the space to retrieve."
             },
             {
              "key": "environment_id",
              "value": "staging",
              "type": "string",
              "description": "ID of the environment in form of a string."
             },
             {
              "key": "access_token",
              "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
              "type": "string",
              "description": "A *production* Content Delivery API key."
             }
            ]
           },
           "description": "",
           "body": {
            "mode": "",
            "raw": "",
            "options": {
             "raw": {
              "language": ""
             }
            }
           }
          },
          "response": [
           {
            "name": "Get all assets of a space",
            "originalRequest": {
             "auth": {
              "type": "bearer",
              "bearer": [
               {
                "key": "token",
                "value": "{{cda_access_token}}",
                "type": "string"
               }
              ]
             },
             "method": "GET",
             "header": [],
             "url": {
              "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/assets",
              "protocol": "https",
              "host": [
               "{{cda_url}}"
              ],
              "path": [
               "spaces",
               ":space_id",
               "environments",
               ":environment_id",
               "assets"
              ],
              "variable": [
               {
                "key": "space_id",
                "value": "yadj1kx9rmg0",
                "type": "string",
                "description": "Alphanumeric id of the space to retrieve."
               },
               {
                "key": "environment_id",
                "value": "staging",
                "type": "string",
                "description": "ID of the environment in form of a string."
               },
               {
                "key": "access_token",
                "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
                "type": "string",
                "description": "A *production* Content Delivery API key."
               }
              ]
             },
             "description": "",
             "body": {
              "mode": "",
              "raw": "",
              "options": {
               "raw": {
                "language": ""
               }
              }
             }
            },
            "status": "",
            "code": 200,
            "header": [
             {
              "key": "Content-Type",
              "value": "application/vnd.contentful.delivery.v1+json",
              "description": ""
             }
            ],
            "cookie": null,
            "body": "{\n  \"sys\": {\n    \"type\": \"Array\"\n  },\n  \"total\": 0,\n  \"skip\": 0,\n  \"limit\": 100,\n  \"items\": []\n}"
           }
          ]
         }
        ]
       },
       {
        "name": "Asset",
        "item": [
         {
          "name": "Get a single asset",
          "request": {
           "auth": {
            "type": "bearer",
            "bearer": [
             {
              "key": "token",
              "value": "{{cda_access_token}}",
              "type": "string"
             }
            ]
           },
           "method": "GET",
           "header": [],
           "url": {
            "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/assets/:asset_id",
            "protocol": "https",
            "host": [
             "{{cda_url}}"
            ],
            "path": [
             "spaces",
             ":space_id",
             "environments",
             ":environment_id",
             "assets",
             ":asset_id"
            ],
            "variable": [
             {
              "key": "space_id",
              "value": "yadj1kx9rmg0",
              "type": "string",
              "description": "Alphanumeric id of the space to retrieve."
             },
             {
              "key": "environment_id",
              "value": "staging",
              "type": "string",
              "description": "ID of the environment in form of a string."
             },
             {
              "key": "asset_id",
              "value": "wtrHxeu3zEoEce2MokCSi",
              "type": "string",
              "description": "Alphanumeric id of the asset to retrieve."
             },
             {
              "key": "access_token",
              "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
              "type": "string",
              "description": "A *production* Content Delivery API key."
             }
            ]
           },
           "description": "",
           "body": {
            "mode": "",
            "raw": "",
            "options": {
             "raw": {
              "language": ""
             }
            }
           }
          },
          "response": [
           {
            "name": "Get a single asset",
            "originalRequest": {
             "auth": {
              "type": "bearer",
              "bearer": [
               {
                "key": "token",
                "value": "{{cda_access_token}}",
                "type": "string"
               }
              ]
             },
             "method": "GET",
             "header": [],
             "url": {
              "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/assets/:asset_id",
              "protocol": "https",
              "host": [
               "{{cda_url}}"
              ],
              "path": [
               "spaces",
               ":space_id",
               "environments",
               ":environment_id",
               "assets",
               ":asset_id"
              ],
              "variable": [
               {
                "key": "space_id",
                "value": "yadj1kx9rmg0",
                "type": "string",
                "description": "Alphanumeric id of the space to retrieve."
               },
               {
                "key": "environment_id",
                "value": "staging",
                "type": "string",
                "description": "ID of the environment in form of a string."
               },
               {
                "key": "asset_id",
                "value": "wtrHxeu3zEoEce2MokCSi",
                "type": "string",
                "description": "Alphanumeric id of the asset to retrieve."
               },
               {
                "key": "access_token",
                "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
                "type": "string",
                "description": "A *production* Content Delivery API key."
               }
              ]
             },
             "description": "",
             "body": {
              "mode": "",
              "raw": "",
              "options": {
               "raw": {
                "language": ""
               }
              }
             }
            },
            "status": "",
            "code": 200,
            "header": [
             {
              "key": "Content-Type",
              "value": "application/vnd.contentful.delivery.v1+json",
              "description": ""
             }
            ],
            "cookie": null,
            "body": "{\n  \"fields\": {\n    \"title\": \"Nyan Cat\",\n    \"file\": {\n      \"contentType\": \"image/png\",\n      \"fileName\": \"Nyan_cat_250px_frame.png\",\n      \"url\": \"//images.ctfassets.net/yadj1kx9rmg0/4gp6taAwW4CmSgumq2ekUm/9da0cd1936871b8d72343e895a00d611/Nyan_cat_250px_frame.png\",\n      \"details\": {\n        \"image\": {\n          \"width\": 250,\n          \"height\": 250\n        },\n        \"size\": 12273\n      }\n    }\n  },\n  \"metadata\": {\n    \"tags\": [\n      {\n        \"sys\": {\n          \"type\": \"Link\",\n          \"linkType\": \"Tag\",\n          \"id\": \"nyCampaign\"\n        }\n      }\n    ]\n  },\n  \"sys\": {\n    \"id\": \"nyancat\",\n    \"type\": \"Asset\",\n    \"space\": {\n      \"sys\": {\n        \"type\": \"Link\",\n        \"linkType\": \"Space\",\n        \"id\": \"yadj1kx9rmg0\"\n      }\n    },\n    \"createdAt\": \"2016-12-20T10:43:35.772Z\",\n    \"updatedAt\": \"2016-12-20T10:43:35.772Z\",\n    \"revision\": 1\n  }\n}"
           }
          ]
         }
        ]
       },
       {
        "name": "Asset key",
        "item": [
         {
          "name": "Create an asset key",
          "request": {
           "auth": {
            "type": "bearer",
            "bearer": [
             {
              "key": "token",
              "value": "{{cda_access_token}}",
              "type": "string"
             }
            ]
           },
           "method": "POST",
           "header": [
            {
             "key": "Content-Type",
             "value": "application/json",
             "description": ""
            },
            {
             "key": "Content-Type",
             "value": "application/vnd.contentful.management.v1+json",
             "description": ""
            }
           ],
           "url": {
            "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/asset_keys",
            "protocol": "https",
            "host": [
             "{{cda_url}}"
            ],
            "path": [
             "spaces",
             ":space_id",
             "environments",
             ":environment_id",
             "asset_keys"
            ],
            "variable": [
             {
              "key": "space_id",
              "value": "yadj1kx9rmg0",
              "type": "string",
              "description": "Alphanumeric id of the space to retrieve."
             },
             {
              "key": "environment_id",
              "value": "staging",
              "type": "string",
              "description": "ID of the environment in form of a string."
             },
             {
              "key": "access_token",
              "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
              "type": "string",
              "description": "A *production* Content Delivery API key."
             }
            ]
           },
           "description": "To sign embargoed asset URLs, you need to create an asset key. Secure asset URLs delivered by the CDA, CMA, or CPA will have a host of `(images,assets,videos,downloads).secure.ctfassets.net`. They cannot be accessed without first signing the URL.\n\nSigning an embargoed asset URL is accomplished by the following steps:\n\n1. Create an asset key for the space the asset URL belongs to. You must specify an `expiresAt` value, a Unix epoch timestamp in seconds, and this can be no more than 48 hours in the future.\n\n2. Create a JWT with the embargoed asset URL as the `sub` (JWT subject). Sign the JWT with the asset key's `secret`.\n\n3. Affix to the original embargoed asset URL the following query parameters:\n    * `policy` - the asset key's policy\n    * `token` - the JWT created in step 2\n\n4. You may affix other query parameters as well, for example when using the Images API. These do not impact the validity of the signed URL.\n\nBy default, a signed asset URL will stop functioning after the `expiresAt` value that was specified when creating the asset key. When generating the JWT, you may optionally specify an `exp` (expiry) that will cause the signed URL to be unusable at the specified expiry time. If a per-URL expiry is greater than the `expiresAt` value specified when creating the asset key, the asset key's `expiresAt` value will be used instead.",
           "body": {
            "mode": "raw",
            "raw": "{\n  \"expiresAt\": 1613590465\n}",
            "options": {
             "raw": {
              "language": "json"
             }
            }
           }
          },
          "response": [
           {
            "name": "Create an asset key",
            "originalRequest": {
             "auth": {
              "type": "bearer",
              "bearer": [
               {
                "key": "token",
                "value": "{{cda_access_token}}",
                "type": "string"
               }
              ]
             },
             "method": "POST",
             "header": [
              {
               "key": "Content-Type",
               "value": "application/json",
               "description": ""
              },
              {
               "key": "Content-Type",
               "value": "application/vnd.contentful.management.v1+json",
               "description": ""
              }
             ],
             "url": {
              "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/asset_keys",
              "protocol": "https",
              "host": [
               "{{cda_url}}"
              ],
              "path": [
               "spaces",
               ":space_id",
               "environments",
               ":environment_id",
               "asset_keys"
              ],
              "variable": [
               {
                "key": "space_id",
                "value": "yadj1kx9rmg0",
                "type": "string",
                "description": "Alphanumeric id of the space to retrieve."
               },
               {
                "key": "environment_id",
                "value": "staging",
                "type": "string",
                "description": "ID of the environment in form of a string."
               },
               {
                "key": "access_token",
                "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
                "type": "string",
                "description": "A *production* Content Delivery API key."
               }
              ]
             },
             "description": "To sign embargoed asset URLs, you need to create an asset key. Secure asset URLs delivered by the CDA, CMA, or CPA will have a host of `(images,assets,videos,downloads).secure.ctfassets.net`. They cannot be accessed without first signing the URL.\n\nSigning an embargoed asset URL is accomplished by the following steps:\n\n1. Create an asset key for the space the asset URL belongs to. You must specify an `expiresAt` value, a Unix epoch timestamp in seconds, and this can be no more than 48 hours in the future.\n\n2. Create a JWT with the embargoed asset URL as the `sub` (JWT subject). Sign the JWT with the asset key's `secret`.\n\n3. Affix to the original embargoed asset URL the following query parameters:\n    * `policy` - the asset key's policy\n    * `token` - the JWT created in step 2\n\n4. You may affix other query parameters as well, for example when using the Images API. These do not impact the validity of the signed URL.\n\nBy default, a signed asset URL will stop functioning after the `expiresAt` value that was specified when creating the asset key. When generating the JWT, you may optionally specify an `exp` (expiry) that will cause the signed URL to be unusable at the specified expiry time. If a per-URL expiry is greater than the `expiresAt` value specified when creating the asset key, the asset key's `expiresAt` value will be used instead.",
             "body": {
              "mode": "raw",
              "raw": "{\n  \"expiresAt\": 1613590465\n}",
              "options": {
               "raw": {
                "language": "json"
               }
              }
             }
            },
            "status": "",
            "code": 200,
            "header": [
             {
              "key": "Content-Type",
              "value": "application/json",
              "description": ""
             }
            ],
            "cookie": null,
            "body": "{\n  \"policy\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjE6MSJ9.eyJleHAiOjE2MTIyODE0MTEsInN1YiI6Inl6MjJwOGZzeGhpNiIsImF1ZCI6ImFkbiIsImp0aSI6ImQ1NWI2YmM1LTkyMGEtNDRjNi1hNmQ0LTM0YzRhYmIyYjdkNiIsImN0Zjp1bnB1YiI6dHJ1ZX0\",\n  \"secret\": \"-jE6hqytutc_dygbjShVq0PijvDn80SdT0EWD1mNHgc\"\n}"
           }
          ]
         }
        ]
       },
       {
        "name": "Locale collection",
        "item": [
         {
          "name": "Get all locales of a space",
          "request": {
           "auth": {
            "type": "bearer",
            "bearer": [
             {
              "key": "token",
              "value": "{{cda_access_token}}",
              "type": "string"
             }
            ]
           },
           "method": "GET",
           "header": [],
           "url": {
            "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/locales",
            "protocol": "https",
            "host": [
             "{{cda_url}}"
            ],
            "path": [
             "spaces",
             ":space_id",
             "environments",
             ":environment_id",
             "locales"
            ],
            "variable": [
             {
              "key": "space_id",
              "value": "yadj1kx9rmg0",
              "type": "string",
              "description": "ID of the space in form of a string"
             },
             {
              "key": "environment_id",
              "value": "staging",
              "type": "string",
              "description": "ID of the environment in form of a string"
             }
            ]
           },
           "description": "The locales endpoint returns a list of all created locales. One will have the flag `default` set to true and is the locale used in the CDA, and you specified no other locale in the request.",
           "body": {
            "mode": "",
            "raw": "",
            "options": {
             "raw": {
              "language": ""
             }
            }
           }
          },
          "response": [
           {
            "name": "Get all locales of a space",
            "originalRequest": {
             "auth": {
              "type": "bearer",
              "bearer": [
               {
                "key": "token",
                "value": "{{cda_access_token}}",
                "type": "string"
               }
              ]
             },
             "method": "GET",
             "header": [],
             "url": {
              "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/locales",
              "protocol": "https",
              "host": [
               "{{cda_url}}"
              ],
              "path": [
               "spaces",
               ":space_id",
               "environments",
               ":environment_id",
               "locales"
              ],
              "variable": [
               {
                "key": "space_id",
                "value": "yadj1kx9rmg0",
                "type": "string",
                "description": "ID of the space in form of a string"
               },
               {
                "key": "environment_id",
                "value": "staging",
                "type": "string",
                "description": "ID of the environment in form of a string"
               }
              ]
             },
             "description": "The locales endpoint returns a list of all created locales. One will have the flag `default` set to true and is the locale used in the CDA, and you specified no other locale in the request.",
             "body": {
              "mode": "",
              "raw": "",
              "options": {
               "raw": {
                "language": ""
               }
              }
             }
            },
            "status": "",
            "code": 200,
            "header": [
             {
              "key": "Content-Type",
              "value": "application/vnd.contentful.delivery.v1+json",
              "description": ""
             }
            ],
            "cookie": null,
            "body": "{\n  \"sys\": {\n    \"type\": \"Array\"\n  },\n  \"total\": 0,\n  \"skip\": 0,\n  \"limit\": 100,\n  \"items\": []\n}"
           }
          ]
         }
        ]
       },
       {
        "name": "Tag collection",
        "item": [
         {
          "name": "Get all tags",
          "request": {
           "auth": {
            "type": "bearer",
            "bearer": [
             {
              "key": "token",
              "value": "{{cda_access_token}}",
              "type": "string"
             }
            ]
           },
           "method": "GET",
           "header": [],
           "url": {
            "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/tags",
            "protocol": "https",
            "host": [
             "{{cda_url}}"
            ],
            "path": [
             "spaces",
             ":space_id",
             "environments",
             ":environment_id",
             "tags"
            ],
            "variable": [
             {
              "key": "space_id",
              "value": "yadj1kx9rmg0",
              "type": "string",
              "description": "ID of the space in form of a string"
             },
             {
              "key": "environment_id",
              "value": "staging",
              "type": "string",
              "description": "ID of the environment in form of a string"
             }
            ]
           },
           "description": "Returns all the tags that exist in a given environment.",
           "body": {
            "mode": "",
            "raw": "",
            "options": {
             "raw": {
              "language": ""
             }
            }
           }
          },
          "response": [
           {
            "name": "Get all tags",
            "originalRequest": {
             "auth": {
              "type": "bearer",
              "bearer": [
               {
                "key": "token",
                "value": "{{cda_access_token}}",
                "type": "string"
               }
              ]
             },
             "method": "GET",
             "header": [],
             "url": {
              "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/tags",
              "protocol": "https",
              "host": [
               "{{cda_url}}"
              ],
              "path": [
               "spaces",
               ":space_id",
               "environments",
               ":environment_id",
               "tags"
              ],
              "variable": [
               {
                "key": "space_id",
                "value": "yadj1kx9rmg0",
                "type": "string",
                "description": "ID of the space in form of a string"
               },
               {
                "key": "environment_id",
                "value": "staging",
                "type": "string",
                "description": "ID of the environment in form of a string"
               }
              ]
             },
             "description": "Returns all the tags that exist in a given environment.",
             "body": {
              "mode": "",
              "raw": "",
              "options": {
               "raw": {
                "language": ""
               }
              }
             }
            },
            "status": "",
            "code": 200,
            "header": [
             {
              "key": "Content-Type",
              "value": "application/vnd.contentful.delivery.v1+json",
              "description": ""
             }
            ],
            "cookie": null,
            "body": "{\n  \"sys\": {\n    \"type\": \"Array\"\n  },\n  \"total\": 1,\n  \"skip\": 0,\n  \"limit\": 100,\n  \"items\": [\n    {\n      \"name\": \"NY Campaign\",\n      \"sys\": {\n        \"visibility\": \"public\",\n        \"type\": \"Tag\",\n        \"id\": \"nyCampaign\",\n        \"space\": {\n          \"sys\": {\n            \"type\": \"Link\",\n            \"linkType\": \"Space\",\n            \"id\": \"yadj1kx9rmg0\"\n          }\n        },\n        \"environment\": {\n          \"sys\": {\n            \"type\": \"Link\",\n            \"linkType\": \"Environment\",\n            \"id\": \"staging\"\n          }\n        },\n        \"version\": 1,\n        \"createdAt\": \"2016-12-20T10:43:35.772Z\",\n        \"updatedAt\": \"2016-12-20T10:43:35.772Z\",\n        \"revision\": 1\n      }\n    }\n  ]\n}"
           }
          ]
         }
        ]
       },
       {
        "name": "Tag",
        "item": [
         {
          "name": "Get a single tag",
          "request": {
           "auth": {
            "type": "bearer",
            "bearer": [
             {
              "key": "token",
              "value": "{{cda_access_token}}",
              "type": "string"
             }
            ]
           },
           "method": "GET",
           "header": [],
           "url": {
            "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/tags/:tag_id",
            "protocol": "https",
            "host": [
             "{{cda_url}}"
            ],
            "path": [
             "spaces",
             ":space_id",
             "environments",
             ":environment_id",
             "tags",
             ":tag_id"
            ],
            "variable": [
             {
              "key": "space_id",
              "value": "yadj1kx9rmg0",
              "type": "string",
              "description": "ID of the space in the form of a string"
             },
             {
              "key": "environment_id",
              "value": "staging",
              "type": "string",
              "description": "ID of the environment in form of a string"
             },
             {
              "key": "tag_id",
              "value": "nyCampaign",
              "type": "string",
              "description": "ID of the tag in form of a string"
             }
            ]
           },
           "description": "Returns a single tag based on the given identifier.",
           "body": {
            "mode": "",
            "raw": "",
            "options": {
             "raw": {
              "language": ""
             }
            }
           }
          },
          "response": [
           {
            "name": "Get a single tag",
            "originalRequest": {
             "auth": {
              "type": "bearer",
              "bearer": [
               {
                "key": "token",
                "value": "{{cda_access_token}}",
                "type": "string"
               }
              ]
             },
             "method": "GET",
             "header": [],
             "url": {
              "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/tags/:tag_id",
              "protocol": "https",
              "host": [
               "{{cda_url}}"
              ],
              "path": [
               "spaces",
               ":space_id",
               "environments",
               ":environment_id",
               "tags",
               ":tag_id"
              ],
              "variable": [
               {
                "key": "space_id",
                "value": "yadj1kx9rmg0",
                "type": "string",
                "description": "ID of the space in the form of a string"
               },
               {
                "key": "environment_id",
                "value": "staging",
                "type": "string",
                "description": "ID of the environment in form of a string"
               },
               {
                "key": "tag_id",
                "value": "nyCampaign",
                "type": "string",
                "description": "ID of the tag in form of a string"
               }
              ]
             },
             "description": "Returns a single tag based on the given identifier.",
             "body": {
              "mode": "",
              "raw": "",
              "options": {
               "raw": {
                "language": ""
               }
              }
             }
            },
            "status": "",
            "code": 200,
            "header": [
             {
              "key": "Content-Type",
              "value": "application/vnd.contentful.delivery.v1+json",
              "description": ""
             }
            ],
            "cookie": null,
            "body": "{\n  \"name\": \"NY Campaign\",\n  \"sys\": {\n    \"visibility\": \"public\",\n    \"type\": \"Tag\",\n    \"id\": \"nyCampaign\",\n    \"space\": {\n      \"sys\": {\n        \"type\": \"Link\",\n        \"linkType\": \"Space\",\n        \"id\": \"yadj1kx9rmg0\"\n      }\n    },\n    \"environment\": {\n      \"sys\": {\n        \"type\": \"Link\",\n        \"linkType\": \"Environment\",\n        \"id\": \"staging\"\n      }\n    },\n    \"version\": 1,\n    \"createdAt\": \"2016-12-20T10:43:35.772Z\",\n    \"updatedAt\": \"2016-12-20T10:43:35.772Z\",\n    \"revision\": 1\n  }\n}"
           }
          ]
         }
        ]
       },
       {
        "name": "Content tags on entries and assets",
        "item": [
         {
          "name": "Get a single entry",
          "request": {
           "auth": {
            "type": "bearer",
            "bearer": [
             {
              "key": "token",
              "value": "{{cda_access_token}}",
              "type": "string"
             }
            ]
           },
           "method": "GET",
           "header": [],
           "url": {
            "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/entries/:entry_id",
            "protocol": "https",
            "host": [
             "{{cda_url}}"
            ],
            "path": [
             "spaces",
             ":space_id",
             "environments",
             ":environment_id",
             "entries",
             ":entry_id"
            ],
            "variable": [
             {
              "key": "space_id",
              "value": "yadj1kx9rmg0",
              "type": "string",
              "description": "ID of the space in form of a string"
             },
             {
              "key": "environment_id",
              "value": "staging",
              "type": "string",
              "description": "ID of the environment in form of a string"
             },
             {
              "key": "entry_id",
              "value": "5KsDBWseXY6QegucYAoacS",
              "type": "string",
              "description": "ID of the entry in form of a string"
             }
            ]
           },
           "description": "Returns a single entry with a metadata property. The metadata property holds a list of tags.\n\nThe same behavior applies for assets.",
           "body": {
            "mode": "",
            "raw": "",
            "options": {
             "raw": {
              "language": ""
             }
            }
           }
          },
          "response": [
           {
            "name": "Get a single entry",
            "originalRequest": {
             "auth": {
              "type": "bearer",
              "bearer": [
               {
                "key": "token",
                "value": "{{cda_access_token}}",
                "type": "string"
               }
              ]
             },
             "method": "GET",
             "header": [],
             "url": {
              "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/entries/:entry_id",
              "protocol": "https",
              "host": [
               "{{cda_url}}"
              ],
              "path": [
               "spaces",
               ":space_id",
               "environments",
               ":environment_id",
               "entries",
               ":entry_id"
              ],
              "variable": [
               {
                "key": "space_id",
                "value": "yadj1kx9rmg0",
                "type": "string",
                "description": "ID of the space in form of a string"
               },
               {
                "key": "environment_id",
                "value": "staging",
                "type": "string",
                "description": "ID of the environment in form of a string"
               },
               {
                "key": "entry_id",
                "value": "5KsDBWseXY6QegucYAoacS",
                "type": "string",
                "description": "ID of the entry in form of a string"
               }
              ]
             },
             "description": "Returns a single entry with a metadata property. The metadata property holds a list of tags.\n\nThe same behavior applies for assets.",
             "body": {
              "mode": "",
              "raw": "",
              "options": {
               "raw": {
                "language": ""
               }
              }
             }
            },
            "status": "",
            "code": 200,
            "header": [
             {
              "key": "Content-Type",
              "value": "application/vnd.contentful.delivery.v1+json",
              "description": ""
             }
            ],
            "cookie": null,
            "body": "{\n  \"fields\": {\n    \"title\": {\n      \"en-US\": \"Hello, World!\"\n    },\n    \"body\": {\n      \"en-US\": \"Bacon is healthy!\"\n    }\n  },\n  \"metadata\": {\n    \"tags\": [\n      {\n        \"sys\": {\n          \"type\": \"Link\",\n          \"linkType\": \"Tag\",\n          \"id\": \"nyCampaign\"\n        }\n      }\n    ]\n  },\n  \"sys\": {\n    \"id\": \"5KsDBWseXY6QegucYAoacS\",\n    \"type\": \"Entry\",\n    \"contentType\": {\n      \"sys\": {\n        \"type\": \"Link\",\n        \"linkType\": \"ContentType\",\n        \"id\": \"hfM9RCJIk0wIm06WkEOQY\"\n      }\n    },\n    \"createdAt\": \"2016-12-20T10:43:35.772Z\",\n    \"updatedAt\": \"2016-12-20T10:43:35.772Z\",\n    \"revision\": 1\n  }\n}"
           }
          ]
         }
        ],
        "description": "Entries and assets payload come with a `metadata` property. This metadata property has as its value a `tags` list.\nThe tags list contains links to all the tags that exist on the entry or asset.\n\n**Note:** You can query for entries and assets by their content tags. For entries, the search is across content types."
       },
       {
        "name": "Querying content based on a set of tags",
        "item": [
         {
          "name": "Retrieve entries or assets that match a specific set of tag values",
          "request": {
           "auth": {
            "type": "bearer",
            "bearer": [
             {
              "key": "token",
              "value": "{{cda_access_token}}",
              "type": "string"
             }
            ]
           },
           "method": "GET",
           "header": [],
           "url": {
            "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/entries?\u0026:key=VALUE",
            "protocol": "https",
            "host": [
             "{{cda_url}}"
            ],
            "path": [
             "spaces",
             ":space_id",
             "environments",
             ":environment_id",
             "entries"
            ],
            "query": [
             {
              "key": "{key}",
              "value": "VALUE"
             }
            ],
            "variable": [
             {
              "key": "space_id",
              "value": "yadj1kx9rmg0",
              "type": "string",
              "description": "Alphanumeric id of the space to retrieve."
             },
             {
              "key": "environment_id",
              "value": "staging",
              "type": "string",
              "description": "ID of the environment in form of a string"
             },
             {
              "key": "access_token",
              "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
              "type": "string",
              "description": "A *production* Content Delivery API key."
             },
             {
              "key": "key",
              "value": "metadata.tags.sys.id[all]",
              "type": "string",
              "description": "Part of the query parameter to search on"
             },
             {
              "key": "value",
              "value": "tagA,tagB",
              "type": "string",
              "description": "The value to match."
             }
            ]
           },
           "description": "Returns a list of entries with tags that match the set of tag ids specified.",
           "body": {
            "mode": "",
            "raw": "",
            "options": {
             "raw": {
              "language": ""
             }
            }
           }
          },
          "response": [
           {
            "name": "Retrieve entries or assets that match a specific set of tag values",
            "originalRequest": {
             "auth": {
              "type": "bearer",
              "bearer": [
               {
                "key": "token",
                "value": "{{cda_access_token}}",
                "type": "string"
               }
              ]
             },
             "method": "GET",
             "header": [],
             "url": {
              "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/entries?\u0026:key=VALUE",
              "protocol": "https",
              "host": [
               "{{cda_url}}"
              ],
              "path": [
               "spaces",
               ":space_id",
               "environments",
               ":environment_id",
               "entries"
              ],
              "query": [
               {
                "key": "{key}",
                "value": "VALUE"
               }
              ],
              "variable": [
               {
                "key": "space_id",
                "value": "yadj1kx9rmg0",
                "type": "string",
                "description": "Alphanumeric id of the space to retrieve."
               },
               {
                "key": "environment_id",
                "value": "staging",
                "type": "string",
                "description": "ID of the environment in form of a string"
               },
               {
                "key": "access_token",
                "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
                "type": "string",
                "description": "A *production* Content Delivery API key."
               },
               {
                "key": "key",
                "value": "metadata.tags.sys.id[all]",
                "type": "string",
                "description": "Part of the query parameter to search on"
               },
               {
                "key": "value",
                "value": "tagA,tagB",
                "type": "string",
                "description": "The value to match."
               }
              ]
             },
             "description": "Returns a list of entries with tags that match the set of tag ids specified.",
             "body": {
              "mode": "",
              "raw": "",
              "options": {
               "raw": {
                "language": ""
               }
              }
             }
            },
            "status": "",
            "code": 200,
            "header": [
             {
              "key": "Content-Type",
              "value": "application/vnd.contentful.delivery.v1+json",
              "description": ""
             }
            ],
            "cookie": null,
            "body": "{\n  \"sys\": {\n    \"type\": \"Array\"\n  },\n  \"total\": 0,\n  \"skip\": 0,\n  \"limit\": 100,\n  \"items\": []\n}"
           }
          ]
         }
        ],
        "description": "The query parameter starts with `metadata.tags.sys.id` with operator `[all]`."
       },
       {
        "name": "Querying content based on one or more tags",
        "item": [
         {
          "name": "Retrieve entries or assets that match at least one of the specified tag values",
          "request": {
           "auth": {
            "type": "bearer",
            "bearer": [
             {
              "key": "token",
              "value": "{{cda_access_token}}",
              "type": "string"
             }
            ]
           },
           "method": "GET",
           "header": [],
           "url": {
            "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/entries?\u0026:key=VALUE",
            "protocol": "https",
            "host": [
             "{{cda_url}}"
            ],
            "path": [
             "spaces",
             ":space_id",
             "environments",
             ":environment_id",
             "entries"
            ],
            "query": [
             {
              "key": "{key}",
              "value": "VALUE"
             }
            ],
            "variable": [
             {
              "key": "space_id",
              "value": "yadj1kx9rmg0",
              "type": "string",
              "description": "Alphanumeric id of the space to retrieve."
             },
             {
              "key": "environment_id",
              "value": "staging",
              "type": "string",
              "description": "ID of the environment in form of a string"
             },
             {
              "key": "access_token",
              "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
              "type": "string",
              "description": "A *production* Content Delivery API key."
             },
             {
              "key": "key",
              "value": "metadata.tags.sys.id[in]",
              "type": "string",
              "description": "Part of the query parameter to search on"
             },
             {
              "key": "value",
              "value": "tagA,tagB",
              "type": "string",
              "description": "The value to match."
             }
            ]
           },
           "description": "Returns a list of entries with tags that match one or more of the tag ids specified.",
           "body": {
            "mode": "",
            "raw": "",
            "options": {
             "raw": {
              "language": ""
             }
            }
           }
          },
          "response": [
           {
            "name": "Retrieve entries or assets that match at least one of the specified tag values",
            "originalRequest": {
             "auth": {
              "type": "bearer",
              "bearer": [
               {
                "key": "token",
                "value": "{{cda_access_token}}",
                "type": "string"
               }
              ]
             },
             "method": "GET",
             "header": [],
             "url": {
              "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/entries?\u0026:key=VALUE",
              "protocol": "https",
              "host": [
               "{{cda_url}}"
              ],
              "path": [
               "spaces",
               ":space_id",
               "environments",
               ":environment_id",
               "entries"
              ],
              "query": [
               {
                "key": "{key}",
                "value": "VALUE"
               }
              ],
              "variable": [
               {
                "key": "space_id",
                "value": "yadj1kx9rmg0",
                "type": "string",
                "description": "Alphanumeric id of the space to retrieve."
               },
               {
                "key": "environment_id",
                "value": "staging",
                "type": "string",
                "description": "ID of the environment in form of a string"
               },
               {
                "key": "access_token",
                "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
                "type": "string",
                "description": "A *production* Content Delivery API key."
               },
               {
                "key": "key",
                "value": "metadata.tags.sys.id[in]",
                "type": "string",
                "description": "Part of the query parameter to search on"
               },
               {
                "key": "value",
                "value": "tagA,tagB",
                "type": "string",
                "description": "The value to match."
               }
              ]
             },
             "description": "Returns a list of entries with tags that match one or more of the tag ids specified.",
             "body": {
              "mode": "",
              "raw": "",
              "options": {
               "raw": {
                "language": ""
               }
              }
             }
            },
            "status": "",
            "code": 200,
            "header": [
             {
              "key": "Content-Type",
              "value": "application/vnd.contentful.delivery.v1+json",
              "description": ""
             }
            ],
            "cookie": null,
            "body": "{\n  \"sys\": {\n    \"type\": \"Array\"\n  },\n  \"total\": 0,\n  \"skip\": 0,\n  \"limit\": 100,\n  \"items\": []\n}"
           }
          ]
         }
        ],
        "description": "The query parameter starts with `metadata.tags.sys.id` with operator `[in]`."
       },
       {
        "name": "Querying content based on the tag presence",
        "item": [
         {
          "name": "Check the presence of a tag on entries or assets",
          "request": {
           "auth": {
            "type": "bearer",
            "bearer": [
             {
              "key": "token",
              "value": "{{cda_access_token}}",
              "type": "string"
             }
            ]
           },
           "method": "GET",
           "header": [],
           "url": {
            "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/entries?\u0026:key=VALUE",
            "protocol": "https",
            "host": [
             "{{cda_url}}"
            ],
            "path": [
             "spaces",
             ":space_id",
             "environments",
             ":environment_id",
             "entries"
            ],
            "query": [
             {
              "key": "{key}",
              "value": "VALUE"
             }
            ],
            "variable": [
             {
              "key": "space_id",
              "value": "yadj1kx9rmg0",
              "type": "string",
              "description": "Alphanumeric id of the space to retrieve."
             },
             {
              "key": "environment_id",
              "value": "staging",
              "type": "string",
              "description": "ID of the environment in form of a string"
             },
             {
              "key": "access_token",
              "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
              "type": "string",
              "description": "A *production* Content Delivery API key."
             },
             {
              "key": "key",
              "value": "metadata.tags[exists]",
              "type": "string",
              "description": "Part of the query parameter to search on"
             },
             {
              "key": "value",
              "value": "true",
              "type": "string",
              "description": "The value to match. It can be one of \"true\" or \"false\"."
             }
            ]
           },
           "description": "Returns all entries that have tags in them.\n\nThis parameter value is case sensitive: “True” or “False” are not valid values.",
           "body": {
            "mode": "",
            "raw": "",
            "options": {
             "raw": {
              "language": ""
             }
            }
           }
          },
          "response": [
           {
            "name": "Check the presence of a tag on entries or assets",
            "originalRequest": {
             "auth": {
              "type": "bearer",
              "bearer": [
               {
                "key": "token",
                "value": "{{cda_access_token}}",
                "type": "string"
               }
              ]
             },
             "method": "GET",
             "header": [],
             "url": {
              "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/entries?\u0026:key=VALUE",
              "protocol": "https",
              "host": [
               "{{cda_url}}"
              ],
              "path": [
               "spaces",
               ":space_id",
               "environments",
               ":environment_id",
               "entries"
              ],
              "query": [
               {
                "key": "{key}",
                "value": "VALUE"
               }
              ],
              "variable": [
               {
                "key": "space_id",
                "value": "yadj1kx9rmg0",
                "type": "string",
                "description": "Alphanumeric id of the space to retrieve."
               },
               {
                "key": "environment_id",
                "value": "staging",
                "type": "string",
                "description": "ID of the environment in form of a string"
               },
               {
                "key": "access_token",
                "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
                "type": "string",
                "description": "A *production* Content Delivery API key."
               },
               {
                "key": "key",
                "value": "metadata.tags[exists]",
                "type": "string",
                "description": "Part of the query parameter to search on"
               },
               {
                "key": "value",
                "value": "true",
                "type": "string",
                "description": "The value to match. It can be one of \"true\" or \"false\"."
               }
              ]
             },
             "description": "Returns all entries that have tags in them.\n\nThis parameter value is case sensitive: “True” or “False” are not valid values.",
             "body": {
              "mode": "",
              "raw": "",
              "options": {
               "raw": {
                "language": ""
               }
              }
             }
            },
            "status": "",
            "code": 200,
            "header": [
             {
              "key": "Content-Type",
              "value": "application/vnd.contentful.delivery.v1+json",
              "description": ""
             }
            ],
            "cookie": null,
            "body": "{\n  \"sys\": {\n    \"type\": \"Array\"\n  },\n  \"total\": 0,\n  \"skip\": 0,\n  \"limit\": 100,\n  \"items\": []\n}"
           }
          ]
         }
        ],
        "description": "The query parameter starts with `metadata.tags` with operator `[exists]`."
       },
       {
        "name": "Retrieval of linked items",
        "item": [
         {
          "name": "Query entries",
          "request": {
           "auth": {
            "type": "bearer",
            "bearer": [
             {
              "key": "token",
              "value": "{{cda_access_token}}",
              "type": "string"
             }
            ]
           },
           "method": "GET",
           "header": [],
           "url": {
            "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/entries?\u0026include=INCLUDE",
            "protocol": "https",
            "host": [
             "{{cda_url}}"
            ],
            "path": [
             "spaces",
             ":space_id",
             "environments",
             ":environment_id",
             "entries"
            ],
            "query": [
             {
              "key": "include",
              "value": "INCLUDE"
             }
            ],
            "variable": [
             {
              "key": "space_id",
              "value": "yadj1kx9rmg0",
              "type": "string",
              "description": "Alphanumeric id of the space to retrieve."
             },
             {
              "key": "environment_id",
              "value": "staging",
              "type": "string",
              "description": "ID of the environment in form of a string."
             },
             {
              "key": "access_token",
              "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
              "type": "string",
              "description": "A *production* Content Delivery API key."
             }
            ]
           },
           "description": "",
           "body": {
            "mode": "",
            "raw": "",
            "options": {
             "raw": {
              "language": ""
             }
            }
           }
          },
          "response": [
           {
            "name": "Query entries",
            "originalRequest": {
             "auth": {
              "type": "bearer",
              "bearer": [
               {
                "key": "token",
                "value": "{{cda_access_token}}",
                "type": "string"
               }
              ]
             },
             "method": "GET",
             "header": [],
             "url": {
              "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/entries?\u0026include=INCLUDE",
              "protocol": "https",
              "host": [
               "{{cda_url}}"
              ],
              "path": [
               "spaces",
               ":space_id",
               "environments",
               ":environment_id",
               "entries"
              ],
              "query": [
               {
                "key": "include",
                "value": "INCLUDE"
               }
              ],
              "variable": [
               {
                "key": "space_id",
                "value": "yadj1kx9rmg0",
                "type": "string",
                "description": "Alphanumeric id of the space to retrieve."
               },
               {
                "key": "environment_id",
                "value": "staging",
                "type": "string",
                "description": "ID of the environment in form of a string."
               },
               {
                "key": "access_token",
                "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
                "type": "string",
                "description": "A *production* Content Delivery API key."
               }
              ]
             },
             "description": "",
             "body": {
              "mode": "",
              "raw": "",
              "options": {
               "raw": {
                "language": ""
               }
              }
             }
            },
            "status": "",
            "code": 200,
            "header": [
             {
              "key": "Content-Type",
              "value": "application/vnd.contentful.delivery.v1+json",
              "description": ""
             }
            ],
            "cookie": null,
            "body": "{\n  \"sys\": {\n    \"type\": \"Array\"\n  },\n  \"total\": 0,\n  \"skip\": 0,\n  \"limit\": 100,\n  \"items\": []\n}"
           }
          ]
         }
        ],
        "description": "When you have related content (e.g. entries with links to image assets) it's possible to include both search results and related data in a single request. Using the `include` parameter, you can specify the number of levels to resolve.\n\nThe maximum number of levels is **10**. The API will throw a `BadRequestError` for higher values or values other than an integer. The default number, if the parameter is not specified, is 1. To omit linked items, specify `include` as 0.\n\nIf the standard `items` array has not already retrieved the linked entries, they will be in the `includes.Entry` array. Linked assets are inside the `includes.Asset` array.\n\n**Note**: The `include` parameter resolves links between entries and assets within a space. Links between content types within a space are not included in the response.\n\n**Note**: The `include` parameter is only available for the entry collection endpoint `/spaces/{space_id}/environments/{environment_id}/entries`."
       },
       {
        "name": "Links to a specific item",
        "item": [
         {
          "name": "Query entries",
          "request": {
           "auth": {
            "type": "bearer",
            "bearer": [
             {
              "key": "token",
              "value": "{{cda_access_token}}",
              "type": "string"
             }
            ]
           },
           "method": "GET",
           "header": [],
           "url": {
            "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/entries?\u0026include=VALUE\u0026content_type=CONTENT_TYPE\u0026fields.:linking_field.sys.id=TARGET_ENTRY_ID",
            "protocol": "https",
            "host": [
             "{{cda_url}}"
            ],
            "path": [
             "spaces",
             ":space_id",
             "environments",
             ":environment_id",
             "entries"
            ],
            "query": [
             {
              "key": "include",
              "value": "VALUE"
             },
             {
              "key": "content_type",
              "value": "CONTENT_TYPE"
             },
             {
              "key": "fields.{linking_field}.sys.id",
              "value": "TARGET_ENTRY_ID"
             }
            ],
            "variable": [
             {
              "key": "space_id",
              "value": "yadj1kx9rmg0",
              "type": "string",
              "description": "Alphanumeric id of the space to retrieve."
             },
             {
              "key": "environment_id",
              "value": "staging",
              "type": "string",
              "description": "ID of the environment in form of a string."
             },
             {
              "key": "access_token",
              "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
              "type": "string",
              "description": "A *production* Content Delivery API key."
             },
             {
              "key": "value",
              "value": "2",
              "type": "number",
              "description": "Number of levels to include."
             },
             {
              "key": "linking_field",
              "value": "brand",
              "type": "string",
              "description": "Field used to link items"
             },
             {
              "key": "target_entry_id",
              "value": "4LgMotpNF6W20YKmuemW0a",
              "type": "string",
              "description": "ID of the target entry"
             }
            ]
           },
           "description": "",
           "body": {
            "mode": "",
            "raw": "",
            "options": {
             "raw": {
              "language": ""
             }
            }
           }
          },
          "response": [
           {
            "name": "Query entries",
            "originalRequest": {
             "auth": {
              "type": "bearer",
              "bearer": [
               {
                "key": "token",
                "value": "{{cda_access_token}}",
                "type": "string"
               }
              ]
             },
             "method": "GET",
             "header": [],
             "url": {
              "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/entries?\u0026include=VALUE\u0026content_type=CONTENT_TYPE\u0026fields.:linking_field.sys.id=TARGET_ENTRY_ID",
              "protocol": "https",
              "host": [
               "{{cda_url}}"
              ],
              "path": [
               "spaces",
               ":space_id",
               "environments",
               ":environment_id",
               "entries"
              ],
              "query": [
               {
                "key": "include",
                "value": "VALUE"
               },
               {
                "key": "content_type",
                "value": "CONTENT_TYPE"
               },
               {
                "key": "fields.{linking_field}.sys.id",
                "value": "TARGET_ENTRY_ID"
               }
              ],
              "variable": [
               {
                "key": "space_id",
                "value": "yadj1kx9rmg0",
                "type": "string",
                "description": "Alphanumeric id of the space to retrieve."
               },
               {
                "key": "environment_id",
                "value": "staging",
                "type": "string",
                "description": "ID of the environment in form of a string."
               },
               {
                "key": "access_token",
                "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
                "type": "string",
                "description": "A *production* Content Delivery API key."
               },
               {
                "key": "value",
                "value": "2",
                "type": "number",
                "description": "Number of levels to include."
               },
               {
                "key": "linking_field",
                "value": "brand",
                "type": "string",
                "description": "Field used to link items"
               },
               {
                "key": "target_entry_id",
                "value": "4LgMotpNF6W20YKmuemW0a",
                "type": "string",
                "description": "ID of the target entry"
               }
              ]
             },
             "description": "",
             "body": {
              "mode": "",
              "raw": "",
              "options": {
               "raw": {
                "language": ""
               }
              }
             }
            },
            "status": "",
            "code": 200,
            "header": [
             {
              "key": "Content-Type",
              "value": "application/vnd.contentful.delivery.v1+json",
              "description": ""
             }
            ],
            "cookie": null,
            "body": "{\n  \"sys\": {\n    \"type\": \"Array\"\n  },\n  \"total\": 0,\n  \"skip\": 0,\n  \"limit\": 100,\n  \"items\": []\n}"
           }
          ]
         }
        ],
        "description": "If you want to retrieve all items linked to a specific entry, the query URL should filter entries on their specific `content_type`, `linking_field` (field to link items) and `entry_id` from the target entry."
       },
       {
        "name": "Content type",
        "item": [
         {
          "name": "Query entries",
          "request": {
           "auth": {
            "type": "bearer",
            "bearer": [
             {
              "key": "token",
              "value": "{{cda_access_token}}",
              "type": "string"
             }
            ]
           },
           "method": "GET",
           "header": [],
           "url": {
            "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/entries?\u0026content_type=CONTENT_TYPE",
            "protocol": "https",
            "host": [
             "{{cda_url}}"
            ],
            "path": [
             "spaces",
             ":space_id",
             "environments",
             ":environment_id",
             "entries"
            ],
            "query": [
             {
              "key": "content_type",
              "value": "CONTENT_TYPE"
             }
            ],
            "variable": [
             {
              "key": "space_id",
              "value": "yadj1kx9rmg0",
              "type": "string",
              "description": "Alphanumeric id of the space to retrieve."
             },
             {
              "key": "environment_id",
              "value": "staging",
              "type": "string",
              "description": "ID of the environment in form of a string"
             },
             {
              "key": "access_token",
              "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
              "type": "string",
              "description": "A *production* Content Delivery API key."
             }
            ]
           },
           "description": "This example finds all entries of content type 'Product'.",
           "body": {
            "mode": "",
            "raw": "",
            "options": {
             "raw": {
              "language": ""
             }
            }
           }
          },
          "response": [
           {
            "name": "Query entries",
            "originalRequest": {
             "auth": {
              "type": "bearer",
              "bearer": [
               {
                "key": "token",
                "value": "{{cda_access_token}}",
                "type": "string"
               }
              ]
             },
             "method": "GET",
             "header": [],
             "url": {
              "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/entries?\u0026content_type=CONTENT_TYPE",
              "protocol": "https",
              "host": [
               "{{cda_url}}"
              ],
              "path": [
               "spaces",
               ":space_id",
               "environments",
               ":environment_id",
               "entries"
              ],
              "query": [
               {
                "key": "content_type",
                "value": "CONTENT_TYPE"
               }
              ],
              "variable": [
               {
                "key": "space_id",
                "value": "yadj1kx9rmg0",
                "type": "string",
                "description": "Alphanumeric id of the space to retrieve."
               },
               {
                "key": "environment_id",
                "value": "staging",
                "type": "string",
                "description": "ID of the environment in form of a string"
               },
               {
                "key": "access_token",
                "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
                "type": "string",
                "description": "A *production* Content Delivery API key."
               }
              ]
             },
             "description": "This example finds all entries of content type 'Product'.",
             "body": {
              "mode": "",
              "raw": "",
              "options": {
               "raw": {
                "language": ""
               }
              }
             }
            },
            "status": "",
            "code": 200,
            "header": [
             {
              "key": "Content-Type",
              "value": "application/vnd.contentful.delivery.v1+json",
              "description": ""
             }
            ],
            "cookie": null,
            "body": "{\n  \"sys\": {\n    \"type\": \"Array\"\n  },\n  \"total\": 0,\n  \"skip\": 0,\n  \"limit\": 100,\n  \"items\": []\n}"
           }
          ]
         }
        ],
        "description": "To search for entries with a specific content type, set the `content_type` URI query parameter to the ID you want to search for.\n\n**Note**: When querying entries and using search filters based on `fields` or ordering by `fields` you must specify this parameter. You can only specify one value for `content_type` at a time."
       },
       {
        "name": "Select operator",
        "item": [
         {
          "name": "Query entries",
          "request": {
           "auth": {
            "type": "bearer",
            "bearer": [
             {
              "key": "token",
              "value": "{{cda_access_token}}",
              "type": "string"
             }
            ]
           },
           "method": "GET",
           "header": [],
           "url": {
            "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/entries?\u0026content_type=CONTENT_TYPE\u0026select=VALUE",
            "protocol": "https",
            "host": [
             "{{cda_url}}"
            ],
            "path": [
             "spaces",
             ":space_id",
             "environments",
             ":environment_id",
             "entries"
            ],
            "query": [
             {
              "key": "content_type",
              "value": "CONTENT_TYPE"
             },
             {
              "key": "select",
              "value": "VALUE"
             }
            ],
            "variable": [
             {
              "key": "space_id",
              "value": "yadj1kx9rmg0",
              "type": "string",
              "description": "Alphanumeric id of the space to retrieve."
             },
             {
              "key": "environment_id",
              "value": "staging",
              "type": "string",
              "description": "ID of the environment in form of a string."
             },
             {
              "key": "access_token",
              "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
              "type": "string",
              "description": "A *production* Content Delivery API key."
             },
             {
              "key": "value",
              "value": "fields.productName",
              "type": "string",
              "description": "The path of the property to select."
             }
            ]
           },
           "description": "To select only the `productName` field of each entry.",
           "body": {
            "mode": "",
            "raw": "",
            "options": {
             "raw": {
              "language": ""
             }
            }
           }
          },
          "response": [
           {
            "name": "Query entries",
            "originalRequest": {
             "auth": {
              "type": "bearer",
              "bearer": [
               {
                "key": "token",
                "value": "{{cda_access_token}}",
                "type": "string"
               }
              ]
             },
             "method": "GET",
             "header": [],
             "url": {
              "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/entries?\u0026content_type=CONTENT_TYPE\u0026select=VALUE",
              "protocol": "https",
              "host": [
               "{{cda_url}}"
              ],
              "path": [
               "spaces",
               ":space_id",
               "environments",
               ":environment_id",
               "entries"
              ],
              "query": [
               {
                "key": "content_type",
                "value": "CONTENT_TYPE"
               },
               {
                "key": "select",
                "value": "VALUE"
               }
              ],
              "variable": [
               {
                "key": "space_id",
                "value": "yadj1kx9rmg0",
                "type": "string",
                "description": "Alphanumeric id of the space to retrieve."
               },
               {
                "key": "environment_id",
                "value": "staging",
                "type": "string",
                "description": "ID of the environment in form of a string."
               },
               {
                "key": "access_token",
                "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
                "type": "string",
                "description": "A *production* Content Delivery API key."
               },
               {
                "key": "value",
                "value": "fields.productName",
                "type": "string",
                "description": "The path of the property to select."
               }
              ]
             },
             "description": "To select only the `productName` field of each entry.",
             "body": {
              "mode": "",
              "raw": "",
              "options": {
               "raw": {
                "language": ""
               }
              }
             }
            },
            "status": "",
            "code": 200,
            "header": [
             {
              "key": "Content-Type",
              "value": "application/vnd.contentful.delivery.v1+json",
              "description": ""
             }
            ],
            "cookie": null,
            "body": "{\n  \"sys\": {\n    \"type\": \"Array\"\n  },\n  \"total\": 1,\n  \"skip\": 0,\n  \"limit\": 100,\n  \"items\": [\n    {\n      \"fields\": {\n        \"productName\": \"Contentful\"\n      }\n    }\n  ]\n}"
           }
          ]
         }
        ],
        "description": "The select operator allows you to choose what fields to return from an entity. You can choose multiple values by combining comma separated operators.\n\nFor example, if you want to return the `sys.id` and `fields.name` of an Entry you would use:\n\n```bash\n/spaces/yadj1kx9rmg0/environments/{environment_id}/entries/?select=sys.id,fields.productName\u0026content_type=2PqfXUJwE8qSYKuM0U6w8M\n```\n\nYou can fetch the entire `sys` or `fields` object and it's sub-fields by passing it to the `select` operator. For example to omit the `sys` object:\n\n```bash\n/spaces/yadj1kx9rmg0/environments/{environment_id}/entries/?select=fields\u0026content_type=2PqfXUJwE8qSYKuM0U6w8M\n```\n\nThe select operator has some restrictions:\n\n- It is only applicable for collections of Entries and Assets, and with an Entry you must provide the `content_type` query parameter.\n\n- It can only select properties to a depth of **2**. For example, `select=fields.productName.en-US` is not valid.\n\n- If you want to select a property for a specific locale, you need to combine the `select` and `locale` operators, e.g `/assets/?select=fields.productName\u0026locale=en-US`.\n\n- You can select up to 100 properties.\n\n- If you use the select operator on an Entry with linked fields, only the content linked to a field you select will be returned.\n\nIf you provide an invalid property path, e.g `fields.doesNotExist`, Contentful returns a `400 Bad request` containing the invalid property path."
       },
       {
        "name": "Equality operator",
        "item": [
         {
          "name": "Query entries",
          "request": {
           "auth": {
            "type": "bearer",
            "bearer": [
             {
              "key": "token",
              "value": "{{cda_access_token}}",
              "type": "string"
             }
            ]
           },
           "method": "GET",
           "header": [],
           "url": {
            "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/entries?\u0026:attribute=VALUE",
            "protocol": "https",
            "host": [
             "{{cda_url}}"
            ],
            "path": [
             "spaces",
             ":space_id",
             "environments",
             ":environment_id",
             "entries"
            ],
            "query": [
             {
              "key": "{attribute}",
              "value": "VALUE"
             }
            ],
            "variable": [
             {
              "key": "space_id",
              "value": "yadj1kx9rmg0",
              "type": "string",
              "description": "Alphanumeric id of the space to retrieve."
             },
             {
              "key": "environment_id",
              "value": "staging",
              "type": "string",
              "description": "ID of the environment in form of a string."
             },
             {
              "key": "access_token",
              "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
              "type": "string",
              "description": "A *production* Content Delivery API key."
             },
             {
              "key": "attribute",
              "value": "sys.id",
              "type": "string",
              "description": "The attribute to match."
             },
             {
              "key": "value",
              "value": "5KsDBWseXY6QegucYAoacS",
              "type": "string",
              "description": "The value to match."
             }
            ]
           },
           "description": "To find all entries with the ID `5KsDBWseXY6QegucYAoacS` (IDs are unique).",
           "body": {
            "mode": "",
            "raw": "",
            "options": {
             "raw": {
              "language": ""
             }
            }
           }
          },
          "response": [
           {
            "name": "Query entries",
            "originalRequest": {
             "auth": {
              "type": "bearer",
              "bearer": [
               {
                "key": "token",
                "value": "{{cda_access_token}}",
                "type": "string"
               }
              ]
             },
             "method": "GET",
             "header": [],
             "url": {
              "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/entries?\u0026:attribute=VALUE",
              "protocol": "https",
              "host": [
               "{{cda_url}}"
              ],
              "path": [
               "spaces",
               ":space_id",
               "environments",
               ":environment_id",
               "entries"
              ],
              "query": [
               {
                "key": "{attribute}",
                "value": "VALUE"
               }
              ],
              "variable": [
               {
                "key": "space_id",
                "value": "yadj1kx9rmg0",
                "type": "string",
                "description": "Alphanumeric id of the space to retrieve."
               },
               {
                "key": "environment_id",
                "value": "staging",
                "type": "string",
                "description": "ID of the environment in form of a string."
               },
               {
                "key": "access_token",
                "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
                "type": "string",
                "description": "A *production* Content Delivery API key."
               },
               {
                "key": "attribute",
                "value": "sys.id",
                "type": "string",
                "description": "The attribute to match."
               },
               {
                "key": "value",
                "value": "5KsDBWseXY6QegucYAoacS",
                "type": "string",
                "description": "The value to match."
               }
              ]
             },
             "description": "To find all entries with the ID `5KsDBWseXY6QegucYAoacS` (IDs are unique).",
             "body": {
              "mode": "",
              "raw": "",
              "options": {
               "raw": {
                "language": ""
               }
              }
             }
            },
            "status": "",
            "code": 200,
            "header": [
             {
              "key": "Content-Type",
              "value": "application/vnd.contentful.delivery.v1+json",
              "description": ""
             }
            ],
            "cookie": null,
            "body": "{\n  \"sys\": {\n    \"type\": \"Array\"\n  },\n  \"total\": 0,\n  \"skip\": 0,\n  \"limit\": 100,\n  \"items\": []\n}"
           }
          ]
         }
        ],
        "description": "You can search for exact matches by using the equality operator. This includes querying an entry by an ID value instead of retrieving the Entry directly, which allows you to include resolved links.\n\n**Note**: Equality and inequality operators are not supported for text fields and you need to constrain search queries for fields with a `content_type` URI query parameter."
       },
       {
        "name": "Inequality operator",
        "item": [
         {
          "name": "Query entries",
          "request": {
           "auth": {
            "type": "bearer",
            "bearer": [
             {
              "key": "token",
              "value": "{{cda_access_token}}",
              "type": "string"
             }
            ]
           },
           "method": "GET",
           "header": [],
           "url": {
            "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/entries?\u0026:attribute[ne]=VALUE",
            "protocol": "https",
            "host": [
             "{{cda_url}}"
            ],
            "path": [
             "spaces",
             ":space_id",
             "environments",
             ":environment_id",
             "entries"
            ],
            "query": [
             {
              "key": "{attribute}[ne]",
              "value": "VALUE"
             }
            ],
            "variable": [
             {
              "key": "space_id",
              "value": "yadj1kx9rmg0",
              "type": "string",
              "description": "Alphanumeric id of the space to retrieve."
             },
             {
              "key": "environment_id",
              "value": "staging",
              "type": "string",
              "description": "ID of the environment in form of a string"
             },
             {
              "key": "access_token",
              "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
              "type": "string",
              "description": "A *production* Content Delivery API key."
             },
             {
              "key": "attribute",
              "value": "sys.id",
              "type": "string",
              "description": "The attribute to match."
             },
             {
              "key": "value",
              "value": "5KsDBWseXY6QegucYAoacS",
              "type": "string",
              "description": "The value to match."
             }
            ]
           },
           "description": "To return all entries, except those with the ID `5KsDBWseXY6QegucYAoacS`.",
           "body": {
            "mode": "",
            "raw": "",
            "options": {
             "raw": {
              "language": ""
             }
            }
           }
          },
          "response": [
           {
            "name": "Query entries",
            "originalRequest": {
             "auth": {
              "type": "bearer",
              "bearer": [
               {
                "key": "token",
                "value": "{{cda_access_token}}",
                "type": "string"
               }
              ]
             },
             "method": "GET",
             "header": [],
             "url": {
              "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/entries?\u0026:attribute[ne]=VALUE",
              "protocol": "https",
              "host": [
               "{{cda_url}}"
              ],
              "path": [
               "spaces",
               ":space_id",
               "environments",
               ":environment_id",
               "entries"
              ],
              "query": [
               {
                "key": "{attribute}[ne]",
                "value": "VALUE"
               }
              ],
              "variable": [
               {
                "key": "space_id",
                "value": "yadj1kx9rmg0",
                "type": "string",
                "description": "Alphanumeric id of the space to retrieve."
               },
               {
                "key": "environment_id",
                "value": "staging",
                "type": "string",
                "description": "ID of the environment in form of a string"
               },
               {
                "key": "access_token",
                "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
                "type": "string",
                "description": "A *production* Content Delivery API key."
               },
               {
                "key": "attribute",
                "value": "sys.id",
                "type": "string",
                "description": "The attribute to match."
               },
               {
                "key": "value",
                "value": "5KsDBWseXY6QegucYAoacS",
                "type": "string",
                "description": "The value to match."
               }
              ]
             },
             "description": "To return all entries, except those with the ID `5KsDBWseXY6QegucYAoacS`.",
             "body": {
              "mode": "",
              "raw": "",
              "options": {
               "raw": {
                "language": ""
               }
              }
             }
            },
            "status": "",
            "code": 200,
            "header": [
             {
              "key": "Content-Type",
              "value": "application/vnd.contentful.delivery.v1+json",
              "description": ""
             }
            ],
            "cookie": null,
            "body": "{\n  \"sys\": {\n    \"type\": \"Array\"\n  },\n  \"total\": 0,\n  \"skip\": 0,\n  \"limit\": 100,\n  \"items\": []\n}"
           }
          ]
         }
        ],
        "description": "Uses the `[ne]` parameter to exclude items matching a certain pattern."
       },
       {
        "name": "Array equality/inequality",
        "item": [
         {
          "name": "Query entries",
          "request": {
           "auth": {
            "type": "bearer",
            "bearer": [
             {
              "key": "token",
              "value": "{{cda_access_token}}",
              "type": "string"
             }
            ]
           },
           "method": "GET",
           "header": [],
           "url": {
            "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/entries?\u0026content_type=CONTENT_TYPE\u0026fields.:field_id=VALUE",
            "protocol": "https",
            "host": [
             "{{cda_url}}"
            ],
            "path": [
             "spaces",
             ":space_id",
             "environments",
             ":environment_id",
             "entries"
            ],
            "query": [
             {
              "key": "content_type",
              "value": "CONTENT_TYPE"
             },
             {
              "key": "fields.{field_id}",
              "value": "VALUE"
             }
            ],
            "variable": [
             {
              "key": "space_id",
              "value": "yadj1kx9rmg0",
              "type": "string",
              "description": "Alphanumeric id of the space to retrieve."
             },
             {
              "key": "environment_id",
              "value": "staging",
              "type": "string",
              "description": "ID of the environment in form of a string"
             },
             {
              "key": "access_token",
              "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
              "type": "string",
              "description": "A *production* Content Delivery API key."
             },
             {
              "key": "field_id",
              "value": "tags",
              "type": "string",
              "description": "The attribute to match."
             },
             {
              "key": "value",
              "value": "accessories",
              "type": "string",
              "description": "The value to match."
             }
            ]
           },
           "description": "This example finds all products tagged as `accessories` by matching `fields.tags` (an array) against a single value.",
           "body": {
            "mode": "",
            "raw": "",
            "options": {
             "raw": {
              "language": ""
             }
            }
           }
          },
          "response": [
           {
            "name": "Query entries",
            "originalRequest": {
             "auth": {
              "type": "bearer",
              "bearer": [
               {
                "key": "token",
                "value": "{{cda_access_token}}",
                "type": "string"
               }
              ]
             },
             "method": "GET",
             "header": [],
             "url": {
              "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/entries?\u0026content_type=CONTENT_TYPE\u0026fields.:field_id=VALUE",
              "protocol": "https",
              "host": [
               "{{cda_url}}"
              ],
              "path": [
               "spaces",
               ":space_id",
               "environments",
               ":environment_id",
               "entries"
              ],
              "query": [
               {
                "key": "content_type",
                "value": "CONTENT_TYPE"
               },
               {
                "key": "fields.{field_id}",
                "value": "VALUE"
               }
              ],
              "variable": [
               {
                "key": "space_id",
                "value": "yadj1kx9rmg0",
                "type": "string",
                "description": "Alphanumeric id of the space to retrieve."
               },
               {
                "key": "environment_id",
                "value": "staging",
                "type": "string",
                "description": "ID of the environment in form of a string"
               },
               {
                "key": "access_token",
                "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
                "type": "string",
                "description": "A *production* Content Delivery API key."
               },
               {
                "key": "field_id",
                "value": "tags",
                "type": "string",
                "description": "The attribute to match."
               },
               {
                "key": "value",
                "value": "accessories",
                "type": "string",
                "description": "The value to match."
               }
              ]
             },
             "description": "This example finds all products tagged as `accessories` by matching `fields.tags` (an array) against a single value.",
             "body": {
              "mode": "",
              "raw": "",
              "options": {
               "raw": {
                "language": ""
               }
              }
             }
            },
            "status": "",
            "code": 200,
            "header": [
             {
              "key": "Content-Type",
              "value": "application/vnd.contentful.delivery.v1+json",
              "description": ""
             }
            ],
            "cookie": null,
            "body": "{\n  \"sys\": {\n    \"type\": \"Array\"\n  },\n  \"total\": 0,\n  \"skip\": 0,\n  \"limit\": 100,\n  \"items\": []\n}"
           }
          ]
         }
        ],
        "description": "The equality/inequality operators also work with array fields:\n\n- **Equality**: If one of the items in an array matches the searched term, then it returns the entry.\n\n- **Inequality**: If one of the fields in an array matches the searched term, then the entry is **not** returned.\n\n**Note**: As the query filters by a field, you need to specify a content type."
       },
       {
        "name": "Array with multiple values",
        "item": [
         {
          "name": "Query entries",
          "request": {
           "auth": {
            "type": "bearer",
            "bearer": [
             {
              "key": "token",
              "value": "{{cda_access_token}}",
              "type": "string"
             }
            ]
           },
           "method": "GET",
           "header": [],
           "url": {
            "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/entries?\u0026content_type=CONTENT_TYPE\u0026fields.:field_id[all]=VALUES",
            "protocol": "https",
            "host": [
             "{{cda_url}}"
            ],
            "path": [
             "spaces",
             ":space_id",
             "environments",
             ":environment_id",
             "entries"
            ],
            "query": [
             {
              "key": "content_type",
              "value": "CONTENT_TYPE"
             },
             {
              "key": "fields.{field_id}[all]",
              "value": "VALUES"
             }
            ],
            "variable": [
             {
              "key": "space_id",
              "value": "yadj1kx9rmg0",
              "type": "string",
              "description": "Alphanumeric id of the space to retrieve."
             },
             {
              "key": "environment_id",
              "value": "staging",
              "type": "string",
              "description": "ID of the environment in form of a string"
             },
             {
              "key": "access_token",
              "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
              "type": "string",
              "description": "A *production* Content Delivery API key."
             },
             {
              "key": "field_id",
              "value": "tags",
              "type": "string",
              "description": "The attribute to match."
             },
             {
              "key": "values",
              "value": "flowers,accessories",
              "type": "string",
              "description": "The value to match."
             }
            ]
           },
           "description": "To find all products tagged as `flowers` and `accessories` by using the `all` operator with `fields.tags` (an array) and the two values.",
           "body": {
            "mode": "",
            "raw": "",
            "options": {
             "raw": {
              "language": ""
             }
            }
           }
          },
          "response": [
           {
            "name": "Query entries",
            "originalRequest": {
             "auth": {
              "type": "bearer",
              "bearer": [
               {
                "key": "token",
                "value": "{{cda_access_token}}",
                "type": "string"
               }
              ]
             },
             "method": "GET",
             "header": [],
             "url": {
              "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/entries?\u0026content_type=CONTENT_TYPE\u0026fields.:field_id[all]=VALUES",
              "protocol": "https",
              "host": [
               "{{cda_url}}"
              ],
              "path": [
               "spaces",
               ":space_id",
               "environments",
               ":environment_id",
               "entries"
              ],
              "query": [
               {
                "key": "content_type",
                "value": "CONTENT_TYPE"
               },
               {
                "key": "fields.{field_id}[all]",
                "value": "VALUES"
               }
              ],
              "variable": [
               {
                "key": "space_id",
                "value": "yadj1kx9rmg0",
                "type": "string",
                "description": "Alphanumeric id of the space to retrieve."
               },
               {
                "key": "environment_id",
                "value": "staging",
                "type": "string",
                "description": "ID of the environment in form of a string"
               },
               {
                "key": "access_token",
                "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
                "type": "string",
                "description": "A *production* Content Delivery API key."
               },
               {
                "key": "field_id",
                "value": "tags",
                "type": "string",
                "description": "The attribute to match."
               },
               {
                "key": "values",
                "value": "flowers,accessories",
                "type": "string",
                "description": "The value to match."
               }
              ]
             },
             "description": "To find all products tagged as `flowers` and `accessories` by using the `all` operator with `fields.tags` (an array) and the two values.",
             "body": {
              "mode": "",
              "raw": "",
              "options": {
               "raw": {
                "language": ""
               }
              }
             }
            },
            "status": "",
            "code": 200,
            "header": [
             {
              "key": "Content-Type",
              "value": "application/vnd.contentful.delivery.v1+json",
              "description": ""
             }
            ],
            "cookie": null,
            "body": "{\n  \"sys\": {\n    \"type\": \"Array\"\n  },\n  \"total\": 0,\n  \"skip\": 0,\n  \"limit\": 100,\n  \"items\": []\n}"
           }
          ]
         }
        ],
        "description": "It's possible to use the `[all]` operator to retrieve entries matching a specific set of values (e.g. `fields.likes[all]=flowers,accessories`)"
       },
       {
        "name": "Inclusion",
        "item": [
         {
          "name": "Query entries",
          "request": {
           "auth": {
            "type": "bearer",
            "bearer": [
             {
              "key": "token",
              "value": "{{cda_access_token}}",
              "type": "string"
             }
            ]
           },
           "method": "GET",
           "header": [],
           "url": {
            "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/entries?\u0026content_type=CONTENT_TYPE\u0026:attribute[in]=VALUE",
            "protocol": "https",
            "host": [
             "{{cda_url}}"
            ],
            "path": [
             "spaces",
             ":space_id",
             "environments",
             ":environment_id",
             "entries"
            ],
            "query": [
             {
              "key": "content_type",
              "value": "CONTENT_TYPE"
             },
             {
              "key": "{attribute}[in]",
              "value": "VALUE"
             }
            ],
            "variable": [
             {
              "key": "space_id",
              "value": "yadj1kx9rmg0",
              "type": "string",
              "description": "Alphanumeric id of the space to retrieve."
             },
             {
              "key": "environment_id",
              "value": "staging",
              "type": "string",
              "description": "ID of the environment in form of a string"
             },
             {
              "key": "access_token",
              "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
              "type": "string",
              "description": "A *production* Content Delivery API key."
             },
             {
              "key": "attribute",
              "value": "fields.tags",
              "type": "string",
              "description": "The attribute to match."
             },
             {
              "key": "value",
              "value": "accessories,flowers",
              "type": "string",
              "description": "The value to match."
             }
            ]
           },
           "description": "To retrieve entries that match `accessories` and `flowers`.",
           "body": {
            "mode": "",
            "raw": "",
            "options": {
             "raw": {
              "language": ""
             }
            }
           }
          },
          "response": [
           {
            "name": "Query entries",
            "originalRequest": {
             "auth": {
              "type": "bearer",
              "bearer": [
               {
                "key": "token",
                "value": "{{cda_access_token}}",
                "type": "string"
               }
              ]
             },
             "method": "GET",
             "header": [],
             "url": {
              "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/entries?\u0026content_type=CONTENT_TYPE\u0026:attribute[in]=VALUE",
              "protocol": "https",
              "host": [
               "{{cda_url}}"
              ],
              "path": [
               "spaces",
               ":space_id",
               "environments",
               ":environment_id",
               "entries"
              ],
              "query": [
               {
                "key": "content_type",
                "value": "CONTENT_TYPE"
               },
               {
                "key": "{attribute}[in]",
                "value": "VALUE"
               }
              ],
              "variable": [
               {
                "key": "space_id",
                "value": "yadj1kx9rmg0",
                "type": "string",
                "description": "Alphanumeric id of the space to retrieve."
               },
               {
                "key": "environment_id",
                "value": "staging",
                "type": "string",
                "description": "ID of the environment in form of a string"
               },
               {
                "key": "access_token",
                "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
                "type": "string",
                "description": "A *production* Content Delivery API key."
               },
               {
                "key": "attribute",
                "value": "fields.tags",
                "type": "string",
                "description": "The attribute to match."
               },
               {
                "key": "value",
                "value": "accessories,flowers",
                "type": "string",
                "description": "The value to match."
               }
              ]
             },
             "description": "To retrieve entries that match `accessories` and `flowers`.",
             "body": {
              "mode": "",
              "raw": "",
              "options": {
               "raw": {
                "language": ""
               }
              }
             }
            },
            "status": "",
            "code": 200,
            "header": [
             {
              "key": "Content-Type",
              "value": "application/vnd.contentful.delivery.v1+json",
              "description": ""
             }
            ],
            "cookie": null,
            "body": "{\n  \"sys\": {\n    \"type\": \"Array\"\n  },\n  \"total\": 0,\n  \"skip\": 0,\n  \"limit\": 100,\n  \"items\": []\n}"
           }
          ]
         }
        ],
        "description": "You can filter a field by multiple values with the `[in]` operator. When applied to an array value there must be at least one matching item. Similarly, when including a field value, you need to specify a Content type."
       },
       {
        "name": "Exclusion",
        "item": [
         {
          "name": "Query entries",
          "request": {
           "auth": {
            "type": "bearer",
            "bearer": [
             {
              "key": "token",
              "value": "{{cda_access_token}}",
              "type": "string"
             }
            ]
           },
           "method": "GET",
           "header": [],
           "url": {
            "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/entries?\u0026content_type=CONTENT_TYPE\u0026:attribute[nin]=VALUE",
            "protocol": "https",
            "host": [
             "{{cda_url}}"
            ],
            "path": [
             "spaces",
             ":space_id",
             "environments",
             ":environment_id",
             "entries"
            ],
            "query": [
             {
              "key": "{attribute}[nin]",
              "value": "VALUE"
             },
             {
              "key": "content_type",
              "value": "CONTENT_TYPE"
             }
            ],
            "variable": [
             {
              "key": "space_id",
              "value": "yadj1kx9rmg0",
              "type": "string",
              "description": "Alphanumeric id of the space to retrieve."
             },
             {
              "key": "environment_id",
              "value": "staging",
              "type": "string",
              "description": "ID of the environment in form of a string"
             },
             {
              "key": "access_token",
              "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
              "type": "string",
              "description": "A *production* Content Delivery API key."
             },
             {
              "key": "attribute",
              "value": "fields.tags",
              "type": "string",
              "description": "The attribute to match."
             },
             {
              "key": "value",
              "value": "flowers,accessories",
              "type": "string",
              "description": "The value to match."
             }
            ]
           },
           "description": "To retrieve all products tagged as neither 'flowers' nor 'accessories'.",
           "body": {
            "mode": "",
            "raw": "",
            "options": {
             "raw": {
              "language": ""
             }
            }
           }
          },
          "response": [
           {
            "name": "Query entries",
            "originalRequest": {
             "auth": {
              "type": "bearer",
              "bearer": [
               {
                "key": "token",
                "value": "{{cda_access_token}}",
                "type": "string"
               }
              ]
             },
             "method": "GET",
             "header": [],
             "url": {
              "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/entries?\u0026content_type=CONTENT_TYPE\u0026:attribute[nin]=VALUE",
              "protocol": "https",
              "host": [
               "{{cda_url}}"
              ],
              "path": [
               "spaces",
               ":space_id",
               "environments",
               ":environment_id",
               "entries"
              ],
              "query": [
               {
                "key": "{attribute}[nin]",
                "value": "VALUE"
               },
               {
                "key": "content_type",
                "value": "CONTENT_TYPE"
               }
              ],
              "variable": [
               {
                "key": "space_id",
                "value": "yadj1kx9rmg0",
                "type": "string",
                "description": "Alphanumeric id of the space to retrieve."
               },
               {
                "key": "environment_id",
                "value": "staging",
                "type": "string",
                "description": "ID of the environment in form of a string"
               },
               {
                "key": "access_token",
                "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
                "type": "string",
                "description": "A *production* Content Delivery API key."
               },
               {
                "key": "attribute",
                "value": "fields.tags",
                "type": "string",
                "description": "The attribute to match."
               },
               {
                "key": "value",
                "value": "flowers,accessories",
                "type": "string",
                "description": "The value to match."
               }
              ]
             },
             "description": "To retrieve all products tagged as neither 'flowers' nor 'accessories'.",
             "body": {
              "mode": "",
              "raw": "",
              "options": {
               "raw": {
                "language": ""
               }
              }
             }
            },
            "status": "",
            "code": 200,
            "header": [
             {
              "key": "Content-Type",
              "value": "application/vnd.contentful.delivery.v1+json",
              "description": ""
             }
            ],
            "cookie": null,
            "body": "{\n  \"sys\": {\n    \"type\": \"Array\"\n  },\n  \"total\": 0,\n  \"skip\": 0,\n  \"limit\": 100,\n  \"items\": []\n}"
           }
          ]
         }
        ],
        "description": "You can filter a field by multiple values with the `[nin]` operator. When applied to an array value there must be at least one not matching item. Similarly, when including a field value, you need to specify a content type."
       },
       {
        "name": "Existence",
        "item": [
         {
          "name": "Query entries",
          "request": {
           "auth": {
            "type": "bearer",
            "bearer": [
             {
              "key": "token",
              "value": "{{cda_access_token}}",
              "type": "string"
             }
            ]
           },
           "method": "GET",
           "header": [],
           "url": {
            "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/entries?\u0026content_type=CONTENT_TYPE\u0026:attribute[exists]=VALUE",
            "protocol": "https",
            "host": [
             "{{cda_url}}"
            ],
            "path": [
             "spaces",
             ":space_id",
             "environments",
             ":environment_id",
             "entries"
            ],
            "query": [
             {
              "key": "{attribute}[exists]",
              "value": "VALUE"
             },
             {
              "key": "content_type",
              "value": "CONTENT_TYPE"
             }
            ],
            "variable": [
             {
              "key": "space_id",
              "value": "yadj1kx9rmg0",
              "type": "string",
              "description": "Alphanumeric id of the space to retrieve."
             },
             {
              "key": "environment_id",
              "value": "staging",
              "type": "string",
              "description": "ID of the environment in form of a string"
             },
             {
              "key": "access_token",
              "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
              "type": "string",
              "description": "A *production* Content Delivery API key."
             },
             {
              "key": "attribute",
              "value": "fields.tags",
              "type": "string",
              "description": "The path to the property we're checking for existence"
             },
             {
              "key": "value",
              "value": "true",
              "type": "boolean",
              "description": "True if the path from attribute should exist"
             }
            ]
           },
           "description": "To retrieve all entries that have a value for `field.tags` defined.",
           "body": {
            "mode": "",
            "raw": "",
            "options": {
             "raw": {
              "language": ""
             }
            }
           }
          },
          "response": [
           {
            "name": "Query entries",
            "originalRequest": {
             "auth": {
              "type": "bearer",
              "bearer": [
               {
                "key": "token",
                "value": "{{cda_access_token}}",
                "type": "string"
               }
              ]
             },
             "method": "GET",
             "header": [],
             "url": {
              "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/entries?\u0026content_type=CONTENT_TYPE\u0026:attribute[exists]=VALUE",
              "protocol": "https",
              "host": [
               "{{cda_url}}"
              ],
              "path": [
               "spaces",
               ":space_id",
               "environments",
               ":environment_id",
               "entries"
              ],
              "query": [
               {
                "key": "{attribute}[exists]",
                "value": "VALUE"
               },
               {
                "key": "content_type",
                "value": "CONTENT_TYPE"
               }
              ],
              "variable": [
               {
                "key": "space_id",
                "value": "yadj1kx9rmg0",
                "type": "string",
                "description": "Alphanumeric id of the space to retrieve."
               },
               {
                "key": "environment_id",
                "value": "staging",
                "type": "string",
                "description": "ID of the environment in form of a string"
               },
               {
                "key": "access_token",
                "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
                "type": "string",
                "description": "A *production* Content Delivery API key."
               },
               {
                "key": "attribute",
                "value": "fields.tags",
                "type": "string",
                "description": "The path to the property we're checking for existence"
               },
               {
                "key": "value",
                "value": "true",
                "type": "boolean",
                "description": "True if the path from attribute should exist"
               }
              ]
             },
             "description": "To retrieve all entries that have a value for `field.tags` defined.",
             "body": {
              "mode": "",
              "raw": "",
              "options": {
               "raw": {
                "language": ""
               }
              }
             }
            },
            "status": "",
            "code": 200,
            "header": [
             {
              "key": "Content-Type",
              "value": "application/vnd.contentful.delivery.v1+json",
              "description": ""
             }
            ],
            "cookie": null,
            "body": "{\n  \"sys\": {\n    \"type\": \"Array\"\n  },\n  \"total\": 0,\n  \"skip\": 0,\n  \"limit\": 100,\n  \"items\": []\n}"
           }
          ]
         }
        ],
        "description": "You can check for the presence of a field using the `[exists]` operator. It checks whether a certain field is defined (i.e. it has any value) or not.\n\nIf the field is not defined, it will not be present in the JSON payload and the operator will consider it non-existent.\n\nYou can pass `true` or `false` as a parameter depending on if you want to retrieve entries where the field exists (`true`) or does not exist (`false`). Please note that the parameter is case sensitive, `True` or `False` are not valid values."
       },
       {
        "name": "Ranges",
        "item": [
         {
          "name": "Query entries",
          "request": {
           "auth": {
            "type": "bearer",
            "bearer": [
             {
              "key": "token",
              "value": "{{cda_access_token}}",
              "type": "string"
             }
            ]
           },
           "method": "GET",
           "header": [],
           "url": {
            "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/entries?\u0026:attribute[gte]=VALUE",
            "protocol": "https",
            "host": [
             "{{cda_url}}"
            ],
            "path": [
             "spaces",
             ":space_id",
             "environments",
             ":environment_id",
             "entries"
            ],
            "query": [
             {
              "key": "{attribute}[gte]",
              "value": "VALUE"
             }
            ],
            "variable": [
             {
              "key": "space_id",
              "value": "yadj1kx9rmg0",
              "type": "string",
              "description": "Alphanumeric id of the space to retrieve."
             },
             {
              "key": "environment_id",
              "value": "staging",
              "type": "string",
              "description": "ID of the environment in form of a string"
             },
             {
              "key": "access_token",
              "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
              "type": "string",
              "description": "A *production* Content Delivery API key."
             },
             {
              "key": "attribute",
              "value": "sys.updatedAt",
              "type": "string",
              "description": "The attribute to match."
             },
             {
              "key": "value",
              "value": "2013-01-01T00:00:00Z",
              "type": "string",
              "description": "The value to match."
             }
            ]
           },
           "description": "To retrieve entries updated since midnight of January 1st 2013.",
           "body": {
            "mode": "",
            "raw": "",
            "options": {
             "raw": {
              "language": ""
             }
            }
           }
          },
          "response": [
           {
            "name": "Query entries",
            "originalRequest": {
             "auth": {
              "type": "bearer",
              "bearer": [
               {
                "key": "token",
                "value": "{{cda_access_token}}",
                "type": "string"
               }
              ]
             },
             "method": "GET",
             "header": [],
             "url": {
              "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/entries?\u0026:attribute[gte]=VALUE",
              "protocol": "https",
              "host": [
               "{{cda_url}}"
              ],
              "path": [
               "spaces",
               ":space_id",
               "environments",
               ":environment_id",
               "entries"
              ],
              "query": [
               {
                "key": "{attribute}[gte]",
                "value": "VALUE"
               }
              ],
              "variable": [
               {
                "key": "space_id",
                "value": "yadj1kx9rmg0",
                "type": "string",
                "description": "Alphanumeric id of the space to retrieve."
               },
               {
                "key": "environment_id",
                "value": "staging",
                "type": "string",
                "description": "ID of the environment in form of a string"
               },
               {
                "key": "access_token",
                "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
                "type": "string",
                "description": "A *production* Content Delivery API key."
               },
               {
                "key": "attribute",
                "value": "sys.updatedAt",
                "type": "string",
                "description": "The attribute to match."
               },
               {
                "key": "value",
                "value": "2013-01-01T00:00:00Z",
                "type": "string",
                "description": "The value to match."
               }
              ]
             },
             "description": "To retrieve entries updated since midnight of January 1st 2013.",
             "body": {
              "mode": "",
              "raw": "",
              "options": {
               "raw": {
                "language": ""
               }
              }
             }
            },
            "status": "",
            "code": 200,
            "header": [
             {
              "key": "Content-Type",
              "value": "application/vnd.contentful.delivery.v1+json",
              "description": ""
             }
            ],
            "cookie": null,
            "body": "{\n  \"sys\": {\n    \"type\": \"Array\"\n  },\n  \"total\": 0,\n  \"skip\": 0,\n  \"limit\": 100,\n  \"items\": []\n}"
           }
          ]
         }
        ],
        "description": "Four range operators are available that you can apply to date and number fields:\n\n- `[lt]`: Less than.\n\n- `[lte]`: Less than or equal to.\n\n- `[gt]`: Greater than.\n\n- `[gte]`: Greater than or equal to.\n\nWhen applied to field values, you must specify the content type in the query."
       },
       {
        "name": "Full-text search",
        "item": [
         {
          "name": "Query entries",
          "request": {
           "auth": {
            "type": "bearer",
            "bearer": [
             {
              "key": "token",
              "value": "{{cda_access_token}}",
              "type": "string"
             }
            ]
           },
           "method": "GET",
           "header": [],
           "url": {
            "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/entries?\u0026query=VALUE",
            "protocol": "https",
            "host": [
             "{{cda_url}}"
            ],
            "path": [
             "spaces",
             ":space_id",
             "environments",
             ":environment_id",
             "entries"
            ],
            "query": [
             {
              "key": "query",
              "value": "VALUE"
             }
            ],
            "variable": [
             {
              "key": "space_id",
              "value": "yadj1kx9rmg0",
              "type": "string",
              "description": "Alphanumeric id of the space to retrieve."
             },
             {
              "key": "environment_id",
              "value": "staging",
              "type": "string",
              "description": "ID of the environment in form of a string"
             },
             {
              "key": "access_token",
              "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
              "type": "string",
              "description": "A *production* Content Delivery API key."
             },
             {
              "key": "value",
              "value": "design",
              "type": "string",
              "description": "The value to match."
             }
            ]
           },
           "description": "To retrieve all entries containing the word 'design'.",
           "body": {
            "mode": "",
            "raw": "",
            "options": {
             "raw": {
              "language": ""
             }
            }
           }
          },
          "response": [
           {
            "name": "Query entries",
            "originalRequest": {
             "auth": {
              "type": "bearer",
              "bearer": [
               {
                "key": "token",
                "value": "{{cda_access_token}}",
                "type": "string"
               }
              ]
             },
             "method": "GET",
             "header": [],
             "url": {
              "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/entries?\u0026query=VALUE",
              "protocol": "https",
              "host": [
               "{{cda_url}}"
              ],
              "path": [
               "spaces",
               ":space_id",
               "environments",
               ":environment_id",
               "entries"
              ],
              "query": [
               {
                "key": "query",
                "value": "VALUE"
               }
              ],
              "variable": [
               {
                "key": "space_id",
                "value": "yadj1kx9rmg0",
                "type": "string",
                "description": "Alphanumeric id of the space to retrieve."
               },
               {
                "key": "environment_id",
                "value": "staging",
                "type": "string",
                "description": "ID of the environment in form of a string"
               },
               {
                "key": "access_token",
                "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
                "type": "string",
                "description": "A *production* Content Delivery API key."
               },
               {
                "key": "value",
                "value": "design",
                "type": "string",
                "description": "The value to match."
               }
              ]
             },
             "description": "To retrieve all entries containing the word 'design'.",
             "body": {
              "mode": "",
              "raw": "",
              "options": {
               "raw": {
                "language": ""
               }
              }
             }
            },
            "status": "",
            "code": 200,
            "header": [
             {
              "key": "Content-Type",
              "value": "application/vnd.contentful.delivery.v1+json",
              "description": ""
             }
            ],
            "cookie": null,
            "body": "{\n  \"sys\": {\n    \"type\": \"Array\"\n  },\n  \"total\": 0,\n  \"skip\": 0,\n  \"limit\": 100,\n  \"items\": []\n}"
           }
          ]
         }
        ],
        "description": "You have available two flavours of full-text search:\n\n* Global, described in this section\n\n* Field scoped, described in the section [full-text search on a field](#/reference/search-parameters/full-text-search-on-a-field)\n\n### How does global full text search work\n\nThere are cases where you want to find all the content resources which contain\nsome particular words (search terms) but you don't know from which content type\n(for entries) or on which field those terms can be, so you can't use any of the\nfield filters. For cases like these full-text search is the perfect tool for\nthe job. With it you can find all the content resources which match your search\nterms in any of their text and symbol fields.\n\nFull-text search can be used to find entries, assets or content types. For the\nremainder of this section we will refer to entries but the same principles and\nrestrictions will apply to the other types.\n\n#### Which content is looked up during a global full-text search?\n\nAll text (both regular and rich text) and symbol fields in all the locales in your\nenvironment will be looked up when doing a global full-text search.\n\n#### How is an entry considered a match?\n\nBefore we explain how we identify matches to your search terms we have to\nexplain how these terms are transformed before they are sent to the search\nengine. After the API has received your query, the input string is sanitized\n(i.e. some special characters are removed), tokenized (i.e. split into it's\nconstituent parts) and normalized (i.e. guarantee that the tokens satisfy\ncertain constrains, e.g. removing XML tags). Then each of the remaining search tokens is suffixed with\na wildcard operator, which implies that full-text search at contentful is\nleft-anchored.\n\nWhen checking if an entry satisfies the search criteria, the search engine tests\nif all of the search tokens (i.e. the transformed search terms) can be found in\nany field in any locale in the entry. This means that an entry can be included\nin the result set due to matches in different fields and different locales or\ndue to a match in just one field in just one locale. There is also no guarantee\nabout the order in which the search terms can appear in the matching entries.\nA search for *modern red house* can be matched with entries which have those\nwords in any possible order (e.g. *red ... house ... modern*, *red ...  modern\n... house*, etc.).\n\nAll this combined means that when you for example search for *my cat is blue*,\nthe search engine will find all the entries where there are words starting with\n_my_ and _cat_ and _is_ and _blue_:\n\n* A field with content like _\u003cu\u003emy\u003c/u\u003e \u003cu\u003ecat\u003c/u\u003e \u003cu\u003eis\u003c/u\u003e \u003cu\u003eblue\u003c/u\u003e_ will match.\n\n* A field with content like _\u003cu\u003emy\u003c/u\u003e \u003cu\u003ecat\u003c/u\u003e \u003cu\u003eis\u003c/u\u003e red_ will not match.\n\n* A field with content like _there \u003cu\u003eis\u003c/u\u003e a \u003cu\u003ecat\u003c/u\u003eastrophic \u003cu\u003eblue\u003c/u\u003eberries accident in \u003cu\u003emy\u003c/u\u003e town_\nwill match.\n\n* A field with content like _there \u003cu\u003eis\u003c/u\u003e a \u003cu\u003ecat\u003c/u\u003eerpillar in \u003cu\u003emy\u003c/u\u003e house_ will not match.\n\n* A field with content like _this \u003cu\u003eis\u003c/u\u003e a picture of a \u003cu\u003ecat\u003c/u\u003eerpillar and \u003cu\u003emy\u003c/u\u003eself wearing a\n\u003cu\u003eblue\u003c/u\u003ejacket_ will match.\n\n* A field with content like _\u003cu\u003emy\u003c/u\u003e \u003cu\u003ecat\u003c/u\u003e \u003cu\u003eis\u003c/u\u003e \u0026lt;b\u003e\u003cu\u003eblue\u003c/u\u003e\u0026lt;/b\u003e_ will match.\n\n* A field with content like _\u003cu\u003emy\u003c/u\u003e \u003cu\u003ecat\u003c/u\u003e \u003cu\u003eis\u003c/u\u003e \u0026lt;b class=\"blue\"\u003egreat\u0026lt;/b\u003e_ will not match.\n\n* An entry with a field with content like _\u003cu\u003emy\u003c/u\u003e house was \u003cu\u003eblue\u003c/u\u003e_ and another field with\ncontent like *there \u003cu\u003eis\u003c/u\u003e a \u003cu\u003ecat\u003c/u\u003e* will match.\n\nCheck below the phrase full-text search section if you are interested on those\nentries where the given search terms can only be found in one field and in the\nsame order as in the search input.\n\nCheck the [full-text search on a\nfield](#/reference/search-parameters/full-text-search-on-a-field) section if you are\ninterested only on those entries where the given search terms are in only one\nfield.\n\n### Phrase full-text search\n\nBy default full-text search queries will take the search tokens and find all\nthose entries where the tokens can be found in any field, in any\nlocale and in any order. There are however cases where you might need a more\nrestrictive search strategy and only get those entries where the matches are\nin the same order as you specificed in the search and in only one field.  To\nachieve this you can wrap the search terms in double quotes (\") to enable phrase\nsearch.\n\nWhen you for example search for _\"my cat is blue\"_, the search engine will find\nall the entries where the words _my_, _cat_, _is_ and _blue_ are found in\nthat order in one field:\n\n* A field with content like _\u003cu\u003emy\u003c/u\u003e \u003cu\u003ecat\u003c/u\u003e \u003cu\u003eis\u003c/u\u003e \u003cu\u003eblue\u003c/u\u003e_ will match.\n\n* A field with content like _\u003cu\u003emy\u003c/u\u003e \u003cu\u003ecat\u003c/u\u003e \u003cu\u003eis\u003c/u\u003e \u0026lt;b\u003e\u003cu\u003eblue\u003c/u\u003e\u0026lt;/b\u003e_ will match.\n\n* A field with content like  _\u003cu\u003eblue\u003c/u\u003e \u003cu\u003eis\u003c/u\u003e the color of \u003cu\u003emy\u003c/u\u003e \u003cu\u003ecat\u003c/u\u003e_ will not match.\n\n* A field with content like _\u003cu\u003emy\u003c/u\u003e caterpillar \u003cu\u003eis\u003c/u\u003e \u003cu\u003eblue\u003c/u\u003e_ will not match.\n\n* An entry with a field with content like _\u003cu\u003emy\u003c/u\u003e house was \u003cu\u003eblue\u003c/u\u003e_ and another field with\ncontent like _there \u003cu\u003eis\u003c/u\u003e a \u003cu\u003ecat\u003c/u\u003e_ will not match.\n\nIf you wish you can combine phrase search with the default full-text search\nbehaviour. This can be useful to refine even more the result set. For example a\nsearch like _\"my cat is blue\" summer london_ will match all those entries where\nthe term _\"my cat is blue\"_ can be found in just one field in one locale and\nwhere the terms _summer_ and _london_ can be found in any field in any locale\npresent in the entry (including the field where the phrase was matched).\n\n### Other considerations about full-text search\n\n- Full-text search is case insensitive and might return more results than\nexpected.\n\n- A query will ignore search tokens with less than **2** characters.\n\n- When using full text search, make your search terms as specific as possible.\n\n- The `[match]` operator might return better results.\n\n- Use phrase search when possible as it has better performance.\n\n- For performance reasons it is recommended to use the\n[equality search operator](#/reference/search-parameters/equality-operator)\nwhen searching for slugs or text IDs.\n\nFor more tips on using full-text search, see our [Help Center\narticle](/help/content-search/#tips-for-optimizing-search)."
       },
       {
        "name": "Full-text search on a field",
        "item": [
         {
          "name": "Query entries",
          "request": {
           "auth": {
            "type": "bearer",
            "bearer": [
             {
              "key": "token",
              "value": "{{cda_access_token}}",
              "type": "string"
             }
            ]
           },
           "method": "GET",
           "header": [],
           "url": {
            "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/entries?\u0026content_type=CONTENT_TYPE\u0026fields.:field_id[match]=VALUE",
            "protocol": "https",
            "host": [
             "{{cda_url}}"
            ],
            "path": [
             "spaces",
             ":space_id",
             "environments",
             ":environment_id",
             "entries"
            ],
            "query": [
             {
              "key": "content_type",
              "value": "CONTENT_TYPE"
             },
             {
              "key": "fields.{field_id}[match]",
              "value": "VALUE"
             }
            ],
            "variable": [
             {
              "key": "space_id",
              "value": "yadj1kx9rmg0",
              "type": "string",
              "description": "Alphanumeric id of the space to retrieve."
             },
             {
              "key": "environment_id",
              "value": "staging",
              "type": "string",
              "description": "ID of the environment in form of a string"
             },
             {
              "key": "access_token",
              "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
              "type": "string",
              "description": "A *production* Content Delivery API key."
             },
             {
              "key": "field_id",
              "value": "website",
              "type": "string",
              "description": "Name of the field you wish to search."
             },
             {
              "key": "value",
              "value": "content",
              "type": "string",
              "description": "The value to match."
             }
            ]
           },
           "description": "To retrieve all entries which contain words starting with 'content' in the 'website' field.",
           "body": {
            "mode": "",
            "raw": "",
            "options": {
             "raw": {
              "language": ""
             }
            }
           }
          },
          "response": [
           {
            "name": "Query entries",
            "originalRequest": {
             "auth": {
              "type": "bearer",
              "bearer": [
               {
                "key": "token",
                "value": "{{cda_access_token}}",
                "type": "string"
               }
              ]
             },
             "method": "GET",
             "header": [],
             "url": {
              "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/entries?\u0026content_type=CONTENT_TYPE\u0026fields.:field_id[match]=VALUE",
              "protocol": "https",
              "host": [
               "{{cda_url}}"
              ],
              "path": [
               "spaces",
               ":space_id",
               "environments",
               ":environment_id",
               "entries"
              ],
              "query": [
               {
                "key": "content_type",
                "value": "CONTENT_TYPE"
               },
               {
                "key": "fields.{field_id}[match]",
                "value": "VALUE"
               }
              ],
              "variable": [
               {
                "key": "space_id",
                "value": "yadj1kx9rmg0",
                "type": "string",
                "description": "Alphanumeric id of the space to retrieve."
               },
               {
                "key": "environment_id",
                "value": "staging",
                "type": "string",
                "description": "ID of the environment in form of a string"
               },
               {
                "key": "access_token",
                "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
                "type": "string",
                "description": "A *production* Content Delivery API key."
               },
               {
                "key": "field_id",
                "value": "website",
                "type": "string",
                "description": "Name of the field you wish to search."
               },
               {
                "key": "value",
                "value": "content",
                "type": "string",
                "description": "The value to match."
               }
              ]
             },
             "description": "To retrieve all entries which contain words starting with 'content' in the 'website' field.",
             "body": {
              "mode": "",
              "raw": "",
              "options": {
               "raw": {
                "language": ""
               }
              }
             }
            },
            "status": "",
            "code": 200,
            "header": [
             {
              "key": "Content-Type",
              "value": "application/vnd.contentful.delivery.v1+json",
              "description": ""
             }
            ],
            "cookie": null,
            "body": "{\n  \"sys\": {\n    \"type\": \"Array\"\n  },\n  \"total\": 0,\n  \"skip\": 0,\n  \"limit\": 100,\n  \"items\": []\n}"
           }
          ]
         }
        ],
        "description": "With the `[match]` operator you can do a full-text search restricted to the\ncontent of a specific field.  The way full-text search behaves on one field is\nthe same as in the global full-text search and the documentation for the [global\nfull-text search](#/reference/search-parameters/full-text-search) also applies\nhere, with the particularity that matches on other fields of the entries or\nassets won't be considered. As with the global search, you can enabled phrase\nsearch if you wrap the input search terms in double quoutes (\")."
       },
       {
        "name": "Location proximity search",
        "item": [
         {
          "name": "Query entries",
          "request": {
           "auth": {
            "type": "bearer",
            "bearer": [
             {
              "key": "token",
              "value": "{{cda_access_token}}",
              "type": "string"
             }
            ]
           },
           "method": "GET",
           "header": [],
           "url": {
            "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/entries?\u0026fields.center[near]=COORDINATE\u0026content_type=CONTENT_TYPE",
            "protocol": "https",
            "host": [
             "{{cda_url}}"
            ],
            "path": [
             "spaces",
             ":space_id",
             "environments",
             ":environment_id",
             "entries"
            ],
            "query": [
             {
              "key": "fields.center[near]",
              "value": "COORDINATE"
             },
             {
              "key": "content_type",
              "value": "CONTENT_TYPE"
             }
            ],
            "variable": [
             {
              "key": "space_id",
              "value": "yadj1kx9rmg0",
              "type": "string",
              "description": "Alphanumeric id of the space to retrieve."
             },
             {
              "key": "environment_id",
              "value": "staging",
              "type": "string",
              "description": "ID of the environment in form of a string"
             },
             {
              "key": "access_token",
              "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
              "type": "string",
              "description": "A *production* Content Delivery API key."
             },
             {
              "key": "coordinate",
              "value": "38,-122",
              "type": "string",
              "description": "Latitude and longitude of a location."
             }
            ]
           },
           "description": "A common use case for location search is to search for places close to the user's current position.\n\nUse the `[near]` operator to show results closest to a specific map location and order the results by distance.\n\nThis will return all entries sorted by distance from the point at `latitude=38` and `longitude=-122`.",
           "body": {
            "mode": "",
            "raw": "",
            "options": {
             "raw": {
              "language": ""
             }
            }
           }
          },
          "response": [
           {
            "name": "Query entries",
            "originalRequest": {
             "auth": {
              "type": "bearer",
              "bearer": [
               {
                "key": "token",
                "value": "{{cda_access_token}}",
                "type": "string"
               }
              ]
             },
             "method": "GET",
             "header": [],
             "url": {
              "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/entries?\u0026fields.center[near]=COORDINATE\u0026content_type=CONTENT_TYPE",
              "protocol": "https",
              "host": [
               "{{cda_url}}"
              ],
              "path": [
               "spaces",
               ":space_id",
               "environments",
               ":environment_id",
               "entries"
              ],
              "query": [
               {
                "key": "fields.center[near]",
                "value": "COORDINATE"
               },
               {
                "key": "content_type",
                "value": "CONTENT_TYPE"
               }
              ],
              "variable": [
               {
                "key": "space_id",
                "value": "yadj1kx9rmg0",
                "type": "string",
                "description": "Alphanumeric id of the space to retrieve."
               },
               {
                "key": "environment_id",
                "value": "staging",
                "type": "string",
                "description": "ID of the environment in form of a string"
               },
               {
                "key": "access_token",
                "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
                "type": "string",
                "description": "A *production* Content Delivery API key."
               },
               {
                "key": "coordinate",
                "value": "38,-122",
                "type": "string",
                "description": "Latitude and longitude of a location."
               }
              ]
             },
             "description": "A common use case for location search is to search for places close to the user's current position.\n\nUse the `[near]` operator to show results closest to a specific map location and order the results by distance.\n\nThis will return all entries sorted by distance from the point at `latitude=38` and `longitude=-122`.",
             "body": {
              "mode": "",
              "raw": "",
              "options": {
               "raw": {
                "language": ""
               }
              }
             }
            },
            "status": "",
            "code": 200,
            "header": [
             {
              "key": "Content-Type",
              "value": "application/vnd.contentful.delivery.v1+json",
              "description": ""
             }
            ],
            "cookie": null,
            "body": "{\n  \"sys\": {\n    \"type\": \"Array\"\n  },\n  \"total\": 0,\n  \"skip\": 0,\n  \"limit\": 100,\n  \"items\": []\n}"
           }
          ]
         }
        ],
        "description": "You can use a proximity search on location-enabled content to find results in a specified geographical area.\n\n**Note**: Queries that include exact coordinates can't take advantage of our caching layer. With many use cases it should be enough to round the coordinates to 3 decimal places (an accuracy of about 300m), 2 decimal places (an accuracy of about 1km) or more to improve your cache hit rates."
       },
       {
        "name": "Locations in a bounding object",
        "item": [
         {
          "name": "Query entries",
          "request": {
           "auth": {
            "type": "bearer",
            "bearer": [
             {
              "key": "token",
              "value": "{{cda_access_token}}",
              "type": "string"
             }
            ]
           },
           "method": "GET",
           "header": [],
           "url": {
            "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/entries?\u0026fields.center[within]=RECTANGLE\u0026content_type=CONTENT_TYPE",
            "protocol": "https",
            "host": [
             "{{cda_url}}"
            ],
            "path": [
             "spaces",
             ":space_id",
             "environments",
             ":environment_id",
             "entries"
            ],
            "query": [
             {
              "key": "fields.center[within]",
              "value": "RECTANGLE"
             },
             {
              "key": "content_type",
              "value": "CONTENT_TYPE"
             }
            ],
            "variable": [
             {
              "key": "space_id",
              "value": "yadj1kx9rmg0",
              "type": "string",
              "description": "Alphanumeric id of the space to retrieve."
             },
             {
              "key": "environment_id",
              "value": "staging",
              "type": "string",
              "description": "ID of the environment in form of a string"
             },
             {
              "key": "access_token",
              "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
              "type": "string",
              "description": "A *production* Content Delivery API key."
             },
             {
              "key": "rectangle",
              "value": "40,-124,36,-121",
              "type": "string",
              "description": "Coordinate rectangle to search in."
             }
            ]
           },
           "description": "To retrieve entries where `fields.center` is within the rectangle with:\n\n- **Bottom left corner**: latitude 1, longitude 2.\n\n- **Top right corner**: latitude 3, longitude 4.",
           "body": {
            "mode": "",
            "raw": "",
            "options": {
             "raw": {
              "language": ""
             }
            }
           }
          },
          "response": [
           {
            "name": "Query entries",
            "originalRequest": {
             "auth": {
              "type": "bearer",
              "bearer": [
               {
                "key": "token",
                "value": "{{cda_access_token}}",
                "type": "string"
               }
              ]
             },
             "method": "GET",
             "header": [],
             "url": {
              "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/entries?\u0026fields.center[within]=RECTANGLE\u0026content_type=CONTENT_TYPE",
              "protocol": "https",
              "host": [
               "{{cda_url}}"
              ],
              "path": [
               "spaces",
               ":space_id",
               "environments",
               ":environment_id",
               "entries"
              ],
              "query": [
               {
                "key": "fields.center[within]",
                "value": "RECTANGLE"
               },
               {
                "key": "content_type",
                "value": "CONTENT_TYPE"
               }
              ],
              "variable": [
               {
                "key": "space_id",
                "value": "yadj1kx9rmg0",
                "type": "string",
                "description": "Alphanumeric id of the space to retrieve."
               },
               {
                "key": "environment_id",
                "value": "staging",
                "type": "string",
                "description": "ID of the environment in form of a string"
               },
               {
                "key": "access_token",
                "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
                "type": "string",
                "description": "A *production* Content Delivery API key."
               },
               {
                "key": "rectangle",
                "value": "40,-124,36,-121",
                "type": "string",
                "description": "Coordinate rectangle to search in."
               }
              ]
             },
             "description": "To retrieve entries where `fields.center` is within the rectangle with:\n\n- **Bottom left corner**: latitude 1, longitude 2.\n\n- **Top right corner**: latitude 3, longitude 4.",
             "body": {
              "mode": "",
              "raw": "",
              "options": {
               "raw": {
                "language": ""
               }
              }
             }
            },
            "status": "",
            "code": 200,
            "header": [
             {
              "key": "Content-Type",
              "value": "application/vnd.contentful.delivery.v1+json",
              "description": ""
             }
            ],
            "cookie": null,
            "body": "{\n  \"sys\": {\n    \"type\": \"Array\"\n  },\n  \"total\": 0,\n  \"skip\": 0,\n  \"limit\": 100,\n  \"items\": []\n}"
           }
          ]
         }
        ],
        "description": "When displaying content on a map it's more resource efficient to retrieve only content that is in the current visible map area. For these cases, use the `within` operator.\n\nSimilar to the 'near me' use case, this lets you search for locations that are within the specific area on the map and can be useful for finding related entries in the vicinity of another entry.\n\nThere are two ways to search for nearby locations.\n\n#### 1. Using a bounding rectangle:\n\nTo search for locations within a rectangle area object, use the structure `field.center[within]=latitude1,longitude1,latitude2,longitude2`, where:\n\n+ `latitude1` and `longitude1` refer to the coordinates of the bottom left corner of the rectangle.\n\n+ `latitude2` and `longitude2` refer to the coordinates of the top right corner of the rectangle.\n\n#### 2. Using a bounding circle:\n\nThe structure `field.center[within]=latitute,longitude,radius` will return entries included in the circle with `fields.center` of the given latitude, longitude and radius (in km)."
       },
       {
        "name": "Links to entry",
        "item": [
         {
          "name": "Query entries",
          "request": {
           "auth": {
            "type": "bearer",
            "bearer": [
             {
              "key": "token",
              "value": "{{cda_access_token}}",
              "type": "string"
             }
            ]
           },
           "method": "GET",
           "header": [],
           "url": {
            "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/entries?\u0026links_to_entry=ENTRY_ID",
            "protocol": "https",
            "host": [
             "{{cda_url}}"
            ],
            "path": [
             "spaces",
             ":space_id",
             "environments",
             ":environment_id",
             "entries"
            ],
            "query": [
             {
              "key": "links_to_entry",
              "value": "ENTRY_ID"
             }
            ],
            "variable": [
             {
              "key": "space_id",
              "value": "yadj1kx9rmg0",
              "type": "string",
              "description": "Alphanumeric id of the space to retrieve."
             },
             {
              "key": "environment_id",
              "value": "staging",
              "type": "string",
              "description": "ID of the environment in form of a string"
             },
             {
              "key": "access_token",
              "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
              "type": "string",
              "description": "A *production* Content Delivery API key."
             },
             {
              "key": "entry_id",
              "value": "4LgMotpNF6W20YKmuemW0a",
              "type": "string",
              "description": "Alphanumeric id of the entry that is linked to."
             }
            ]
           },
           "description": "",
           "body": {
            "mode": "",
            "raw": "",
            "options": {
             "raw": {
              "language": ""
             }
            }
           }
          },
          "response": [
           {
            "name": "Query entries",
            "originalRequest": {
             "auth": {
              "type": "bearer",
              "bearer": [
               {
                "key": "token",
                "value": "{{cda_access_token}}",
                "type": "string"
               }
              ]
             },
             "method": "GET",
             "header": [],
             "url": {
              "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/entries?\u0026links_to_entry=ENTRY_ID",
              "protocol": "https",
              "host": [
               "{{cda_url}}"
              ],
              "path": [
               "spaces",
               ":space_id",
               "environments",
               ":environment_id",
               "entries"
              ],
              "query": [
               {
                "key": "links_to_entry",
                "value": "ENTRY_ID"
               }
              ],
              "variable": [
               {
                "key": "space_id",
                "value": "yadj1kx9rmg0",
                "type": "string",
                "description": "Alphanumeric id of the space to retrieve."
               },
               {
                "key": "environment_id",
                "value": "staging",
                "type": "string",
                "description": "ID of the environment in form of a string"
               },
               {
                "key": "access_token",
                "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
                "type": "string",
                "description": "A *production* Content Delivery API key."
               },
               {
                "key": "entry_id",
                "value": "4LgMotpNF6W20YKmuemW0a",
                "type": "string",
                "description": "Alphanumeric id of the entry that is linked to."
               }
              ]
             },
             "description": "",
             "body": {
              "mode": "",
              "raw": "",
              "options": {
               "raw": {
                "language": ""
               }
              }
             }
            },
            "status": "",
            "code": 200,
            "header": [
             {
              "key": "Content-Type",
              "value": "application/vnd.contentful.delivery.v1+json",
              "description": ""
             }
            ],
            "cookie": null,
            "body": "{\n  \"sys\": {\n    \"type\": \"Array\"\n  },\n  \"total\": 1,\n  \"skip\": 0,\n  \"limit\": 100,\n  \"items\": [\n    {\n      \"sys\": {\n        \"id\": \"5KsDBWseXY6QegucYAoacS\",\n        \"type\": \"Entry\",\n        \"version\": 1,\n        \"space\": {\n          \"sys\": {\n            \"type\": \"Link\",\n            \"linkType\": \"Space\",\n            \"id\": \"yadj1kx9rmg0\"\n          }\n        },\n        \"contentType\": {\n          \"sys\": {\n            \"type\": \"Link\",\n            \"linkType\": \"ContentType\",\n            \"id\": \"hfM9RCJIk0wIm06WkEOQY\"\n          }\n        },\n        \"createdAt\": \"2016-12-20T10:43:35.772Z\",\n        \"updatedAt\": \"2016-12-20T10:43:35.772Z\",\n        \"revision\": 1\n      },\n      \"fields\": {\n        \"author\": {\n          \"en-US\": {\n            \"sys\": {\n              \"type\": \"Link\",\n              \"linkType\": \"Entry\",\n              \"id\": \"4LgMotpNF6W20YKmuemW0a\"\n            }\n          }\n        },\n        \"title\": {\n          \"en-US\": \"Hello, World!\"\n        }\n      }\n    }\n  ]\n}"
           }
          ]
         }
        ],
        "description": "To search for entries which have a field linking to a specific entry, set the `links_to_entry` URI query parameter to the ID you want to search for.\n\n**NOTE: For most use cases it is more performant to query based on a content type's reference field if the desired content type is known. See [Search on references](#/reference/search-parameters/search-on-references) for an example query**"
       },
       {
        "name": "Links to asset",
        "item": [
         {
          "name": "Query entries",
          "request": {
           "auth": {
            "type": "bearer",
            "bearer": [
             {
              "key": "token",
              "value": "{{cda_access_token}}",
              "type": "string"
             }
            ]
           },
           "method": "GET",
           "header": [],
           "url": {
            "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/entries?\u0026links_to_asset=ASSET_ID",
            "protocol": "https",
            "host": [
             "{{cda_url}}"
            ],
            "path": [
             "spaces",
             ":space_id",
             "environments",
             ":environment_id",
             "entries"
            ],
            "query": [
             {
              "key": "links_to_asset",
              "value": "ASSET_ID"
             }
            ],
            "variable": [
             {
              "key": "space_id",
              "value": "yadj1kx9rmg0",
              "type": "string",
              "description": "Alphanumeric id of the space to retrieve."
             },
             {
              "key": "environment_id",
              "value": "staging",
              "type": "string",
              "description": "ID of the environment in form of a string"
             },
             {
              "key": "access_token",
              "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
              "type": "string",
              "description": "A *production* Content Delivery API key."
             },
             {
              "key": "asset_id",
              "value": "wtrHxeu3zEoEce2MokCSi",
              "type": "string",
              "description": "Alphanumeric id of the asset that is linked to."
             }
            ]
           },
           "description": "",
           "body": {
            "mode": "",
            "raw": "",
            "options": {
             "raw": {
              "language": ""
             }
            }
           }
          },
          "response": [
           {
            "name": "Query entries",
            "originalRequest": {
             "auth": {
              "type": "bearer",
              "bearer": [
               {
                "key": "token",
                "value": "{{cda_access_token}}",
                "type": "string"
               }
              ]
             },
             "method": "GET",
             "header": [],
             "url": {
              "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/entries?\u0026links_to_asset=ASSET_ID",
              "protocol": "https",
              "host": [
               "{{cda_url}}"
              ],
              "path": [
               "spaces",
               ":space_id",
               "environments",
               ":environment_id",
               "entries"
              ],
              "query": [
               {
                "key": "links_to_asset",
                "value": "ASSET_ID"
               }
              ],
              "variable": [
               {
                "key": "space_id",
                "value": "yadj1kx9rmg0",
                "type": "string",
                "description": "Alphanumeric id of the space to retrieve."
               },
               {
                "key": "environment_id",
                "value": "staging",
                "type": "string",
                "description": "ID of the environment in form of a string"
               },
               {
                "key": "access_token",
                "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
                "type": "string",
                "description": "A *production* Content Delivery API key."
               },
               {
                "key": "asset_id",
                "value": "wtrHxeu3zEoEce2MokCSi",
                "type": "string",
                "description": "Alphanumeric id of the asset that is linked to."
               }
              ]
             },
             "description": "",
             "body": {
              "mode": "",
              "raw": "",
              "options": {
               "raw": {
                "language": ""
               }
              }
             }
            },
            "status": "",
            "code": 200,
            "header": [
             {
              "key": "Content-Type",
              "value": "application/vnd.contentful.delivery.v1+json",
              "description": ""
             }
            ],
            "cookie": null,
            "body": "{\n  \"sys\": {\n    \"type\": \"Array\"\n  },\n  \"total\": 1,\n  \"skip\": 0,\n  \"limit\": 100,\n  \"items\": [\n    {\n      \"sys\": {\n        \"id\": \"5KsDBWseXY6QegucYAoacS\",\n        \"type\": \"Entry\",\n        \"version\": 1,\n        \"space\": {\n          \"sys\": {\n            \"type\": \"Link\",\n            \"linkType\": \"Space\",\n            \"id\": \"yadj1kx9rmg0\"\n          }\n        },\n        \"contentType\": {\n          \"sys\": {\n            \"type\": \"Link\",\n            \"linkType\": \"ContentType\",\n            \"id\": \"hfM9RCJIk0wIm06WkEOQY\"\n          }\n        },\n        \"createdAt\": \"2016-12-20T10:43:35.772Z\",\n        \"updatedAt\": \"2016-12-20T10:43:35.772Z\",\n        \"revision\": 1\n      },\n      \"fields\": {\n        \"file\": {\n          \"en-US\": {\n            \"sys\": {\n              \"type\": \"Link\",\n              \"linkType\": \"Asset\",\n              \"id\": \"wtrHxeu3zEoEce2MokCSi\"\n            }\n          }\n        },\n        \"title\": {\n          \"en-US\": \"Hello, World!\"\n        }\n      }\n    }\n  ]\n}"
           }
          ]
         }
        ],
        "description": "To search for entries which have a field linking to a specific asset, set the `links_to_asset` URI query parameter to the ID you want to search for."
       },
       {
        "name": "Order",
        "item": [
         {
          "name": "Query entries",
          "request": {
           "auth": {
            "type": "bearer",
            "bearer": [
             {
              "key": "token",
              "value": "{{cda_access_token}}",
              "type": "string"
             }
            ]
           },
           "method": "GET",
           "header": [],
           "url": {
            "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/entries?\u0026order=ATTRIBUTE",
            "protocol": "https",
            "host": [
             "{{cda_url}}"
            ],
            "path": [
             "spaces",
             ":space_id",
             "environments",
             ":environment_id",
             "entries"
            ],
            "query": [
             {
              "key": "order",
              "value": "ATTRIBUTE"
             }
            ],
            "variable": [
             {
              "key": "space_id",
              "value": "yadj1kx9rmg0",
              "type": "string",
              "description": "Alphanumeric id of the Space to retrieve."
             },
             {
              "key": "environment_id",
              "value": "staging",
              "type": "string",
              "description": "ID of the environment in form of a string."
             },
             {
              "key": "access_token",
              "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
              "type": "string",
              "description": "A *production* Content Delivery API key."
             },
             {
              "key": "attribute",
              "value": "sys.createdAt",
              "type": "string",
              "description": "Attribute to order by."
             }
            ]
           },
           "description": "To retrieve all entries ordered by creation date.",
           "body": {
            "mode": "",
            "raw": "",
            "options": {
             "raw": {
              "language": ""
             }
            }
           }
          },
          "response": [
           {
            "name": "Query entries",
            "originalRequest": {
             "auth": {
              "type": "bearer",
              "bearer": [
               {
                "key": "token",
                "value": "{{cda_access_token}}",
                "type": "string"
               }
              ]
             },
             "method": "GET",
             "header": [],
             "url": {
              "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/entries?\u0026order=ATTRIBUTE",
              "protocol": "https",
              "host": [
               "{{cda_url}}"
              ],
              "path": [
               "spaces",
               ":space_id",
               "environments",
               ":environment_id",
               "entries"
              ],
              "query": [
               {
                "key": "order",
                "value": "ATTRIBUTE"
               }
              ],
              "variable": [
               {
                "key": "space_id",
                "value": "yadj1kx9rmg0",
                "type": "string",
                "description": "Alphanumeric id of the Space to retrieve."
               },
               {
                "key": "environment_id",
                "value": "staging",
                "type": "string",
                "description": "ID of the environment in form of a string."
               },
               {
                "key": "access_token",
                "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
                "type": "string",
                "description": "A *production* Content Delivery API key."
               },
               {
                "key": "attribute",
                "value": "sys.createdAt",
                "type": "string",
                "description": "Attribute to order by."
               }
              ]
             },
             "description": "To retrieve all entries ordered by creation date.",
             "body": {
              "mode": "",
              "raw": "",
              "options": {
               "raw": {
                "language": ""
               }
              }
             }
            },
            "status": "",
            "code": 200,
            "header": [
             {
              "key": "Content-Type",
              "value": "application/vnd.contentful.delivery.v1+json",
              "description": ""
             }
            ],
            "cookie": null,
            "body": "{\n  \"sys\": {\n    \"type\": \"Array\"\n  },\n  \"total\": 0,\n  \"skip\": 0,\n  \"limit\": 100,\n  \"items\": []\n}"
           }
          ]
         }
        ],
        "description": "You can order items in the response by specifying the `order` search parameter. You can use `sys` properties (such as `sys.createdAt`) or field values (such as `fields.myCustomDateField`) for ordering.\n\n**Note**: You must set the `content_type` URI query parameter to the ID of the content type you want to filter by. You can only use the following field types with the `order` parameter:\n\nName   |JSON Primitive|Description\n-------|--------------|----------------------------------------------------\nSymbol |String        |Basic list of characters. Maximum length is 256.\nInteger|Number        |Number type without decimals. Values from  -2\u003csup\u003e53\u003c/sup\u003e to 2\u003csup\u003e53\u003c/sup\u003e.\nNumber |Number        |Number type with decimals.\nDate   |String        |Date/time in ISO-8601 format.\nBoolean|Boolean       |Flag, `true` or `false`.\n\nThe following field types **do not** support the order parameter:\n\nName   |JSON Primitive|Description\n-------|--------------|-----------------------------------------------------\nText   |String        |Same as symbol, but can be filtered via full-text search. Maximum length is 50,000.\nLink   |Object        |See [links](/developers/docs/concepts/links/)\nArray  |Array         |List of values. Value type depends on `field.items.type`.\nObject |Object        |Arbitrary object.\n\nIf you don't pass an explicit order value the returned collection items will be ordered\ndescending by publication timestamp (`sys.updatedAt`) and ascending by id\n(`sys.id`). This means that recently published items will appear closer to\nthe top and for those with the same publication timestamp the order will be\nbased on the items' ids."
       },
       {
        "name": "Reverse order",
        "item": [
         {
          "name": "Query entries",
          "request": {
           "auth": {
            "type": "bearer",
            "bearer": [
             {
              "key": "token",
              "value": "{{cda_access_token}}",
              "type": "string"
             }
            ]
           },
           "method": "GET",
           "header": [],
           "url": {
            "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/entries?\u0026order=-ATTRIBUTE",
            "protocol": "https",
            "host": [
             "{{cda_url}}"
            ],
            "path": [
             "spaces",
             ":space_id",
             "environments",
             ":environment_id",
             "entries"
            ],
            "query": [
             {
              "key": "order",
              "value": "-ATTRIBUTE"
             }
            ],
            "variable": [
             {
              "key": "space_id",
              "value": "yadj1kx9rmg0",
              "type": "string",
              "description": "Alphanumeric id of the space to retrieve."
             },
             {
              "key": "environment_id",
              "value": "staging",
              "type": "string",
              "description": "ID of the environment in form of a string"
             },
             {
              "key": "access_token",
              "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
              "type": "string",
              "description": "A *production* Content Delivery API key."
             },
             {
              "key": "attribute",
              "value": "sys.updatedAt",
              "type": "string",
              "description": "Attribute to order by."
             }
            ]
           },
           "description": "To order results by the time of the last update, newest to oldest.",
           "body": {
            "mode": "",
            "raw": "",
            "options": {
             "raw": {
              "language": ""
             }
            }
           }
          },
          "response": [
           {
            "name": "Query entries",
            "originalRequest": {
             "auth": {
              "type": "bearer",
              "bearer": [
               {
                "key": "token",
                "value": "{{cda_access_token}}",
                "type": "string"
               }
              ]
             },
             "method": "GET",
             "header": [],
             "url": {
              "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/entries?\u0026order=-ATTRIBUTE",
              "protocol": "https",
              "host": [
               "{{cda_url}}"
              ],
              "path": [
               "spaces",
               ":space_id",
               "environments",
               ":environment_id",
               "entries"
              ],
              "query": [
               {
                "key": "order",
                "value": "-ATTRIBUTE"
               }
              ],
              "variable": [
               {
                "key": "space_id",
                "value": "yadj1kx9rmg0",
                "type": "string",
                "description": "Alphanumeric id of the space to retrieve."
               },
               {
                "key": "environment_id",
                "value": "staging",
                "type": "string",
                "description": "ID of the environment in form of a string"
               },
               {
                "key": "access_token",
                "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
                "type": "string",
                "description": "A *production* Content Delivery API key."
               },
               {
                "key": "attribute",
                "value": "sys.updatedAt",
                "type": "string",
                "description": "Attribute to order by."
               }
              ]
             },
             "description": "To order results by the time of the last update, newest to oldest.",
             "body": {
              "mode": "",
              "raw": "",
              "options": {
               "raw": {
                "language": ""
               }
              }
             }
            },
            "status": "",
            "code": 200,
            "header": [
             {
              "key": "Content-Type",
              "value": "application/vnd.contentful.delivery.v1+json",
              "description": ""
             }
            ],
            "cookie": null,
            "body": "{\n  \"sys\": {\n    \"type\": \"Array\"\n  },\n  \"total\": 0,\n  \"skip\": 0,\n  \"limit\": 100,\n  \"items\": []\n}"
           }
          ]
         }
        ],
        "description": "You can reverse the sort order by prefixing the field with a `-` symbol."
       },
       {
        "name": "Order with multiple parameters",
        "item": [
         {
          "name": "Query entries",
          "request": {
           "auth": {
            "type": "bearer",
            "bearer": [
             {
              "key": "token",
              "value": "{{cda_access_token}}",
              "type": "string"
             }
            ]
           },
           "method": "GET",
           "header": [],
           "url": {
            "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/entries?\u0026order=ATTRIBUTE,ATTRIBUTE2",
            "protocol": "https",
            "host": [
             "{{cda_url}}"
            ],
            "path": [
             "spaces",
             ":space_id",
             "environments",
             ":environment_id",
             "entries"
            ],
            "query": [
             {
              "key": "order",
              "value": "ATTRIBUTE,ATTRIBUTE2"
             }
            ],
            "variable": [
             {
              "key": "space_id",
              "value": "yadj1kx9rmg0",
              "type": "string",
              "description": "Alphanumeric id of the space to retrieve."
             },
             {
              "key": "environment_id",
              "value": "staging",
              "type": "string",
              "description": "ID of the environment in form of a string"
             },
             {
              "key": "access_token",
              "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
              "type": "string",
              "description": "A *production* Content Delivery API key."
             },
             {
              "key": "attribute",
              "value": "sys.createdAt",
              "type": "string",
              "description": "First attribute to order by"
             },
             {
              "key": "attribute2",
              "value": "sys.id",
              "type": "string",
              "description": "Second attribute to order by."
             }
            ]
           },
           "description": "",
           "body": {
            "mode": "",
            "raw": "",
            "options": {
             "raw": {
              "language": ""
             }
            }
           }
          },
          "response": [
           {
            "name": "Query entries",
            "originalRequest": {
             "auth": {
              "type": "bearer",
              "bearer": [
               {
                "key": "token",
                "value": "{{cda_access_token}}",
                "type": "string"
               }
              ]
             },
             "method": "GET",
             "header": [],
             "url": {
              "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/entries?\u0026order=ATTRIBUTE,ATTRIBUTE2",
              "protocol": "https",
              "host": [
               "{{cda_url}}"
              ],
              "path": [
               "spaces",
               ":space_id",
               "environments",
               ":environment_id",
               "entries"
              ],
              "query": [
               {
                "key": "order",
                "value": "ATTRIBUTE,ATTRIBUTE2"
               }
              ],
              "variable": [
               {
                "key": "space_id",
                "value": "yadj1kx9rmg0",
                "type": "string",
                "description": "Alphanumeric id of the space to retrieve."
               },
               {
                "key": "environment_id",
                "value": "staging",
                "type": "string",
                "description": "ID of the environment in form of a string"
               },
               {
                "key": "access_token",
                "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
                "type": "string",
                "description": "A *production* Content Delivery API key."
               },
               {
                "key": "attribute",
                "value": "sys.createdAt",
                "type": "string",
                "description": "First attribute to order by"
               },
               {
                "key": "attribute2",
                "value": "sys.id",
                "type": "string",
                "description": "Second attribute to order by."
               }
              ]
             },
             "description": "",
             "body": {
              "mode": "",
              "raw": "",
              "options": {
               "raw": {
                "language": ""
               }
              }
             }
            },
            "status": "",
            "code": 200,
            "header": [
             {
              "key": "Content-Type",
              "value": "application/vnd.contentful.delivery.v1+json",
              "description": ""
             }
            ],
            "cookie": null,
            "body": "{\n  \"sys\": {\n    \"type\": \"Array\"\n  },\n  \"total\": 0,\n  \"skip\": 0,\n  \"limit\": 100,\n  \"items\": []\n}"
           }
          ]
         }
        ],
        "description": "You can order items by specifying the `order` parameter with attributes(`attribute`, `attribute2`). Prefix the field with a `-` sign to reverse the sort order of the attribute."
       },
       {
        "name": "Limit",
        "item": [
         {
          "name": "Query entries",
          "request": {
           "auth": {
            "type": "bearer",
            "bearer": [
             {
              "key": "token",
              "value": "{{cda_access_token}}",
              "type": "string"
             }
            ]
           },
           "method": "GET",
           "header": [],
           "url": {
            "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/entries?\u0026limit=VALUE",
            "protocol": "https",
            "host": [
             "{{cda_url}}"
            ],
            "path": [
             "spaces",
             ":space_id",
             "environments",
             ":environment_id",
             "entries"
            ],
            "query": [
             {
              "key": "limit",
              "value": "VALUE"
             }
            ],
            "variable": [
             {
              "key": "space_id",
              "value": "yadj1kx9rmg0",
              "type": "string",
              "description": "Alphanumeric id of the space to retrieve."
             },
             {
              "key": "environment_id",
              "value": "staging",
              "type": "string",
              "description": "ID of the environment in form of a string."
             },
             {
              "key": "access_token",
              "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
              "type": "string",
              "description": "A *production* Content Delivery API key."
             },
             {
              "key": "value",
              "value": "3",
              "type": "number",
              "description": "Limit for number of results."
             }
            ]
           },
           "description": "To limit results to 3 entries.",
           "body": {
            "mode": "",
            "raw": "",
            "options": {
             "raw": {
              "language": ""
             }
            }
           }
          },
          "response": [
           {
            "name": "Query entries",
            "originalRequest": {
             "auth": {
              "type": "bearer",
              "bearer": [
               {
                "key": "token",
                "value": "{{cda_access_token}}",
                "type": "string"
               }
              ]
             },
             "method": "GET",
             "header": [],
             "url": {
              "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/entries?\u0026limit=VALUE",
              "protocol": "https",
              "host": [
               "{{cda_url}}"
              ],
              "path": [
               "spaces",
               ":space_id",
               "environments",
               ":environment_id",
               "entries"
              ],
              "query": [
               {
                "key": "limit",
                "value": "VALUE"
               }
              ],
              "variable": [
               {
                "key": "space_id",
                "value": "yadj1kx9rmg0",
                "type": "string",
                "description": "Alphanumeric id of the space to retrieve."
               },
               {
                "key": "environment_id",
                "value": "staging",
                "type": "string",
                "description": "ID of the environment in form of a string."
               },
               {
                "key": "access_token",
                "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
                "type": "string",
                "description": "A *production* Content Delivery API key."
               },
               {
                "key": "value",
                "value": "3",
                "type": "number",
                "description": "Limit for number of results."
               }
              ]
             },
             "description": "To limit results to 3 entries.",
             "body": {
              "mode": "",
              "raw": "",
              "options": {
               "raw": {
                "language": ""
               }
              }
             }
            },
            "status": "",
            "code": 200,
            "header": [
             {
              "key": "Content-Type",
              "value": "application/vnd.contentful.delivery.v1+json",
              "description": ""
             }
            ],
            "cookie": null,
            "body": "{\n  \"sys\": {\n    \"type\": \"Array\"\n  },\n  \"total\": 0,\n  \"skip\": 0,\n  \"limit\": 100,\n  \"items\": []\n}"
           }
          ]
         }
        ],
        "description": "You can specify the maximum number of results as a `limit` search parameter.\n\n**Note**: The maximum number of entries returned by the API is **1000**. The API will throw a `BadRequestError` for values higher than **1000** and values other than an integer. The default number of entries returned by the API is **100**."
       },
       {
        "name": "Skip",
        "item": [
         {
          "name": "Query entries",
          "request": {
           "auth": {
            "type": "bearer",
            "bearer": [
             {
              "key": "token",
              "value": "{{cda_access_token}}",
              "type": "string"
             }
            ]
           },
           "method": "GET",
           "header": [],
           "url": {
            "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/entries?\u0026skip=VALUE",
            "protocol": "https",
            "host": [
             "{{cda_url}}"
            ],
            "path": [
             "spaces",
             ":space_id",
             "environments",
             ":environment_id",
             "entries"
            ],
            "query": [
             {
              "key": "skip",
              "value": "VALUE"
             }
            ],
            "variable": [
             {
              "key": "space_id",
              "value": "yadj1kx9rmg0",
              "type": "string",
              "description": "Alphanumeric id of the space to retrieve."
             },
             {
              "key": "environment_id",
              "value": "staging",
              "type": "string",
              "description": "ID of the environment in form of a string"
             },
             {
              "key": "access_token",
              "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
              "type": "string",
              "description": "A *production* Content Delivery API key."
             },
             {
              "key": "value",
              "value": "3",
              "type": "number",
              "description": "Offset for results."
             }
            ]
           },
           "description": "To skips 3 entries.",
           "body": {
            "mode": "",
            "raw": "",
            "options": {
             "raw": {
              "language": ""
             }
            }
           }
          },
          "response": [
           {
            "name": "Query entries",
            "originalRequest": {
             "auth": {
              "type": "bearer",
              "bearer": [
               {
                "key": "token",
                "value": "{{cda_access_token}}",
                "type": "string"
               }
              ]
             },
             "method": "GET",
             "header": [],
             "url": {
              "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/entries?\u0026skip=VALUE",
              "protocol": "https",
              "host": [
               "{{cda_url}}"
              ],
              "path": [
               "spaces",
               ":space_id",
               "environments",
               ":environment_id",
               "entries"
              ],
              "query": [
               {
                "key": "skip",
                "value": "VALUE"
               }
              ],
              "variable": [
               {
                "key": "space_id",
                "value": "yadj1kx9rmg0",
                "type": "string",
                "description": "Alphanumeric id of the space to retrieve."
               },
               {
                "key": "environment_id",
                "value": "staging",
                "type": "string",
                "description": "ID of the environment in form of a string"
               },
               {
                "key": "access_token",
                "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
                "type": "string",
                "description": "A *production* Content Delivery API key."
               },
               {
                "key": "value",
                "value": "3",
                "type": "number",
                "description": "Offset for results."
               }
              ]
             },
             "description": "To skips 3 entries.",
             "body": {
              "mode": "",
              "raw": "",
              "options": {
               "raw": {
                "language": ""
               }
              }
             }
            },
            "status": "",
            "code": 200,
            "header": [
             {
              "key": "Content-Type",
              "value": "application/vnd.contentful.delivery.v1+json",
              "description": ""
             }
            ],
            "cookie": null,
            "body": "{\n  \"sys\": {\n    \"type\": \"Array\"\n  },\n  \"total\": 0,\n  \"skip\": 0,\n  \"limit\": 100,\n  \"items\": []\n}"
           }
          ]
         }
        ],
        "description": "You can specify an offset with the `skip` search parameter.\n\n**Note**: The API will throw a `BadRequestError` for values less than **0** or values other than an integer.\n\nBy combining `skip` and `limit` you can paginate through results:\n\nPage 1: skip=0, limit=15\n    Page 2: skip=15, limit=15\n    Page 3: skip=30, limit=15\n    etc."
       },
       {
        "name": "Filtering assets by MIME type",
        "item": [
         {
          "name": "Query assets",
          "request": {
           "auth": {
            "type": "bearer",
            "bearer": [
             {
              "key": "token",
              "value": "{{cda_access_token}}",
              "type": "string"
             }
            ]
           },
           "method": "GET",
           "header": [],
           "url": {
            "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/assets?\u0026mimetype_group=MIMETYPE_GROUP",
            "protocol": "https",
            "host": [
             "{{cda_url}}"
            ],
            "path": [
             "spaces",
             ":space_id",
             "environments",
             ":environment_id",
             "assets"
            ],
            "query": [
             {
              "key": "mimetype_group",
              "value": "MIMETYPE_GROUP"
             }
            ],
            "variable": [
             {
              "key": "space_id",
              "value": "yadj1kx9rmg0",
              "type": "string",
              "description": "Alphanumeric id of the space to retrieve."
             },
             {
              "key": "environment_id",
              "value": "staging",
              "type": "string",
              "description": "ID of the environment in form of a string"
             },
             {
              "key": "access_token",
              "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
              "type": "string",
              "description": "A *production* Content Delivery API key."
             }
            ]
           },
           "description": "To return only image assets.",
           "body": {
            "mode": "",
            "raw": "",
            "options": {
             "raw": {
              "language": ""
             }
            }
           }
          },
          "response": [
           {
            "name": "Query assets",
            "originalRequest": {
             "auth": {
              "type": "bearer",
              "bearer": [
               {
                "key": "token",
                "value": "{{cda_access_token}}",
                "type": "string"
               }
              ]
             },
             "method": "GET",
             "header": [],
             "url": {
              "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/assets?\u0026mimetype_group=MIMETYPE_GROUP",
              "protocol": "https",
              "host": [
               "{{cda_url}}"
              ],
              "path": [
               "spaces",
               ":space_id",
               "environments",
               ":environment_id",
               "assets"
              ],
              "query": [
               {
                "key": "mimetype_group",
                "value": "MIMETYPE_GROUP"
               }
              ],
              "variable": [
               {
                "key": "space_id",
                "value": "yadj1kx9rmg0",
                "type": "string",
                "description": "Alphanumeric id of the space to retrieve."
               },
               {
                "key": "environment_id",
                "value": "staging",
                "type": "string",
                "description": "ID of the environment in form of a string"
               },
               {
                "key": "access_token",
                "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
                "type": "string",
                "description": "A *production* Content Delivery API key."
               }
              ]
             },
             "description": "To return only image assets.",
             "body": {
              "mode": "",
              "raw": "",
              "options": {
               "raw": {
                "language": ""
               }
              }
             }
            },
            "status": "",
            "code": 200,
            "header": [
             {
              "key": "Content-Type",
              "value": "application/vnd.contentful.delivery.v1+json",
              "description": ""
             }
            ],
            "cookie": null,
            "body": "{\n  \"sys\": {\n    \"type\": \"Array\"\n  },\n  \"total\": 0,\n  \"skip\": 0,\n  \"limit\": 100,\n  \"items\": []\n}"
           }
          ]
         }
        ],
        "description": "You can filter assets by their MIME type group by using the `mimetype_group` query parameter. Valid groups are `attachment`, `plaintext`, `image`, `audio`, `video`, `richtext`, `presentation`,\n`spreadsheet`, `pdfdocument`, `archive`, `code` and `markup`. By default, the API will return all assets."
       },
       {
        "name": "Search on references",
        "item": [
         {
          "name": "Search on references",
          "request": {
           "auth": {
            "type": "bearer",
            "bearer": [
             {
              "key": "token",
              "value": "{{cda_access_token}}",
              "type": "string"
             }
            ]
           },
           "method": "GET",
           "header": [],
           "url": {
            "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/entries?\u0026content_type=CONTENT_TYPE\u0026fields.:reference_field.sys.contentType.sys.id=REFERENCE_CONTENT_TYPE\u0026fields.:reference_field.fields.:search_field[match]=SEARCH_VALUE",
            "protocol": "https",
            "host": [
             "{{cda_url}}"
            ],
            "path": [
             "spaces",
             ":space_id",
             "environments",
             ":environment_id",
             "entries"
            ],
            "query": [
             {
              "key": "content_type",
              "value": "CONTENT_TYPE"
             },
             {
              "key": "fields.{reference_field}.sys.contentType.sys.id",
              "value": "REFERENCE_CONTENT_TYPE"
             },
             {
              "key": "fields.{reference_field}.fields.{search_field}[match]",
              "value": "SEARCH_VALUE"
             }
            ],
            "variable": [
             {
              "key": "space_id",
              "value": "yadj1kx9rmg0",
              "type": "string",
              "description": "Alphanumeric id of the space to retrieve."
             },
             {
              "key": "environment_id",
              "value": "staging",
              "type": "string",
              "description": "ID of the environment in form of a string"
             },
             {
              "key": "access_token",
              "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
              "type": "string",
              "description": "A *production* Content Delivery API key."
             },
             {
              "key": "reference_content_type",
              "value": "sFzTZbSuM8coEwygeUYes",
              "type": "string",
              "description": "The id of then content type of the referenced entry"
             },
             {
              "key": "reference_field",
              "value": "brand",
              "type": "string",
              "description": "The id of the field holding the reference"
             },
             {
              "key": "search_field",
              "value": "companyName",
              "type": "string",
              "description": "The id of the field you want to search"
             },
             {
              "key": "search_value",
              "value": "Lemnos",
              "type": "string",
              "description": "The value you are looking for"
             }
            ]
           },
           "description": "This example will return the Lemnos branded products.",
           "body": {
            "mode": "",
            "raw": "",
            "options": {
             "raw": {
              "language": ""
             }
            }
           }
          },
          "response": [
           {
            "name": "Search on references",
            "originalRequest": {
             "auth": {
              "type": "bearer",
              "bearer": [
               {
                "key": "token",
                "value": "{{cda_access_token}}",
                "type": "string"
               }
              ]
             },
             "method": "GET",
             "header": [],
             "url": {
              "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/entries?\u0026content_type=CONTENT_TYPE\u0026fields.:reference_field.sys.contentType.sys.id=REFERENCE_CONTENT_TYPE\u0026fields.:reference_field.fields.:search_field[match]=SEARCH_VALUE",
              "protocol": "https",
              "host": [
               "{{cda_url}}"
              ],
              "path": [
               "spaces",
               ":space_id",
               "environments",
               ":environment_id",
               "entries"
              ],
              "query": [
               {
                "key": "content_type",
                "value": "CONTENT_TYPE"
               },
               {
                "key": "fields.{reference_field}.sys.contentType.sys.id",
                "value": "REFERENCE_CONTENT_TYPE"
               },
               {
                "key": "fields.{reference_field}.fields.{search_field}[match]",
                "value": "SEARCH_VALUE"
               }
              ],
              "variable": [
               {
                "key": "space_id",
                "value": "yadj1kx9rmg0",
                "type": "string",
                "description": "Alphanumeric id of the space to retrieve."
               },
               {
                "key": "environment_id",
                "value": "staging",
                "type": "string",
                "description": "ID of the environment in form of a string"
               },
               {
                "key": "access_token",
                "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
                "type": "string",
                "description": "A *production* Content Delivery API key."
               },
               {
                "key": "reference_content_type",
                "value": "sFzTZbSuM8coEwygeUYes",
                "type": "string",
                "description": "The id of then content type of the referenced entry"
               },
               {
                "key": "reference_field",
                "value": "brand",
                "type": "string",
                "description": "The id of the field holding the reference"
               },
               {
                "key": "search_field",
                "value": "companyName",
                "type": "string",
                "description": "The id of the field you want to search"
               },
               {
                "key": "search_value",
                "value": "Lemnos",
                "type": "string",
                "description": "The value you are looking for"
               }
              ]
             },
             "description": "This example will return the Lemnos branded products.",
             "body": {
              "mode": "",
              "raw": "",
              "options": {
               "raw": {
                "language": ""
               }
              }
             }
            },
            "status": "",
            "code": 200,
            "header": [
             {
              "key": "Content-Type",
              "value": "application/vnd.contentful.delivery.v1+json",
              "description": ""
             }
            ],
            "cookie": null,
            "body": "{\n  \"sys\": {\n    \"type\": \"Array\"\n  },\n  \"total\": 0,\n  \"skip\": 0,\n  \"limit\": 100,\n  \"items\": []\n}"
           }
          ]
         }
        ],
        "description": "You can search for entries based on the values of referenced entries.\n\nFor example, if you want to find products of a particular brand, you can use search on references to find the products with one API request.\n\n### Structure of a query\n\nHere's how the example above would look as a query:\n\n```sql\ncontent_type=2PqfXUJwE8qSYKuM0U6w8M\u0026fields.brand.sys.contentType.sys.id=sFzTZbSuM8coEwygeUYes\u0026fields.brand.fields.companyName[match]=Lemnos\n```\n\n- First is the `content_type` parameter which you must include when you want to filter based on the values of the fields of entries of a certain content type.\n\n- Second is `fields.brand.sys.contentType.sys.id=sFzTZbSuM8coEwygeUYes` which you use to to filter on fields of entries from content type `2PqfXUJwE8qSYKuM0U6w8M`.\n\n- Third is `fields.brand.fields.companyName[match]=Lemnos` which filters entries to those branded as 'Lemnos'.\n\n**Note**: All filters on referenced entries are scoped with the path to the field that contains the reference. In the previous example that path is `fields.brand`.\n\nYou can search on multiple references at once and combine them into one singe API query with a series of field and value pairs.\n\n### Available nested filters\n\nYou can use the `all`, `in`, `nin`, `exists`, `match`, `gt`, `gte`,`lt`, `lte`, `ne`, `near` and `within` filters when searching on references. The semantics of these filters are the same as when you use them on a non referenced entry.\n\n### Restrictions\n\nSearching on references has the following restrictions:\n\n- You can only search on references on fields which link to a single entry. Fields which hold references to many entries or fields with references to assets are not supported.\n\n- The maximum number of reference searches in one query is **2**. A larger value will return an error."
       },
       {
        "name": "Retrieve localized entries",
        "item": [
         {
          "name": "Query entries",
          "request": {
           "auth": {
            "type": "bearer",
            "bearer": [
             {
              "key": "token",
              "value": "{{cda_access_token}}",
              "type": "string"
             }
            ]
           },
           "method": "GET",
           "header": [],
           "url": {
            "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/entries/:entry_id?\u0026locale=LOCALE",
            "protocol": "https",
            "host": [
             "{{cda_url}}"
            ],
            "path": [
             "spaces",
             ":space_id",
             "environments",
             ":environment_id",
             "entries",
             ":entry_id"
            ],
            "query": [
             {
              "key": "locale",
              "value": "LOCALE"
             }
            ],
            "variable": [
             {
              "key": "space_id",
              "value": "yadj1kx9rmg0",
              "type": "string",
              "description": "Alphanumeric id of the space to retrieve."
             },
             {
              "key": "environment_id",
              "value": "staging",
              "type": "string",
              "description": "ID of the environment in form of a string"
             },
             {
              "key": "access_token",
              "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
              "type": "string",
              "description": "A *production* Content Delivery API key."
             },
             {
              "key": "entry_id",
              "value": "5KsDBWseXY6QegucYAoacS",
              "type": "string",
              "description": "Alphanumeric id of the entry to retrieve."
             }
            ]
           },
           "description": "`fields.productName` is the only localized field in the `product` content type, so returns all other fields in the default locale.",
           "body": {
            "mode": "",
            "raw": "",
            "options": {
             "raw": {
              "language": ""
             }
            }
           }
          },
          "response": [
           {
            "name": "Query entries",
            "originalRequest": {
             "auth": {
              "type": "bearer",
              "bearer": [
               {
                "key": "token",
                "value": "{{cda_access_token}}",
                "type": "string"
               }
              ]
             },
             "method": "GET",
             "header": [],
             "url": {
              "raw": "https://{{cda_url}}/spaces/:space_id/environments/:environment_id/entries/:entry_id?\u0026locale=LOCALE",
              "protocol": "https",
              "host": [
               "{{cda_url}}"
              ],
              "path": [
               "spaces",
               ":space_id",
               "environments",
               ":environment_id",
               "entries",
               ":entry_id"
              ],
              "query": [
               {
                "key": "locale",
                "value": "LOCALE"
               }
              ],
              "variable": [
               {
                "key": "space_id",
                "value": "yadj1kx9rmg0",
                "type": "string",
                "description": "Alphanumeric id of the space to retrieve."
               },
               {
                "key": "environment_id",
                "value": "staging",
                "type": "string",
                "description": "ID of the environment in form of a string"
               },
               {
                "key": "access_token",
                "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
                "type": "string",
                "description": "A *production* Content Delivery API key."
               },
               {
                "key": "entry_id",
                "value": "5KsDBWseXY6QegucYAoacS",
                "type": "string",
                "description": "Alphanumeric id of the entry to retrieve."
               }
              ]
             },
             "description": "`fields.productName` is the only localized field in the `product` content type, so returns all other fields in the default locale.",
             "body": {
              "mode": "",
              "raw": "",
              "options": {
               "raw": {
                "language": ""
               }
              }
             }
            },
            "status": "",
            "code": 200,
            "header": [
             {
              "key": "Content-Type",
              "value": "application/vnd.contentful.delivery.v1+json",
              "description": ""
             }
            ],
            "cookie": null,
            "body": "{\n  \"sys\": {\n    \"type\": \"Array\"\n  },\n  \"total\": 0,\n  \"skip\": 0,\n  \"limit\": 100,\n  \"items\": []\n}"
           }
          ]
         }
        ],
        "description": "You can specify a locale for entries using the `locale` URI query parameter.\n\nThe locale parameter must be the code of a locale in the space you're querying, or the wildcard value `*`. If you don't specify a locale, the default locale of the space is used.\n\nIf there's no content available for the requested locale the API will try the fallback locale of the requested locale.\n\nFor example you have the `de-CH` (Swiss German) locale and configure it to fallback to `de-DE` (German). When you request content for `de-CH` any missing field in that locale will be replace with its fallback value in `de-DE` (if they exist). For more information about locale fallbacks read [the locale section of the CMA docs](/developers/docs/references/content-management-api/#/reference/locales).\n\nWhen you specify `locale=*`, field values are nested in an object with keys corresponding to each locale with a defined value. Instead of writing `fields.productName` when accessing the response data from your code, use `fields.productName[localeCode]`.\n\nIf the result contains only a single locale, resources will include the property `sys.locale` indicating the locale of that object.\n\nLearn more about locales in our [concepts document](/developers/docs/concepts/locales/)."
       },
       {
        "name": "Initial synchronization",
        "item": [
         {
          "name": "Query entries",
          "request": {
           "auth": {
            "type": "bearer",
            "bearer": [
             {
              "key": "token",
              "value": "{{cda_access_token}}",
              "type": "string"
             }
            ]
           },
           "method": "GET",
           "header": [],
           "url": {
            "raw": "https://{{cda_url}}/spaces/:space_id/sync?\u0026initial=TRUE\u0026type=TYPE\u0026limit=LIMIT",
            "protocol": "https",
            "host": [
             "{{cda_url}}"
            ],
            "path": [
             "spaces",
             ":space_id",
             "sync"
            ],
            "query": [
             {
              "key": "type",
              "value": "TYPE"
             },
             {
              "key": "limit",
              "value": "LIMIT"
             },
             {
              "key": "initial",
              "value": "TRUE"
             }
            ],
            "variable": [
             {
              "key": "space_id",
              "value": "yadj1kx9rmg0",
              "type": "string",
              "description": "Alphanumeric `id` of the Space to retrieve."
             },
             {
              "key": "access_token",
              "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
              "type": "string",
              "description": "A *production* Content Delivery API key."
             }
            ]
           },
           "description": "",
           "body": {
            "mode": "",
            "raw": "",
            "options": {
             "raw": {
              "language": ""
             }
            }
           }
          },
          "response": [
           {
            "name": "Query entries",
            "originalRequest": {
             "auth": {
              "type": "bearer",
              "bearer": [
               {
                "key": "token",
                "value": "{{cda_access_token}}",
                "type": "string"
               }
              ]
             },
             "method": "GET",
             "header": [],
             "url": {
              "raw": "https://{{cda_url}}/spaces/:space_id/sync?\u0026initial=TRUE\u0026type=TYPE\u0026limit=LIMIT",
              "protocol": "https",
              "host": [
               "{{cda_url}}"
              ],
              "path": [
               "spaces",
               ":space_id",
               "sync"
              ],
              "query": [
               {
                "key": "type",
                "value": "TYPE"
               },
               {
                "key": "limit",
                "value": "LIMIT"
               },
               {
                "key": "initial",
                "value": "TRUE"
               }
              ],
              "variable": [
               {
                "key": "space_id",
                "value": "yadj1kx9rmg0",
                "type": "string",
                "description": "Alphanumeric `id` of the Space to retrieve."
               },
               {
                "key": "access_token",
                "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
                "type": "string",
                "description": "A *production* Content Delivery API key."
               }
              ]
             },
             "description": "",
             "body": {
              "mode": "",
              "raw": "",
              "options": {
               "raw": {
                "language": ""
               }
              }
             }
            },
            "status": "",
            "code": 200,
            "header": [
             {
              "key": "Content-Type",
              "value": "application/vnd.contentful.delivery.v1+json",
              "description": ""
             }
            ],
            "cookie": null,
            "body": "{\n  \"sys\": {\n    \"type\": \"Array\"\n  },\n  \"total\": 0,\n  \"skip\": 0,\n  \"limit\": 100,\n  \"items\": []\n}"
           }
          ]
         }
        ],
        "description": "A client syncs content by using the sync endpoint. A single sync consists of one or more pages, each a separate request and response.\n\nThe first time a client synchronizes content it sends a request to the sync endpoint with the URI query parameter `initial` set to `true`.\n\nYou should only sync with `initial=true` for the initial sync when a client has no existing content. This transfers all content from a space, but **does not** contain content deleted from fields or deleted assets and content entries.\n\nThe `limit` parameter sets the page size for the number of retrieved entries. The limit is useful when you have very large content entries and reach the maximum response size limit. This limit is then encoded in the synchronization token and used for all following synchronizations.\n\nSync only contains content from the master environment and is not containing deltas from sandbox environments."
       },
       {
        "name": "Initial synchronization of entries of a specific content type",
        "item": [
         {
          "name": "Query entries",
          "request": {
           "auth": {
            "type": "bearer",
            "bearer": [
             {
              "key": "token",
              "value": "{{cda_access_token}}",
              "type": "string"
             }
            ]
           },
           "method": "GET",
           "header": [],
           "url": {
            "raw": "https://{{cda_url}}/spaces/:space_id/sync?\u0026initial=TRUE\u0026type=ENTRY\u0026content_type=CONTENT_TYPE\u0026limit=LIMIT",
            "protocol": "https",
            "host": [
             "{{cda_url}}"
            ],
            "path": [
             "spaces",
             ":space_id",
             "sync"
            ],
            "query": [
             {
              "key": "initial",
              "value": "TRUE"
             },
             {
              "key": "type",
              "value": "ENTRY"
             },
             {
              "key": "content_type",
              "value": "CONTENT_TYPE"
             },
             {
              "key": "limit",
              "value": "LIMIT"
             }
            ],
            "variable": [
             {
              "key": "space_id",
              "value": "yadj1kx9rmg0",
              "type": "string",
              "description": "Alphanumeric `id` of the Space to retrieve."
             },
             {
              "key": "access_token",
              "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
              "type": "string",
              "description": "A *production* Content Delivery API key."
             }
            ]
           },
           "description": "",
           "body": {
            "mode": "",
            "raw": "",
            "options": {
             "raw": {
              "language": ""
             }
            }
           }
          },
          "response": [
           {
            "name": "Query entries",
            "originalRequest": {
             "auth": {
              "type": "bearer",
              "bearer": [
               {
                "key": "token",
                "value": "{{cda_access_token}}",
                "type": "string"
               }
              ]
             },
             "method": "GET",
             "header": [],
             "url": {
              "raw": "https://{{cda_url}}/spaces/:space_id/sync?\u0026initial=TRUE\u0026type=ENTRY\u0026content_type=CONTENT_TYPE\u0026limit=LIMIT",
              "protocol": "https",
              "host": [
               "{{cda_url}}"
              ],
              "path": [
               "spaces",
               ":space_id",
               "sync"
              ],
              "query": [
               {
                "key": "initial",
                "value": "TRUE"
               },
               {
                "key": "type",
                "value": "ENTRY"
               },
               {
                "key": "content_type",
                "value": "CONTENT_TYPE"
               },
               {
                "key": "limit",
                "value": "LIMIT"
               }
              ],
              "variable": [
               {
                "key": "space_id",
                "value": "yadj1kx9rmg0",
                "type": "string",
                "description": "Alphanumeric `id` of the Space to retrieve."
               },
               {
                "key": "access_token",
                "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
                "type": "string",
                "description": "A *production* Content Delivery API key."
               }
              ]
             },
             "description": "",
             "body": {
              "mode": "",
              "raw": "",
              "options": {
               "raw": {
                "language": ""
               }
              }
             }
            },
            "status": "",
            "code": 200,
            "header": [
             {
              "key": "Content-Type",
              "value": "application/vnd.contentful.delivery.v1+json",
              "description": ""
             }
            ],
            "cookie": null,
            "body": "{\n  \"sys\": {\n    \"type\": \"Array\"\n  },\n  \"total\": 0,\n  \"skip\": 0,\n  \"limit\": 100,\n  \"items\": []\n}"
           }
          ]
         }
        ],
        "description": "For entries, you can also specify a `content_type` parameter. When specifying `content_type` you must specify `type` as `Entry` (meaning there will be no deletions). You can only specify the `type` and `content_type` parameter at the initial sync along with the `initial` parameter. Any subsequent syncs will only include the types you have specified. If you want to sync entries by content type you should separately subscribe to a `Deletion` or `DeletedEntry` sync to be notified when entries are deleted."
       },
       {
        "name": "Pagination and subsequent syncs",
        "item": [
         {
          "name": "Query entries",
          "request": {
           "auth": {
            "type": "bearer",
            "bearer": [
             {
              "key": "token",
              "value": "{{cda_access_token}}",
              "type": "string"
             }
            ]
           },
           "method": "GET",
           "header": [],
           "url": {
            "raw": "https://{{cda_url}}/spaces/:space_id/sync?\u0026sync_token=SYNC_TOKEN",
            "protocol": "https",
            "host": [
             "{{cda_url}}"
            ],
            "path": [
             "spaces",
             ":space_id",
             "sync"
            ],
            "query": [
             {
              "key": "sync_token",
              "value": "SYNC_TOKEN"
             }
            ],
            "variable": [
             {
              "key": "space_id",
              "value": "yadj1kx9rmg0",
              "type": "string",
              "description": "Alphanumeric `id` of the Space to retrieve."
             },
             {
              "key": "access_token",
              "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
              "type": "string",
              "description": "A *production* Content Delivery API key."
             }
            ]
           },
           "description": "",
           "body": {
            "mode": "",
            "raw": "",
            "options": {
             "raw": {
              "language": ""
             }
            }
           }
          },
          "response": [
           {
            "name": "Query entries",
            "originalRequest": {
             "auth": {
              "type": "bearer",
              "bearer": [
               {
                "key": "token",
                "value": "{{cda_access_token}}",
                "type": "string"
               }
              ]
             },
             "method": "GET",
             "header": [],
             "url": {
              "raw": "https://{{cda_url}}/spaces/:space_id/sync?\u0026sync_token=SYNC_TOKEN",
              "protocol": "https",
              "host": [
               "{{cda_url}}"
              ],
              "path": [
               "spaces",
               ":space_id",
               "sync"
              ],
              "query": [
               {
                "key": "sync_token",
                "value": "SYNC_TOKEN"
               }
              ],
              "variable": [
               {
                "key": "space_id",
                "value": "yadj1kx9rmg0",
                "type": "string",
                "description": "Alphanumeric `id` of the Space to retrieve."
               },
               {
                "key": "access_token",
                "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
                "type": "string",
                "description": "A *production* Content Delivery API key."
               }
              ]
             },
             "description": "",
             "body": {
              "mode": "",
              "raw": "",
              "options": {
               "raw": {
                "language": ""
               }
              }
             }
            },
            "status": "",
            "code": 200,
            "header": [
             {
              "key": "Content-Type",
              "value": "application/vnd.contentful.delivery.v1+json",
              "description": ""
             }
            ],
            "cookie": null,
            "body": "{\n  \"sys\": {\n    \"type\": \"Array\"\n  },\n  \"total\": 0,\n  \"skip\": 0,\n  \"limit\": 100,\n  \"items\": []\n}"
           }
          ]
         }
        ],
        "description": "Synchronization responses contain either a `nextPageUrl` or `nextSyncUrl` attribute. If there is more content for the current sync, `nextPageUrl` will contain an URL with a `sync_token` which will retrieve the next page. This continues until you have retrieved all content.\n\nAt this point, the response will contain a `nextSyncUrl` which you use to make requests in the future and retrieve delta updates between the current content on Contentful and what you retrieved with your last sync request. Upon completion, you will receive a new `nextSyncUrl` which you can again use for future updates.\n\nIf a client loses the `nextSyncUrl`, the client should delete its local content and perform an initial synchronization again.\n\n**NOTE**: The initial query with `sync_token` will persist across subsequent syncs."
       },
       {
        "name": "Structure of deleted entities",
        "item": [
         {
          "name": "Query deleted entries",
          "request": {
           "auth": {
            "type": "bearer",
            "bearer": [
             {
              "key": "token",
              "value": "{{cda_access_token}}",
              "type": "string"
             }
            ]
           },
           "method": "GET",
           "header": [],
           "url": {
            "raw": "https://{{cda_url}}/spaces/:space_id/sync?\u0026sync_token=SYNC_TOKEN",
            "protocol": "https",
            "host": [
             "{{cda_url}}"
            ],
            "path": [
             "spaces",
             ":space_id",
             "sync"
            ],
            "query": [
             {
              "key": "sync_token",
              "value": "SYNC_TOKEN"
             }
            ],
            "variable": [
             {
              "key": "space_id",
              "value": "yadj1kx9rmg0",
              "type": "string",
              "description": "Alphanumeric `id` of the Space to retrieve."
             },
             {
              "key": "access_token",
              "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
              "type": "string",
              "description": "A *production* Content Delivery API key."
             }
            ]
           },
           "description": "",
           "body": {
            "mode": "",
            "raw": "",
            "options": {
             "raw": {
              "language": ""
             }
            }
           }
          },
          "response": [
           {
            "name": "Query deleted entries",
            "originalRequest": {
             "auth": {
              "type": "bearer",
              "bearer": [
               {
                "key": "token",
                "value": "{{cda_access_token}}",
                "type": "string"
               }
              ]
             },
             "method": "GET",
             "header": [],
             "url": {
              "raw": "https://{{cda_url}}/spaces/:space_id/sync?\u0026sync_token=SYNC_TOKEN",
              "protocol": "https",
              "host": [
               "{{cda_url}}"
              ],
              "path": [
               "spaces",
               ":space_id",
               "sync"
              ],
              "query": [
               {
                "key": "sync_token",
                "value": "SYNC_TOKEN"
               }
              ],
              "variable": [
               {
                "key": "space_id",
                "value": "yadj1kx9rmg0",
                "type": "string",
                "description": "Alphanumeric `id` of the Space to retrieve."
               },
               {
                "key": "access_token",
                "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
                "type": "string",
                "description": "A *production* Content Delivery API key."
               }
              ]
             },
             "description": "",
             "body": {
              "mode": "",
              "raw": "",
              "options": {
               "raw": {
                "language": ""
               }
              }
             }
            },
            "status": "",
            "code": 200,
            "header": [
             {
              "key": "Content-Type",
              "value": "application/vnd.contentful.delivery.v1+json",
              "description": ""
             }
            ],
            "cookie": null,
            "body": "{\n  \"sys\": {\n    \"type\": \"Array\"\n  },\n  \"items\": [\n    {\n      \"space\": {\n        \"sys\": {\n          \"type\": \"Link\",\n          \"linkType\": \"Space\",\n          \"id\": \"yadj1kx9rmg0\"\n        }\n      },\n      \"id\": \"5JMlyOmxS8gGkAwUmksigY\",\n      \"type\": \"DeletedEntry\",\n      \"createdAt\": \"2018-01-10T12:24:21.044Z\",\n      \"updatedAt\": \"2018-01-10T12:24:21.044Z\",\n      \"deletedAt\": \"2018-01-10T12:24:21.044Z\",\n      \"revision\": \"1\"\n    }\n  ],\n  \"nextSyncUrl\": \"https://cdn.contentful.com/spaces/yadj1kx9rmg0/sync?sync_token=wonDrcKnRgcSOF4-wrDCgcKefWzCgsOxDCvDsMO3MMO6wpLDs2bDjH4kwo48NWjDuMOqwqnDn0Ztwq7CpMKdwofDjXknwrZcXmsDw57Dj8O3w5bChCAVE8OVOsK9KRbColwrY8OQw6QBC8Kqw47Cq3jDnsO8TUU6wp3DicK8w6zCr8OTJxI4OVfCqw3Dr8ObHg\"\n}"
           }
          ]
         },
         {
          "name": "Query deleted assets",
          "request": {
           "auth": {
            "type": "bearer",
            "bearer": [
             {
              "key": "token",
              "value": "{{cda_access_token}}",
              "type": "string"
             }
            ]
           },
           "method": "GET",
           "header": [],
           "url": {
            "raw": "https://{{cda_url}}/spaces/:space_id/sync?\u0026sync_token=SYNC_TOKEN",
            "protocol": "https",
            "host": [
             "{{cda_url}}"
            ],
            "path": [
             "spaces",
             ":space_id",
             "sync"
            ],
            "query": [
             {
              "key": "sync_token",
              "value": "SYNC_TOKEN"
             }
            ],
            "variable": [
             {
              "key": "space_id",
              "value": "yadj1kx9rmg0",
              "type": "string",
              "description": "Alphanumeric `id` of the Space to retrieve."
             },
             {
              "key": "access_token",
              "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
              "type": "string",
              "description": "A *production* Content Delivery API key."
             }
            ]
           },
           "description": "",
           "body": {
            "mode": "",
            "raw": "",
            "options": {
             "raw": {
              "language": ""
             }
            }
           }
          },
          "response": [
           {
            "name": "Query deleted assets",
            "originalRequest": {
             "auth": {
              "type": "bearer",
              "bearer": [
               {
                "key": "token",
                "value": "{{cda_access_token}}",
                "type": "string"
               }
              ]
             },
             "method": "GET",
             "header": [],
             "url": {
              "raw": "https://{{cda_url}}/spaces/:space_id/sync?\u0026sync_token=SYNC_TOKEN",
              "protocol": "https",
              "host": [
               "{{cda_url}}"
              ],
              "path": [
               "spaces",
               ":space_id",
               "sync"
              ],
              "query": [
               {
                "key": "sync_token",
                "value": "SYNC_TOKEN"
               }
              ],
              "variable": [
               {
                "key": "space_id",
                "value": "yadj1kx9rmg0",
                "type": "string",
                "description": "Alphanumeric `id` of the Space to retrieve."
               },
               {
                "key": "access_token",
                "value": "fdb4e7a3102747a02ea69ebac5e282b9e44d28fb340f778a4f5e788625a61abe",
                "type": "string",
                "description": "A *production* Content Delivery API key."
               }
              ]
             },
             "description": "",
             "body": {
              "mode": "",
              "raw": "",
              "options": {
               "raw": {
                "language": ""
               }
              }
             }
            },
            "status": "",
            "code": 200,
            "header": [
             {
              "key": "Content-Type",
              "value": "application/vnd.contentful.delivery.v1+json",
              "description": ""
             }
            ],
            "cookie": null,
            "body": "{\n  \"sys\": {\n    \"type\": \"Array\"\n  },\n  \"items\": [\n    {\n      \"space\": {\n        \"sys\": {\n          \"type\": \"Link\",\n          \"linkType\": \"Space\",\n          \"id\": \"yadj1kx9rmg0\"\n        }\n      },\n      \"id\": \"5BfQVRz3QkAgcMqaCGa2my\",\n      \"type\": \"DeletedAsset\",\n      \"createdAt\": \"2018-01-10T12:30:27.120Z\",\n      \"updatedAt\": \"2018-01-10T12:30:27.120Z\",\n      \"deletedAt\": \"2018-01-10T12:30:27.120Z\",\n      \"revision\": \"1\"\n    }\n  ],\n  \"nextSyncUrl\": \"https://cdn.contentful.com/spaces/yadj1kx9rmg0/sync?sync_token=wonDrcKnRgcSOF4-wrDCgcKefWzCgsOxDCvDsMO3MMO6wpLDs2bDjH4kwo48NWjDuMOqwqnDn0Ztwq7CpMKdwofDjXknwrZcXhrDtMKiw6TCmm_DlxTDjizDqkvCusOpwolsw67DmVTDnMKWFMOGw65kwoEvwrjDoMK_axLCkMKKw6nCosOqwrNCw6M6wpp0XlHDgsKHaQ\"\n}"
           }
          ]
         }
        ],
        "description": "For deletions, objects of the types `DeletedAsset` and `DeletedEntry` are sent. Those do not contain full assets or entries."
       }
      ]
     }
    ]
   }