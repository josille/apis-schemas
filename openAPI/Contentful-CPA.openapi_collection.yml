openapi: 3.0.0
info:
  title: Content Preview API
  description:  >-
    In addition to the Content Delivery API (CDA) for published content, is the Preview API for previewing unpublished content as though it were published. It maintains the same behaviour and parameters as the CDA, but delivers the latest draft for entries and assets.
  version: 1.0.0
externalDocs:
  url: https://www.contentful.com/developers/docs/references/content-preview-api/
servers:
  - url: https://preview.contentful.com
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
tags:
  - name: Spaces
  - name: Content Types
  - name: Entries
  - name: Assets
  - name: Asset key
  - name: Locales
  - name: Content tags
  - name: Search
  - name: Localization
paths:
  /spaces/{space_id}/:
    get:
      tags:
        - Spaces
      summary: Space
      description: >-
        https://www.contentful.com/developers/docs/references/content-preview-api/#/reference/spaces/space
      security:
        - bearerAuth: []
      parameters:
        - name: space_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /spaces/{space_id}/environments/{environment_id}/content_types:
    get:
      tags:
        - Content Types
      summary: Content Model
      description: >-
        https://www.contentful.com/developers/docs/references/content-preview-api/#/reference/content-types/content-model
      security:
        - bearerAuth: []
      parameters:
        - name: space_id
          in: path
          schema:
            type: string
          required: true
        - name: environment_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /spaces/{space_id}/environments/{environment_id}/content_types/{content_type_id}:
    get:
      tags:
        - Content Types
      summary: Content Type
      description: >-
        https://www.contentful.com/developers/docs/references/content-preview-api/#/reference/content-types/content-type
      security:
        - bearerAuth: []
      parameters:
        - name: space_id
          in: path
          schema:
            type: string
          required: true
        - name: environment_id
          in: path
          schema:
            type: string
          required: true
        - name: content_type_id
          in: path
          schema:
            type: string
          required: true
          description: imageWithFocalPoint
          example: imageWithFocalPoint
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /spaces/{space_id}/environments/{environment_id}/entries:
    get:
      tags:
        - Entries
      summary: Entries Collection
      description: >-
        https://www.contentful.com/developers/docs/references/content-preview-api/#/reference/entries/entries-collection
      security:
        - bearerAuth: []
      parameters:
        - name: environment_id
          in: path
          schema:
            type: string
          required: true
          example: master
        - name: space_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /spaces/{space_id}/environments/{environment_id}/entries/{entry_id}:
    get:
      tags:
        - Entries
      summary: Entry
      description: >-
        https://www.contentful.com/developers/docs/references/content-preview-api/#/reference/entries/entry
      security:
        - bearerAuth: []
      parameters:
        - name: space_id
          in: path
          schema:
            type: string
          required: true
        - name: environment_id
          in: path
          schema:
            type: string
          required: true
        - name: entry_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /spaces/{space_id}/environments/{environment_id}/assets:
    get:
      tags:
        - Assets
      summary: Assets of space - Collection
      description: >-
        https://www.contentful.com/developers/docs/references/content-preview-api/#/reference/assets/assets-collection
      security:
        - bearerAuth: []
      parameters:
        - name: space_id
          in: path
          schema:
            type: string
          required: true
        - name: environment_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /spaces/{space_id}/environments/{environment_id}/assets/{asset_id}:
    get:
      tags:
        - Assets
      summary: Asset
      description: >-
        https://www.contentful.com/developers/docs/references/content-preview-api/#/reference/assets/asset
      security:
        - bearerAuth: []
      parameters:
        - name: environment_id
          in: path
          schema:
            type: string
          required: true
        - name: space_id
          in: path
          schema:
            type: string
          required: true
        - name: asset_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /spaces/{space_id}/environments/{environment_id}/asset_keys:
    post:
      tags:
        - Asset key
      summary: Asset key
      description: >-
        https://www.contentful.com/developers/docs/references/content-preview-api/#/reference/assets/asset
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                expiresAt: 1613590465
      security:
        - bearerAuth: []
      parameters:
        - name: space_id
          in: path
          schema:
            type: string
          required: true
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/vnd.contentful.management.v1+json
        - name: environment_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /spaces/{space_id}/environments/{environment_id}/locales:
    get:
      tags:
        - Locales
      summary: Locale - Collection
      description: >-
        https://www.contentful.com/developers/docs/references/content-preview-api/#/reference/locales/locale-collection
      security:
        - bearerAuth: []
      parameters:
        - name: space_id
          in: path
          schema:
            type: string
          required: true
        - name: environment_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /spaces/{space_id}/environments/{environment_id}/tags:
    get:
      tags:
        - Content tags
      summary: Tag - collection
      description: >-
        https://www.contentful.com/developers/docs/references/content-preview-api/#/reference/locales/locale-collection
      security:
        - bearerAuth: []
      parameters:
        - name: space_id
          in: path
          schema:
            type: string
          required: true
        - name: environment_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /spaces/{space_id}/environments/{environment_id}/tags/{tags_id}:
    get:
      tags:
        - Content tags
      summary: Tag
      description: >-
        https://www.contentful.com/developers/docs/references/content-preview-api/#/reference/locales/locale-collection
      security:
        - bearerAuth: []
      parameters:
        - name: space_id
          in: path
          schema:
            type: string
          required: true
        - name: environment_id
          in: path
          schema:
            type: string
          required: true
        - name: tags_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /spaces/{space_id}/environments/{environment_id}/entries/:
    get:
      tags:
        - Search
      summary: Search in entries
      description: >-
        1. Using a bounding rectangle:

        To search for locations within a rectangle area object, use the
        structure
        field.center[within]=latitude1,longitude1,latitude2,longitude2, where:


        latitude1 and longitude1 refer to the coordinates of the bottom left
        corner of the rectangle.


        latitude2 and longitude2 refer to the coordinates of the top right
        corner of the rectangle.


        2. Using a bounding circle:

        The structure field.center[within]=latitute,longitude,radius will return
        entries included in the circle with fields.center of the given latitude,
        longitude and radius (in km).
      security:
        - bearerAuth: []
      parameters:
        - name: space_id
          in: path
          schema:
            type: string
          required: true
          description: space to use
          example: 5nvk6q4s3ttw
        - name: environment_id
          in: path
          schema:
            type: string
          required: true
          description: space environment to use
          example: master
        - name: include
          in: query
          required: false
          schema:
            type: string
          description: Number of levels to include (defaults to 1)
        - name: content_type
          in: query
          required: false
          schema:
            type: string
          description: Alphanumeric id of the content type to retrieve.
          example: 2PqfXUJwE8qSYKuM0U6w8M
        - name: select
          in: query
          schema:
            type: string
          description: select operator allows you to choose what fields to return from an entity.
          example: sys.id
        - name: key
          in: query
          required: false
          schema:
            type: string
          description: Part of the query parameter to search on
          examples:
            all:
              value: metadata.tags.sys.id[all]
              summary: Querying content based on a set of tags
            in:
              value: metadata.tags.sys.id[in]
              summary: You can filter a field by multiple values with the [in] operator
            nin:
              value: metadata.tags.sys.id[nin]
              summary: You can filter a field by multiple (exclude) values with the [nin] operator
            exist:
              value: metadata.tags[exists]
              summary: You can check for the presence of a field using the [exists] operator
            lt:
              value: metadata.revision[lt]
              summary: Range operator - Less than
            lte:
              value: metadata.revision[lte]
              summary: Range operator - Less than or equal
            gt:
              value: metadata.revision[gt]
              summary: Range operator - Greater than
            gte:
              value: metadata.revision[gte]
              summary: Range operator - Greater than or equal
        - name: query
          in: query
          required: false
          schema:
            type: string
          description: Full-text search.
          example: design,some text here
        - name: fields.{field_id}[match]
          in: query
          required: false
          schema:
            type: string
          description: Full-text search on a field.
          example: fields.website[match]=content
        - name: fields.center[near]
          in: query
          required: false
          schema:
            type: string
          description: Location proximity search.
          example: fields.center[near]=38,-122
        - name: fields.center[within]
          in: query
          required: false
          schema:
            type: string
          description: Locations in a bounding object, rectangle or circle.
          examples:
            rectangle:
              value: field.center[within]=latitude1,longitude1,latitude2,longitude2
              summary: Using a bounding rectangle
            circle:
              value: field.center[within]=latitute,longitude,radius
              summary: Using a bounding circle
        - name: links_to_entry
          in: query
          required: false
          schema:
            type: string
          description: Links to entry ID.
          example: links_to_entry=4LgMotpNF6W20YKmuemW0a
        - name: links_to_asset
          in: query
          required: false
          schema:
            type: string
          description: Links to asset ID.
          example: links_to_asset=4LgMotpNF6W20YKmuemW0a
        - name: order
          in: query
          required: false
          schema:
            type: string
          description: Order by of results.
          examples:
            asc:
              value: order=sys.createdAt
              summary: Asc
            desc:
              value: order=-sys.createdAt
              summary: Desc
            multiple:
              value: order=sys.createdAt,sys.publishedAt
              summary: Multiple parameters
        - name: limit
          in: query
          required: false
          schema:
            type: string
          description: Maximum number of results
          example: limit=100
        - name: skip
          in: query
          required: false
          schema:
            type: string
          description: Offset
          example: skip=100
        - name: locale
          in: query
          required: false
          schema:
            type: string
          description: Retrieve localized entries
          examples:
            locale:
              value: locale=EN-us
              summary: single locale
            all_locales:
              value: locale=*
              summary: all locales
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /spaces/{space_id}/environments/{environment_id}/assets/:
    get:
      tags:
        - Search
      summary:  Search in assets
      description: >-
        1. Using a bounding rectangle:

        To search for locations within a rectangle area object, use the
        structure
        field.center[within]=latitude1,longitude1,latitude2,longitude2, where:


        latitude1 and longitude1 refer to the coordinates of the bottom left
        corner of the rectangle.


        latitude2 and longitude2 refer to the coordinates of the top right
        corner of the rectangle.


        2. Using a bounding circle:

        The structure field.center[within]=latitute,longitude,radius will return
        entries included in the circle with fields.center of the given latitude,
        longitude and radius (in km).


        https://www.contentful.com/developers/docs/references/content-preview-api/#/reference/search-parameters/filtering-assets-by-mime-type
      security:
        - bearerAuth: []
      parameters:
        - name: space_id
          in: path
          schema:
            type: string
          required: true
          description: space to use
          example: 5nvk6q4s3ttw
        - name: environment_id
          in: path
          schema:
            type: string
          required: true
          description: space environment to use
          example: master
        
        - name: mimetype_group
          in: query
          required: false
          schema:
            type: string
          description: Filtering assets by MIME type
          examples:
            attachment:
              value: mimetype_group=attachment
              summary: attachment
            plaintext:
              value: mimetype_group=plaintext
              summary: plaintext
            image:
              value: mimetype_group=image
              summary: image
            audio:
              value: mimetype_group=audio
              summary: audio
            video:
              value: mimetype_group=video
              summary: video
            richtext:
              value: mimetype_group=richtext
              summary: richtext
            presentation:
              value: mimetype_group=presentation
              summary: presentation
            spreadsheet:
              value: mimetype_group=spreadsheet
              summary: spreadsheet
            pdfdocument:
              value: mimetype_group=pdfdocument
              summary: pdfdocument
            archive:
              value: mimetype_group=archive
              summary: archive
            code:
              value: mimetype_group=code
              summary: code
            markup:
              value: mimetype_group=markup
              summary: markup
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /spaces/{space_id}/environments/{environment_id}/entries/{entry_id}/:
    get:
      tags:
        - Localization
      summary: Entry by locale
      description: >-
        https://www.contentful.com/developers/docs/references/content-preview-api/#/reference/localization/retrieve-localized-entries
      security:
        - bearerAuth: []
      parameters:
        - name: locale
          in: query
          schema:
            type: string
          example: en-US
        - name: space_id
          in: path
          schema:
            type: string
          required: true
        - name: environment_id
          in: path
          schema:
            type: string
          required: true
        - name: entry_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
